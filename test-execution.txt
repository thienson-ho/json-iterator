  Fetch URL: https://github.com/thienson-ho/json-iterator.git
SHA: 390c2828ade29a6366c49d1df4184129e0ccf4db
[INFO] Scanning for projects...
[INFO] Inspecting build with total of 1 modules...
[INFO] Installing Nexus Staging features:
[INFO]   ... total of 1 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin
[INFO] 
[INFO] -----------------------< com.jsoniter:jsoniter >------------------------
[INFO] Building json iterator 0.9.23
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.4:prepare-agent (jacoco-initialize) @ jsoniter ---
[INFO] argLine set to -javaagent:/Users/thiensonho/.m2/repository/org/jacoco/org.jacoco.agent/0.8.4/org.jacoco.agent-0.8.4-runtime.jar=destfile=/private/tmp/json-iterator/target/jacoco.exec,append=true,output=file
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ jsoniter ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /private/tmp/json-iterator/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ jsoniter ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ jsoniter ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /private/tmp/json-iterator/test/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ jsoniter ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.21.0:test (default-test) @ jsoniter ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running com.jsoniter.extra.TestBase64
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.295 s - in com.jsoniter.extra.TestBase64
[INFO] Running com.jsoniter.extra.TestNamingStrategy
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.434 s - in com.jsoniter.extra.TestNamingStrategy
[INFO] Running com.jsoniter.extra.TestPreciseFloat
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 s - in com.jsoniter.extra.TestPreciseFloat
[INFO] Running com.jsoniter.TestAnnotationJsonIgnore
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.513 s - in com.jsoniter.TestAnnotationJsonIgnore
[INFO] Running com.jsoniter.output.TestAnnotationJsonIgnore
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.288 s - in com.jsoniter.output.TestAnnotationJsonIgnore
[INFO] Running com.jsoniter.TestAnnotationJsonProperty
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.158 s - in com.jsoniter.TestAnnotationJsonProperty
[INFO] Running com.jsoniter.output.TestAnnotationJsonProperty
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 s - in com.jsoniter.output.TestAnnotationJsonProperty
[INFO] Running com.jsoniter.TestAnnotationJsonWrapper
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.323 s - in com.jsoniter.TestAnnotationJsonWrapper
[INFO] Running com.jsoniter.output.TestAnnotationJsonUnwrapper
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.096 s - in com.jsoniter.output.TestAnnotationJsonUnwrapper
[INFO] Running com.jsoniter.TestAnnotation
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 s - in com.jsoniter.TestAnnotation
[INFO] Running com.jsoniter.TestAnnotationJsonCreator
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 s - in com.jsoniter.TestAnnotationJsonCreator
[INFO] Running com.jsoniter.output.TestGenerics
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 s - in com.jsoniter.output.TestGenerics
[INFO] Running com.jsoniter.TestCustomizeType
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 s - in com.jsoniter.TestCustomizeType
[INFO] Running com.jsoniter.TestDemo
3
6
3
com.jsoniter.User@7c29adc8
score
100
score
102
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.21 s - in com.jsoniter.TestDemo
[INFO] Running com.jsoniter.TestExisting
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.11 s - in com.jsoniter.TestExisting
[INFO] Running com.jsoniter.TestGenerics
[INFO] Tests run: 22, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.133 s - in com.jsoniter.TestGenerics
[INFO] Running com.jsoniter.TestNested
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.073 s - in com.jsoniter.TestNested
[INFO] Running com.jsoniter.output.TestNested
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s - in com.jsoniter.output.TestNested
[INFO] Running com.jsoniter.TestObject
[INFO] Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.145 s - in com.jsoniter.TestObject
[INFO] Running com.jsoniter.TestReadAny
100
com.jsoniter.spi.JsonException: Value not found: failed to get index 0 from []
com.jsoniter.spi.JsonException: Value not found: failed to get index 0 from []
com.jsoniter.spi.JsonException: Value not found: failed to get key hello from {}
com.jsoniter.spi.JsonException: Value not found: failed to get key hello from {}
[INFO] Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 s - in com.jsoniter.TestReadAny
[INFO] Running com.jsoniter.TestSkip
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.081 s - in com.jsoniter.TestSkip
[INFO] Running com.jsoniter.TestSlice
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.jsoniter.TestSlice
[INFO] Running com.jsoniter.TestString
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in com.jsoniter.TestString
[INFO] Running com.jsoniter.output.TestString
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 s - in com.jsoniter.output.TestString
[INFO] Running com.jsoniter.TestWhatIsNext
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.087 s - in com.jsoniter.TestWhatIsNext
[INFO] Running com.jsoniter.output.TestAny
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.06 s - in com.jsoniter.output.TestAny
[INFO] Running com.jsoniter.any.TestArray
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.056 s - in com.jsoniter.any.TestArray
[INFO] Running com.jsoniter.TestArray
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.062 s - in com.jsoniter.TestArray
[INFO] Running com.jsoniter.output.TestSpiPropertyEncoder
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.jsoniter.output.TestSpiPropertyEncoder
[INFO] Running com.jsoniter.TestMap
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.663 s - in com.jsoniter.TestMap
[INFO] Running com.jsoniter.output.TestNative
[INFO] Tests run: 22, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.163 s - in com.jsoniter.output.TestNative
[INFO] Running com.jsoniter.TestBoolean
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.jsoniter.TestBoolean
[INFO] Running com.jsoniter.TestFloat
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.093 s - in com.jsoniter.TestFloat
[INFO] Running com.jsoniter.output.TestFloat
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.jsoniter.output.TestFloat
[INFO] Running com.jsoniter.output.TestInteger
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestInteger
[INFO] Running com.jsoniter.TestSkip
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.jsoniter.TestSkip
[INFO] Running com.jsoniter.TestSlice
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 s - in com.jsoniter.TestSlice
[INFO] Running com.jsoniter.TestString
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 s - in com.jsoniter.TestString
[INFO] Running com.jsoniter.output.TestString
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.jsoniter.output.TestString
[INFO] Running com.jsoniter.TestWhatIsNext
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.jsoniter.TestWhatIsNext
[INFO] Running com.jsoniter.output.TestNative
[INFO] Tests run: 22, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.jsoniter.output.TestNative
[INFO] Running com.jsoniter.TestBoolean
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.jsoniter.TestBoolean
[INFO] Running com.jsoniter.TestFloat
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in com.jsoniter.TestFloat
[INFO] Running com.jsoniter.output.TestFloat
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.jsoniter.output.TestFloat
[INFO] Running com.jsoniter.output.TestInteger
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestInteger
[INFO] Running com.jsoniter.TestSkip
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.087 s - in com.jsoniter.TestSkip
[INFO] Running com.jsoniter.TestSlice
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 s - in com.jsoniter.TestSlice
[INFO] Running com.jsoniter.TestString
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.jsoniter.TestString
[INFO] Running com.jsoniter.output.TestString
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 s - in com.jsoniter.output.TestString
[INFO] Running com.jsoniter.TestWhatIsNext
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 s - in com.jsoniter.TestWhatIsNext
[INFO] Running com.jsoniter.output.TestNative
[INFO] Tests run: 22, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in com.jsoniter.output.TestNative
[INFO] Running com.jsoniter.TestBoolean
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.093 s - in com.jsoniter.TestBoolean
[INFO] Running com.jsoniter.TestFloat
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in com.jsoniter.TestFloat
[INFO] Running com.jsoniter.output.TestFloat
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.jsoniter.output.TestFloat
[INFO] Running com.jsoniter.output.TestInteger
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestInteger
[INFO] Running com.jsoniter.output.TestJackson
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.622 s - in com.jsoniter.output.TestJackson
[INFO] Running com.jsoniter.TestJackson
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.179 s - in com.jsoniter.TestJackson
[INFO] Running com.jsoniter.output.TestSpiTypeEncoder
jsoniter_codegen.cfg1830135045.
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s - in com.jsoniter.output.TestSpiTypeEncoder
[INFO] Running com.jsoniter.TestSpiTypeDecoder
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 s - in com.jsoniter.TestSpiTypeDecoder
[INFO] Running com.jsoniter.TestSpiPropertyDecoder
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in com.jsoniter.TestSpiPropertyDecoder
com.jsoniter.suite.StreamingTestscom.jsoniter.spi.JsonException: java.lang.NullPointerException
	at com.jsoniter.JsonIterator.enableStreamingSupport(JsonIterator.java:551)
	at com.jsoniter.suite.StreamingTests.setup(StreamingTests.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)
	at org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54)
	at org.apache.maven.surefire.junitcore.pc.Scheduler.schedule(Scheduler.java:367)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410)
	at org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54)
	at org.apache.maven.surefire.junitcore.pc.Scheduler.schedule(Scheduler.java:367)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junitcore.pc.ParallelComputerBuilder$PC$1.run(ParallelComputerBuilder.java:593)
	at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)
	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)
	at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:158)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
Caused by: java.lang.NullPointerException
	at javassist.util.proxy.SecurityActions.setAccessible(SecurityActions.java:103)
	at javassist.util.proxy.DefineClassHelper.toClass3(DefineClassHelper.java:151)
	at javassist.util.proxy.DefineClassHelper.toClass2(DefineClassHelper.java:134)
	at javassist.util.proxy.DefineClassHelper.toClass(DefineClassHelper.java:95)
	at javassist.ClassPool.toClass(ClassPool.java:1143)
	at javassist.ClassPool.toClass(ClassPool.java:1106)
	at javassist.ClassPool.toClass(ClassPool.java:1064)
	at javassist.CtClass.toClass(CtClass.java:1275)
	at com.jsoniter.DynamicCodegen.enableStreamingSupport(DynamicCodegen.java:32)
	at com.jsoniter.JsonIterator.enableStreamingSupport(JsonIterator.java:547)
	... 41 more
[INFO] Running com.jsoniter.output.TestFloat
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestFloat
[INFO] Running com.jsoniter.TestAnnotationJsonObject
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestAnnotationJsonObject
[INFO] Running com.jsoniter.output.TestAnnotationJsonIgnore
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestAnnotationJsonIgnore
[INFO] Running com.jsoniter.output.TestAnnotationJsonUnwrapper
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestAnnotationJsonUnwrapper
[INFO] Running com.jsoniter.TestReadAny
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestReadAny
[INFO] Running com.jsoniter.output.TestNested
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestNested
[INFO] Running com.jsoniter.TestAnnotationJsonIgnore
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestAnnotationJsonIgnore
[INFO] Running com.jsoniter.TestSkip
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestSkip
[INFO] Running com.jsoniter.TestAnnotation
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestAnnotation
[INFO] Running com.jsoniter.TestFloat
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestFloat
[INFO] Running com.jsoniter.TestNested
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestNested
[INFO] Running com.jsoniter.TestWhatIsNext
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestWhatIsNext
[INFO] Running com.jsoniter.TestSpiPropertyDecoder
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestSpiPropertyDecoder
[INFO] Running com.jsoniter.output.TestGenerics
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestGenerics
[INFO] Running com.jsoniter.output.TestInteger
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestInteger
[INFO] Running com.jsoniter.TestOmitValue
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestOmitValue
[INFO] Running com.jsoniter.output.TestCollection
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestCollection
[INFO] Running com.jsoniter.output.TestSpiPropertyEncoder
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestSpiPropertyEncoder
[INFO] Running com.jsoniter.output.TestNative
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestNative
[INFO] Running com.jsoniter.output.TestSpiTypeEncoder
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestSpiTypeEncoder
[INFO] Running com.jsoniter.TestSpiTypeDecoder
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestSpiTypeDecoder
[INFO] Running com.jsoniter.TestSlice
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestSlice
[INFO] Running com.jsoniter.output.TestGson
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestGson
[INFO] Running com.jsoniter.TestAnnotationJsonCreator
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestAnnotationJsonCreator
[INFO] Running com.jsoniter.TestIO
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestIO
[INFO] Running com.jsoniter.output.TestArray
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestArray
[INFO] Running com.jsoniter.any.TestLong
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.any.TestLong
[INFO] Running com.jsoniter.TestBoolean
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestBoolean
[INFO] Running com.jsoniter.output.TestString
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestString
[INFO] Running com.jsoniter.output.TestMap
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestMap
[INFO] Running com.jsoniter.TestExisting
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestExisting
[INFO] Running com.jsoniter.output.TestObject
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestObject
[INFO] Running com.jsoniter.TestGenerics
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestGenerics
[INFO] Running com.jsoniter.TestGson
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestGson
[INFO] Running com.jsoniter.any.TestArray
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.any.TestArray
[INFO] Running com.jsoniter.TestArray
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestArray
[INFO] Running com.jsoniter.TestCustomizeType
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestCustomizeType
[INFO] Running com.jsoniter.TestString
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestString
[INFO] Running com.jsoniter.TestAnnotationJsonWrapper
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestAnnotationJsonWrapper
[INFO] Running com.jsoniter.any.TestList
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.any.TestList
[INFO] Running com.jsoniter.TestDemo
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestDemo
[INFO] Running com.jsoniter.TestAnnotationJsonProperty
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestAnnotationJsonProperty
[INFO] Running com.jsoniter.output.TestAnnotationJsonProperty
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestAnnotationJsonProperty
[INFO] Running com.jsoniter.TestMap
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestMap
[INFO] Running com.jsoniter.output.TestAny
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestAny
[INFO] Running com.jsoniter.TestObject
[INFO] Running com.jsoniter.TestGson
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestObject
[INFO] Running com.jsoniter.output.TestJackson
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestJackson
[INFO] Running com.jsoniter.output.TestStreamBuffer
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.output.TestStreamBuffer
[INFO] Running com.jsoniter.TestJackson
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.TestJackson
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.638 s - in com.jsoniter.TestGson
[INFO] Running com.jsoniter.output.TestStreamBuffer
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.174 s - in com.jsoniter.output.TestStreamBuffer
[INFO] Running com.jsoniter.any.TestList
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.179 s - in com.jsoniter.any.TestList
[INFO] Running com.jsoniter.TestAnnotationJsonObject
com.jsoniter.spi.JsonException: found should not present property: field1
com.jsoniter.spi.JsonException: unknown property: field-1
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 s - in com.jsoniter.TestAnnotationJsonObject
[INFO] Running com.jsoniter.any.TestLong
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.jsoniter.any.TestLong
[INFO] Running com.jsoniter.TestOmitValue
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.jsoniter.TestOmitValue
[INFO] Running com.jsoniter.output.TestCollection
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.019 s <<< FAILURE! - in com.jsoniter.output.TestCollection
[ERROR] test_indention(com.jsoniter.output.TestCollection)  Time elapsed: 0.017 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashSet with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.Iterator iter = ((java.util.Collection)obj).iterator();
if (!iter.hasNext()) { stream.write((byte)'[', (byte)']'); return; }
stream.writeArrayStart(); stream.writeIndention();
java.lang.Object e = iter.next();
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
while (iter.hasNext()) {
stream.writeMore();
e = iter.next();
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
}
stream.writeArrayEnd();
}

	at com.jsoniter.output.TestCollection.test_indention(TestCollection.java:26)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestCollection.test_indention(TestCollection.java:26)

[ERROR] test_indention_with_empty_array(com.jsoniter.output.TestCollection)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashSet with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg1755612019.encoder.java.util.HashSet: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.Iterator iter = ((java.util.Collection)obj).iterator();
if (!iter.hasNext()) { stream.write((byte)'[', (byte)']'); return; }
stream.writeArrayStart(); stream.writeIndention();
java.lang.Object e = iter.next();
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
while (iter.hasNext()) {
stream.writeMore();
e = iter.next();
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
}
stream.writeArrayEnd();
}

	at com.jsoniter.output.TestCollection.test_indention_with_empty_array(TestCollection.java:39)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg1755612019.encoder.java.util.HashSet: frozen class (cannot edit)
	at com.jsoniter.output.TestCollection.test_indention_with_empty_array(TestCollection.java:39)

[INFO] Running com.jsoniter.output.TestGson
[ERROR] Tests run: 15, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 0.502 s <<< FAILURE! - in com.jsoniter.output.TestGson
[ERROR] test_setDateFormat_with_style(com.jsoniter.output.TestGson)  Time elapsed: 0.009 s  <<< FAILURE!
junit.framework.ComparisonFailure: expected:<"January 1, 1970 []12:00:00 AM UTC"> but was:<"January 1, 1970 [at ]12:00:00 AM UTC">
	at com.jsoniter.output.TestGson.test_setDateFormat_with_style(TestGson.java:118)

[ERROR] test_surrogate(com.jsoniter.output.TestGson)  Time elapsed: 0.003 s  <<< FAILURE!
java.lang.AssertionError: java.lang.IllegalAccessException: class com.google.gson.internal.ConstructorConstructor$3 cannot access a member of class com.jsoniter.output.TestGson$TestObject with modifiers "private"
	at com.jsoniter.output.TestGson.test_surrogate(TestGson.java:292)
Caused by: java.lang.IllegalAccessException: class com.google.gson.internal.ConstructorConstructor$3 cannot access a member of class com.jsoniter.output.TestGson$TestObject with modifiers "private"
	at com.jsoniter.output.TestGson.test_surrogate(TestGson.java:292)

[INFO] Running com.jsoniter.output.TestArray
[ERROR] Tests run: 15, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.114 s <<< FAILURE! - in com.jsoniter.output.TestArray
[ERROR] test_indention(com.jsoniter.output.TestArray)  Time elapsed: 0.006 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { stream.write((byte)'[', (byte)']'); return; }
stream.writeArrayStart(); stream.writeIndention();
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.writeMore();
e = arr[i++];
stream.writeVal((int)e);
}
stream.writeArrayEnd();
}

	at com.jsoniter.output.TestArray.test_indention(TestArray.java:137)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestArray.test_indention(TestArray.java:137)

[ERROR] test_indention_with_empty_array(com.jsoniter.output.TestArray)  Time elapsed: 0.087 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg1755612019.encoder.int_array: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { stream.write((byte)'[', (byte)']'); return; }
stream.writeArrayStart(); stream.writeIndention();
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.writeMore();
e = arr[i++];
stream.writeVal((int)e);
}
stream.writeArrayEnd();
}

	at com.jsoniter.output.TestArray.test_indention_with_empty_array(TestArray.java:150)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg1755612019.encoder.int_array: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_indention_with_empty_array(TestArray.java:150)

[INFO] Running com.jsoniter.output.TestMap
[ERROR] Tests run: 11, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.066 s <<< FAILURE! - in com.jsoniter.output.TestMap
[ERROR] test_indention_with_empty_map(com.jsoniter.output.TestMap)  Time elapsed: 0.046 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashMap with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { stream.write((byte)'{', (byte)'}'); return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeObjectStart(); stream.writeIndention();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)entry.getValue());
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.writeMore();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)entry.getValue());
}
}
stream.writeObjectEnd();
}

	at com.jsoniter.output.TestMap.test_indention_with_empty_map(TestMap.java:135)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestMap.test_indention_with_empty_map(TestMap.java:135)

[INFO] Running com.jsoniter.output.TestObject
[ERROR] Tests run: 20, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 3.689 s <<< FAILURE! - in com.jsoniter.output.TestObject
[ERROR] test_omit_selft_defined(com.jsoniter.output.TestObject)  Time elapsed: 2.91 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject18 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject18 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
boolean notFirst = false;
if (!(true == obj.b)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'b', (byte)'\"', (byte)':');
stream.writeVal((boolean)obj.b);
}
if (!(true == obj.B.booleanValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'B', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Boolean)obj.B);
}
if (!(1 == obj.i)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'i', (byte)'\"', (byte)':');
stream.writeVal((int)obj.i);
}
if (!(1 == obj.I.intValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'I', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Integer)obj.I);
}
if (!(1 == obj.bt)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"bt\":", 5);
stream.writeVal((byte)obj.bt);
}
if (!(1 == obj.BT.byteValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"BT\":", 5);
stream.writeVal((java.lang.Byte)obj.BT);
}
if (!(1 == obj.s)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'s', (byte)'\"', (byte)':');
stream.writeVal((short)obj.s);
}
if (!(1 == obj.S.shortValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'S', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Short)obj.S);
}
if (!(1L == obj.l)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'l', (byte)'\"', (byte)':');
stream.writeVal((long)obj.l);
}
if (!(1L == obj.L.longValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'L', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Long)obj.L);
}
if (!(1F == obj.f)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'f', (byte)'\"', (byte)':');
stream.writeVal((float)obj.f);
}
if (!(1F == obj.F.floatValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'F', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Float)obj.F);
}
if (!(1D == obj.d)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'d', (byte)'\"', (byte)':');
stream.writeVal((double)obj.d);
}
if (!(1D == obj.D.doubleValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'D', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Double)obj.D);
}
if (!('a' == obj.c)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'c', (byte)'\"', (byte)':');
stream.writeVal((char)obj.c);
}
if (!('a' == obj.C.charValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'C', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Character)obj.C);
}
}

	at com.jsoniter.output.TestObject.test_omit_selft_defined(TestObject.java:410)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_omit_selft_defined(TestObject.java:410)

[ERROR] test_enum(com.jsoniter.output.TestObject)  Time elapsed: 0.042 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$MyEnum with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
stream.write('"');
stream.writeRaw(obj.toString());
stream.write('"');
}

	at com.jsoniter.output.TestObject.test_enum(TestObject.java:97)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_enum(TestObject.java:97)

[ERROR] test_omit_default(com.jsoniter.output.TestObject)  Time elapsed: 0.173 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject17 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject17 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
boolean notFirst = false;
if (!(false == obj.b)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'b', (byte)'\"', (byte)':');
stream.writeVal((boolean)obj.b);
}
if (!(0 == obj.i)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'i', (byte)'\"', (byte)':');
stream.writeVal((int)obj.i);
}
if (!(0 == obj.bt)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"bt\":", 5);
stream.writeVal((byte)obj.bt);
}
if (!(0 == obj.s)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'s', (byte)'\"', (byte)':');
stream.writeVal((short)obj.s);
}
if (!(0 == obj.l)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'l', (byte)'\"', (byte)':');
stream.writeVal((long)obj.l);
}
if (!(0 == obj.f)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'f', (byte)'\"', (byte)':');
stream.writeVal((float)obj.f);
}
if (!(0 == obj.d)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'d', (byte)'\"', (byte)':');
stream.writeVal((double)obj.d);
}
if (!(0 == obj.e)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'e', (byte)'\"', (byte)':');
stream.writeVal((char)obj.e);
}
}

	at com.jsoniter.output.TestObject.test_omit_default(TestObject.java:363)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_omit_default(TestObject.java:363)

[ERROR] test_missing_notFirst(com.jsoniter.output.TestObject)  Time elapsed: 0.032 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject16 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject16 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
stream.writeObjectStart();
stream.writeIndention();
stream.writeObjectField("i");
if (obj.i == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Integer)obj.i);
}
stream.writeObjectEnd();
}

	at com.jsoniter.output.TestObject.test_missing_notFirst(TestObject.java:340)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_missing_notFirst(TestObject.java:340)

[ERROR] test_indention(com.jsoniter.output.TestObject)  Time elapsed: 0.055 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject14 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject14 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
stream.writeObjectStart();
boolean notFirst = false;
if (!(null == obj.field1)) {
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("field1");
stream.writeVal((java.lang.String)obj.field1);
}
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("field2");
stream.writeVal((java.lang.String)obj.field2);
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("field3");
if (obj.field3 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field3);
}
if (notFirst) { stream.writeObjectEnd(); } else { stream.write('}'); }
}

	at com.jsoniter.output.TestObject.test_indention(TestObject.java:290)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_indention(TestObject.java:290)

[ERROR] test_not_nullable(com.jsoniter.output.TestObject)  Time elapsed: 0.131 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [Ljava.lang.String; with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.lang.String[] arr = (java.lang.String[])obj;
if (arr.length == 0) { return; }
int i = 0;
java.lang.String e = arr[i++];
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)e);
}
while (i < arr.length) {
stream.write(',');
e = arr[i++];
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)e);
}
}
}

	at com.jsoniter.output.TestObject.test_not_nullable(TestObject.java:147)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_not_nullable(TestObject.java:147)

[ERROR] test_indention_with_empty_object(com.jsoniter.output.TestObject)  Time elapsed: 0.044 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject15 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject15 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
stream.writeObjectStart();
boolean notFirst = false;
if (!(null == obj.i1)) {
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("i1");
stream.writeVal((java.lang.Integer)obj.i1);
}
if (!(null == obj.i2)) {
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("i2");
stream.writeVal((java.lang.Integer)obj.i2);
}
if (notFirst) { stream.writeObjectEnd(); } else { stream.write('}'); }
}

	at com.jsoniter.output.TestObject.test_indention_with_empty_object(TestObject.java:325)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_indention_with_empty_object(TestObject.java:325)

[ERROR] test_collection_value_not_nullable(com.jsoniter.output.TestObject)  Time elapsed: 0.12 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [Ljava.lang.String; with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.lang.String[] arr = (java.lang.String[])obj;
if (arr.length == 0) { return; }
int i = 0;
java.lang.String e = arr[i++];
com.jsoniter.output.CodegenAccess.writeStringWithoutQuote((java.lang.String)e, stream);
while (i < arr.length) {
stream.write((byte)'\"');
stream.write(',');
e = arr[i++];
stream.write((byte)'\"');
com.jsoniter.output.CodegenAccess.writeStringWithoutQuote((java.lang.String)e, stream);
}
}

	at com.jsoniter.output.TestObject.test_collection_value_not_nullable(TestObject.java:177)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_collection_value_not_nullable(TestObject.java:177)

[INFO] Running com.jsoniter.output.TestJackson
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.413 s - in com.jsoniter.output.TestJackson
[INFO] Running com.jsoniter.TestJackson
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.076 s - in com.jsoniter.TestJackson
[INFO] Running com.jsoniter.output.TestSpiTypeEncoder
jsoniter_codegen.cfg9223372034806973682.
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.jsoniter.output.TestSpiTypeEncoder
[INFO] Running com.jsoniter.output.TestJackson
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.538 s - in com.jsoniter.output.TestJackson
[INFO] Running com.jsoniter.TestJackson
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.068 s - in com.jsoniter.TestJackson
[INFO] Running com.jsoniter.output.TestSpiTypeEncoder
jsoniter_codegen.cfg9223372036535405691.
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 s - in com.jsoniter.output.TestSpiTypeEncoder
[INFO] Running com.jsoniter.TestGson
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.463 s - in com.jsoniter.TestGson
[INFO] Running com.jsoniter.output.TestStreamBuffer
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.jsoniter.output.TestStreamBuffer
[INFO] Running com.jsoniter.any.TestLong
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.any.TestLong
[INFO] Running com.jsoniter.TestAnnotationJsonObject
com.jsoniter.spi.JsonException: failed to generate decoder for: com.jsoniter.spi.ClassInfo@4d7a4317 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonObject.TestObject15 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonObject.TestObject15() : (com.jsoniter.TestAnnotationJsonObject.TestObject15)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
throw new com.jsoniter.spi.JsonException("extra property: field1");
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
throw new com.jsoniter.spi.JsonException("extra property: field1");
}
break;

}
iter.skip();
}
return obj;
}
com.jsoniter.spi.JsonException: failed to generate decoder for: com.jsoniter.spi.ClassInfo@75452b01 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonObject.TestObject13 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonObject.TestObject13() : (com.jsoniter.TestAnnotationJsonObject.TestObject13)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
throw new com.jsoniter.spi.JsonException("extra property: " + field.toString());
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
throw new com.jsoniter.spi.JsonException("extra property: " + field.toString());
}
return obj;
}
[ERROR] Tests run: 4, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.112 s <<< FAILURE! - in com.jsoniter.TestAnnotationJsonObject
[ERROR] test_extra_properties(com.jsoniter.TestAnnotationJsonObject)  Time elapsed: 0.085 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@4e7d77ec with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonObject.TestObject9 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonObject.TestObject9() : (com.jsoniter.TestAnnotationJsonObject.TestObject9)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
java.util.Map extra = null;
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
if (extra == null) { extra = new java.util.HashMap(); }
extra.put(field.toString(), iter.readAny());
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
if (extra == null) { extra = new java.util.HashMap(); }
extra.put(field.toString(), iter.readAny());
}
obj.extraProperties = extra;
return obj;
}
	at com.jsoniter.TestAnnotationJsonObject.test_extra_properties(TestAnnotationJsonObject.java:22)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonObject.test_extra_properties(TestAnnotationJsonObject.java:22)

[ERROR] test_no_unknown_properties(com.jsoniter.TestAnnotationJsonObject)  Time elapsed: 0.007 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@6d5b160 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonObject.TestObject14 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonObject.TestObject14() : (com.jsoniter.TestAnnotationJsonObject.TestObject14)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 2: 
if (
field.at(0)==105 && 
field.at(1)==100
) {
obj.id= (int)iter.readInt();
continue;
}
break;

}
throw new com.jsoniter.spi.JsonException("extra property: " + field.toString());
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 2: 
if (
field.at(0)==105 && 
field.at(1)==100
) {
obj.id= (int)iter.readInt();
continue;
}
break;

}
throw new com.jsoniter.spi.JsonException("extra property: " + field.toString());
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties(TestAnnotationJsonObject.java:61)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties(TestAnnotationJsonObject.java:61)

[INFO] Running com.jsoniter.output.TestAnnotationJsonIgnore
[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.383 s <<< FAILURE! - in com.jsoniter.output.TestAnnotationJsonIgnore
[ERROR] test_ignore_decoding_only(com.jsoniter.output.TestAnnotationJsonIgnore)  Time elapsed: 0.237 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonIgnore$TestObject2 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonIgnore.TestObject2 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
stream.writeVal((int)obj.field1);
}

	at com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only(TestAnnotationJsonIgnore.java:29)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only(TestAnnotationJsonIgnore.java:29)

[ERROR] test_ignore(com.jsoniter.output.TestAnnotationJsonIgnore)  Time elapsed: 0.123 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonIgnore$TestObject1 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonIgnore.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
}

	at com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore(TestAnnotationJsonIgnore.java:18)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore(TestAnnotationJsonIgnore.java:18)

[ERROR] test_private_serialize(com.jsoniter.output.TestAnnotationJsonIgnore)  Time elapsed: 0.023 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonIgnore$TestPrivateVariables with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonIgnore.TestPrivateVariables obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
}

	at com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize(TestAnnotationJsonIgnore.java:44)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize(TestAnnotationJsonIgnore.java:44)

[INFO] Running com.jsoniter.output.TestAnnotationJsonUnwrapper
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.025 s <<< FAILURE! - in com.jsoniter.output.TestAnnotationJsonUnwrapper
[ERROR] test_unwrapper_with_map(com.jsoniter.output.TestAnnotationJsonUnwrapper)  Time elapsed: 0.018 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonUnwrapper$TestObject2 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonUnwrapper.TestObject2 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.Map map = (java.util.Map)obj.getProperties();
java.util.Iterator iter = map.entrySet().iterator();
while(iter.hasNext()) {
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeObjectField(entry.getKey().toString());
if (entry.getValue() == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)entry.getValue());
}
}
}

	at com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map(TestAnnotationJsonUnwrapper.java:47)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map(TestAnnotationJsonUnwrapper.java:47)

[ERROR] test_unwrapper(com.jsoniter.output.TestAnnotationJsonUnwrapper)  Time elapsed: 0.007 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonUnwrapper$TestObject1 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonUnwrapper.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
obj.unwrap(stream);
}

	at com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper(TestAnnotationJsonUnwrapper.java:31)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper(TestAnnotationJsonUnwrapper.java:31)

[INFO] Running com.jsoniter.TestReadAny
com.jsoniter.spi.JsonException: Value not found: failed to get index 0 from []
com.jsoniter.spi.JsonException: Value not found: failed to get index 0 from []
com.jsoniter.spi.JsonException: Value not found: failed to get key hello from {}
com.jsoniter.spi.JsonException: Value not found: failed to get key hello from {}
[ERROR] Tests run: 19, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.156 s <<< FAILURE! - in com.jsoniter.TestReadAny
[ERROR] test_read_class(com.jsoniter.TestReadAny)  Time elapsed: 0.05 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@14b8a751 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestReadAny.TestObject1 obj = (existingObj == null ? new com.jsoniter.TestReadAny.TestObject1() : (com.jsoniter.TestReadAny.TestObject1)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestReadAny.test_read_class(TestReadAny.java:145)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestReadAny.test_read_class(TestReadAny.java:145)

[ERROR] test_bind_to_any(com.jsoniter.TestReadAny)  Time elapsed: 0.094 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7345f97d with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestReadAny.test_bind_to_any(TestReadAny.java:28)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestReadAny.test_bind_to_any(TestReadAny.java:28)

[INFO] Running com.jsoniter.output.TestNested
[ERROR] Tests run: 5, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.165 s <<< FAILURE! - in com.jsoniter.output.TestNested
[ERROR] test_recursive_class(com.jsoniter.output.TestNested)  Time elapsed: 0.005 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestNested$TestObject3 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestNested.TestObject3 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.reference == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.com.jsoniter.output.TestNested_TestObject3", (com.jsoniter.output.TestNested.TestObject3)obj.reference, stream);
}
}

	at com.jsoniter.output.TestNested.test_recursive_class(TestNested.java:119)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestNested.test_recursive_class(TestNested.java:119)

[ERROR] test_array_of_objects(com.jsoniter.output.TestNested)  Time elapsed: 0.012 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestNested$TestObject1 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestNested.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field1);
}
stream.writeRaw(",\"field2\":", 10);
if (obj.field2 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field2);
}
}

	at com.jsoniter.output.TestNested.test_array_of_objects(TestNested.java:38)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestNested.test_array_of_objects(TestNested.java:38)

[ERROR] test_collection_of_objects(com.jsoniter.output.TestNested)  Time elapsed: 0.148 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestNested$TestObject1 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.com.jsoniter.output.TestNested_TestObject1: frozen class (cannot edit)
public static void encode_(com.jsoniter.output.TestNested.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field1);
}
stream.writeRaw(",\"field2\":", 10);
if (obj.field2 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field2);
}
}

	at com.jsoniter.output.TestNested.test_collection_of_objects(TestNested.java:47)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.com.jsoniter.output.TestNested_TestObject1: frozen class (cannot edit)
	at com.jsoniter.output.TestNested.test_collection_of_objects(TestNested.java:47)

[INFO] Running com.jsoniter.TestAnnotationJsonIgnore
[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 3.293 s <<< FAILURE! - in com.jsoniter.TestAnnotationJsonIgnore
[ERROR] test_ignore_no_constructor_field(com.jsoniter.TestAnnotationJsonIgnore)  Time elapsed: 3.084 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@617449dd with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonIgnore.TestObject2 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonIgnore.TestObject2() : (com.jsoniter.TestAnnotationJsonIgnore.TestObject2)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
iter.skip();
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonIgnore.test_ignore_no_constructor_field(TestAnnotationJsonIgnore.java:35)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonIgnore.test_ignore_no_constructor_field(TestAnnotationJsonIgnore.java:35)

[ERROR] test_json_ignore_with_creator(com.jsoniter.TestAnnotationJsonIgnore)  Time elapsed: 0.182 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@77b5148c with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
java.lang.String _field2_ = null;
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return new com.jsoniter.TestAnnotationJsonIgnore.TestObject3(_field2_);
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==50
) {
_field2_ = (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==50
) {
_field2_ = (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
com.jsoniter.TestAnnotationJsonIgnore.TestObject3 obj = new com.jsoniter.TestAnnotationJsonIgnore.TestObject3(_field2_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonIgnore.test_json_ignore_with_creator(TestAnnotationJsonIgnore.java:63)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonIgnore.test_json_ignore_with_creator(TestAnnotationJsonIgnore.java:63)

[ERROR] test_ignore(com.jsoniter.TestAnnotationJsonIgnore)  Time elapsed: 0.025 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@1ab14636 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonIgnore.TestObject1 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonIgnore.TestObject1() : (com.jsoniter.TestAnnotationJsonIgnore.TestObject1)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
iter.skip();
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonIgnore.test_ignore(TestAnnotationJsonIgnore.java:24)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonIgnore.test_ignore(TestAnnotationJsonIgnore.java:24)

[INFO] Running com.jsoniter.TestAnnotation
[ERROR] Tests run: 4, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.255 s <<< FAILURE! - in com.jsoniter.TestAnnotation
[ERROR] test_name_conflict(com.jsoniter.TestAnnotation)  Time elapsed: 0.012 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@411fa0ce with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotation.TestObject17 obj = (existingObj == null ? new com.jsoniter.TestAnnotation.TestObject17() : (com.jsoniter.TestAnnotation.TestObject17)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.setField1( (int)iter.readInt());
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.setField1( (int)iter.readInt());
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestAnnotation.test_name_conflict(TestAnnotation.java:84)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotation.test_name_conflict(TestAnnotation.java:84)

[ERROR] test_inherited_setter_is_not_duplicate(com.jsoniter.TestAnnotation)  Time elapsed: 0.197 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@5b0dbfb with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotation.TestObject18 obj = (existingObj == null ? new com.jsoniter.TestAnnotation.TestObject18() : (com.jsoniter.TestAnnotation.TestObject18)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 4: 
if (
field.at(0)==95 && 
field.at(1)==118 && 
field.at(2)==97 && 
field.at(3)==108
) {
obj._val= (int)iter.readInt();
continue;
}
break;
case 5: 
if (
field.at(0)==104 && 
field.at(1)==101 && 
field.at(2)==108 && 
field.at(3)==108 && 
field.at(4)==111
) {
obj.setHello( (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 4: 
if (
field.at(0)==95 && 
field.at(1)==118 && 
field.at(2)==97 && 
field.at(3)==108
) {
obj._val= (int)iter.readInt();
continue;
}
break;
case 5: 
if (
field.at(0)==104 && 
field.at(1)==101 && 
field.at(2)==108 && 
field.at(3)==108 && 
field.at(4)==111
) {
obj.setHello( (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate(TestAnnotation.java:103)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate(TestAnnotation.java:103)

[ERROR] test_single_param_setter(com.jsoniter.TestAnnotation)  Time elapsed: 0.013 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@797fcf9 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotation.TestObject5 obj = (existingObj == null ? new com.jsoniter.TestAnnotation.TestObject5() : (com.jsoniter.TestAnnotation.TestObject5)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.setField1( (int)iter.readInt());
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.setField1( (int)iter.readInt());
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestAnnotation.test_single_param_setter(TestAnnotation.java:48)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotation.test_single_param_setter(TestAnnotation.java:48)

[ERROR] test_static_factory(com.jsoniter.TestAnnotation)  Time elapsed: 0.032 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@370c9018 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
int _field1_ = 0;
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return com.jsoniter.TestAnnotation.TestObject4.createObject(_field1_);
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
_field1_ = (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
_field1_ = (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
com.jsoniter.TestAnnotation.TestObject4 obj = com.jsoniter.TestAnnotation.TestObject4.createObject(_field1_);
return obj;
}
	at com.jsoniter.TestAnnotation.test_static_factory(TestAnnotation.java:34)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotation.test_static_factory(TestAnnotation.java:34)

[INFO] Running com.jsoniter.TestNested
[ERROR] Tests run: 4, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.214 s <<< FAILURE! - in com.jsoniter.TestNested
[ERROR] test_recursive_class(com.jsoniter.TestNested)  Time elapsed: 0.019 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@6206b4a7 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.output.TestNested.TestObject3 obj = (existingObj == null ? new com.jsoniter.output.TestNested.TestObject3() : (com.jsoniter.output.TestNested.TestObject3)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 9: 
if (
field.at(0)==114 && 
field.at(1)==101 && 
field.at(2)==102 && 
field.at(3)==101 && 
field.at(4)==114 && 
field.at(5)==101 && 
field.at(6)==110 && 
field.at(7)==99 && 
field.at(8)==101
) {
com.jsoniter.CodegenAccess.setExistingObject(iter, obj.reference);obj.reference= (com.jsoniter.output.TestNested.TestObject3)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.output.TestNested_TestObject3", iter);
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 9: 
if (
field.at(0)==114 && 
field.at(1)==101 && 
field.at(2)==102 && 
field.at(3)==101 && 
field.at(4)==114 && 
field.at(5)==101 && 
field.at(6)==110 && 
field.at(7)==99 && 
field.at(8)==101
) {
com.jsoniter.CodegenAccess.setExistingObject(iter, obj.reference);obj.reference= (com.jsoniter.output.TestNested.TestObject3)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.output.TestNested_TestObject3", iter);
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestNested.test_recursive_class(TestNested.java:70)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestNested.test_recursive_class(TestNested.java:70)

[ERROR] test_array_of_objects(com.jsoniter.TestNested)  Time elapsed: 0.186 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@25ad25f5 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.SimpleObject obj = (existingObj == null ? new com.jsoniter.SimpleObject() : (com.jsoniter.SimpleObject)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestNested.test_array_of_objects(TestNested.java:13)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestNested.test_array_of_objects(TestNested.java:13)

[INFO] Running com.jsoniter.TestSpiPropertyDecoder
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.338 s <<< FAILURE! - in com.jsoniter.TestSpiPropertyDecoder
[ERROR] test_PropertyDecoder(com.jsoniter.TestSpiPropertyDecoder)  Time elapsed: 0.315 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@60515ab1 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestSpiPropertyDecoder.TestObject1 obj = (existingObj == null ? new com.jsoniter.TestSpiPropertyDecoder.TestObject1() : (com.jsoniter.TestSpiPropertyDecoder.TestObject1)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 5: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
obj.field= (java.lang.String)com.jsoniter.CodegenAccess.read("field@jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestSpiPropertyDecoder_TestObject1", iter);
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 5: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
obj.field= (java.lang.String)com.jsoniter.CodegenAccess.read("field@jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestSpiPropertyDecoder_TestObject1", iter);
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder(TestSpiPropertyDecoder.java:28)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder(TestSpiPropertyDecoder.java:28)

[ERROR] test_PropertyDecoder_for_type_literal(com.jsoniter.TestSpiPropertyDecoder)  Time elapsed: 0.023 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@395854dd with [class java.lang.Object], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestSpiPropertyDecoder.TestObject1 obj = (existingObj == null ? new com.jsoniter.TestSpiPropertyDecoder.TestObject1() : (com.jsoniter.TestSpiPropertyDecoder.TestObject1)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 5: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
obj.field= (java.lang.String)com.jsoniter.CodegenAccess.read("field@jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestSpiPropertyDecoder.TestObject1_java.lang.Object", iter);
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 5: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
obj.field= (java.lang.String)com.jsoniter.CodegenAccess.read("field@jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestSpiPropertyDecoder.TestObject1_java.lang.Object", iter);
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal(TestSpiPropertyDecoder.java:42)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal(TestSpiPropertyDecoder.java:42)

[INFO] Running com.jsoniter.output.TestGenerics
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.056 s <<< FAILURE! - in com.jsoniter.output.TestGenerics
[ERROR] test_inherited_getter_is_not_duplicate(com.jsoniter.output.TestGenerics)  Time elapsed: 0.045 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestGenerics$TestObject6 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestGenerics.TestObject6 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.getHello() == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)obj.getHello());
}
}

	at com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate(TestGenerics.java:37)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate(TestGenerics.java:37)

[ERROR] test_wildcard(com.jsoniter.output.TestGenerics)  Time elapsed: 0.011 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: ParameterizedTypeImpl{actualTypeArguments=[?], ownerType=null, rawType=java.util.List} with [?], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
}
}

	at com.jsoniter.output.TestGenerics.test_wildcard(TestGenerics.java:55)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestGenerics.test_wildcard(TestGenerics.java:55)

[INFO] Running com.jsoniter.TestOmitValue
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.jsoniter.TestOmitValue
[INFO] Running com.jsoniter.output.TestCollection
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.012 s <<< FAILURE! - in com.jsoniter.output.TestCollection
[ERROR] test_indention(com.jsoniter.output.TestCollection)  Time elapsed: 0.011 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashSet with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.Iterator iter = ((java.util.Collection)obj).iterator();
if (!iter.hasNext()) { stream.write((byte)'[', (byte)']'); return; }
stream.writeArrayStart(); stream.writeIndention();
java.lang.Object e = iter.next();
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
while (iter.hasNext()) {
stream.writeMore();
e = iter.next();
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
}
stream.writeArrayEnd();
}

	at com.jsoniter.output.TestCollection.test_indention(TestCollection.java:26)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestCollection.test_indention(TestCollection.java:26)

[ERROR] test_indention_with_empty_array(com.jsoniter.output.TestCollection)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashSet with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg1755612019.encoder.java.util.HashSet: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.Iterator iter = ((java.util.Collection)obj).iterator();
if (!iter.hasNext()) { stream.write((byte)'[', (byte)']'); return; }
stream.writeArrayStart(); stream.writeIndention();
java.lang.Object e = iter.next();
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
while (iter.hasNext()) {
stream.writeMore();
e = iter.next();
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
}
stream.writeArrayEnd();
}

	at com.jsoniter.output.TestCollection.test_indention_with_empty_array(TestCollection.java:39)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg1755612019.encoder.java.util.HashSet: frozen class (cannot edit)
	at com.jsoniter.output.TestCollection.test_indention_with_empty_array(TestCollection.java:39)

[INFO] Running com.jsoniter.output.TestSpiPropertyEncoder
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.015 s <<< FAILURE! - in com.jsoniter.output.TestSpiPropertyEncoder
[ERROR] test_PropertyEncoder_for_type_literal(com.jsoniter.output.TestSpiPropertyEncoder)  Time elapsed: 0.009 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: com.jsoniter.output.TestSpiPropertyEncoder$TestObject1<java.lang.Object> with [class java.lang.Object], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestSpiPropertyEncoder.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("field1@jsoniter_codegen.cfg9223372034806973682.encoder.com.jsoniter.output.TestSpiPropertyEncoder.TestObject1_java.lang.Object", obj.field1, stream);
}
}

	at com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal(TestSpiPropertyEncoder.java:41)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal(TestSpiPropertyEncoder.java:41)

[ERROR] test_PropertyEncoder(com.jsoniter.output.TestSpiPropertyEncoder)  Time elapsed: 0.006 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestSpiPropertyEncoder$TestObject1 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestSpiPropertyEncoder.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("field1@jsoniter_codegen.cfg9223372034806973682.encoder.com.jsoniter.output.TestSpiPropertyEncoder_TestObject1", obj.field1, stream);
}
}

	at com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder(TestSpiPropertyEncoder.java:25)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder(TestSpiPropertyEncoder.java:25)

[INFO] Running com.jsoniter.TestSpiTypeDecoder
[INFO] Running com.jsoniter.TestGson
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.747 s - in com.jsoniter.TestGson
[ERROR] Tests run: 6, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.036 s <<< FAILURE! - in com.jsoniter.TestSpiTypeDecoder
[ERROR] test_list_or_single_element(com.jsoniter.TestSpiTypeDecoder)  Time elapsed: 0.004 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@2e41e0c with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.String: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element(TestSpiTypeDecoder.java:121)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element(TestSpiTypeDecoder.java:121)

[ERROR] test_as_field_type(com.jsoniter.TestSpiTypeDecoder)  Time elapsed: 0.013 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@45f32b12 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestSpiTypeDecoder.FieldWithMyDate obj = (existingObj == null ? new com.jsoniter.TestSpiTypeDecoder.FieldWithMyDate() : (com.jsoniter.TestSpiTypeDecoder.FieldWithMyDate)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 5: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
com.jsoniter.CodegenAccess.setExistingObject(iter, obj.field);obj.field= (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 5: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
com.jsoniter.CodegenAccess.setExistingObject(iter, obj.field);obj.field= (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestSpiTypeDecoder.test_as_field_type(TestSpiTypeDecoder.java:84)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestSpiTypeDecoder.test_as_field_type(TestSpiTypeDecoder.java:84)

[ERROR] test_as_array_element(com.jsoniter.TestSpiTypeDecoder)  Time elapsed: 0.011 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@5bbeb9e3 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new com.jsoniter.TestSpiTypeDecoder.MyDate[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
com.jsoniter.TestSpiTypeDecoder.MyDate a1 = (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new com.jsoniter.TestSpiTypeDecoder.MyDate[]{ a1 };
}
com.jsoniter.TestSpiTypeDecoder.MyDate a2 = (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new com.jsoniter.TestSpiTypeDecoder.MyDate[]{ a1, a2 };
}
com.jsoniter.TestSpiTypeDecoder.MyDate a3 = (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new com.jsoniter.TestSpiTypeDecoder.MyDate[]{ a1, a2, a3 };
}
com.jsoniter.TestSpiTypeDecoder.MyDate a4 = (com.jsoniter.TestSpiTypeDecoder.MyDate) (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new com.jsoniter.TestSpiTypeDecoder.MyDate[]{ a1, a2, a3, a4 };
}
com.jsoniter.TestSpiTypeDecoder.MyDate a5 = (com.jsoniter.TestSpiTypeDecoder.MyDate) (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
com.jsoniter.TestSpiTypeDecoder.MyDate[] arr = new com.jsoniter.TestSpiTypeDecoder.MyDate[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
com.jsoniter.TestSpiTypeDecoder.MyDate[] newArr = new com.jsoniter.TestSpiTypeDecoder.MyDate[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
}
com.jsoniter.TestSpiTypeDecoder.MyDate[] result = new com.jsoniter.TestSpiTypeDecoder.MyDate[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestSpiTypeDecoder.test_as_array_element(TestSpiTypeDecoder.java:90)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestSpiTypeDecoder.test_as_array_element(TestSpiTypeDecoder.java:90)

[INFO] Running com.jsoniter.output.TestStreamBuffer
[INFO] Running com.jsoniter.output.TestGson
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.jsoniter.output.TestStreamBuffer
[ERROR] Tests run: 15, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 0.284 s <<< FAILURE! - in com.jsoniter.output.TestGson
[ERROR] test_setDateFormat_with_style(com.jsoniter.output.TestGson)  Time elapsed: 0.009 s  <<< FAILURE!
junit.framework.ComparisonFailure: expected:<"January 1, 1970 []12:00:00 AM UTC"> but was:<"January 1, 1970 [at ]12:00:00 AM UTC">
	at com.jsoniter.output.TestGson.test_setDateFormat_with_style(TestGson.java:118)

[ERROR] test_surrogate(com.jsoniter.output.TestGson)  Time elapsed: 0.003 s  <<< FAILURE!
java.lang.AssertionError: java.lang.IllegalAccessException: class com.google.gson.internal.ConstructorConstructor$3 cannot access a member of class com.jsoniter.output.TestGson$TestObject with modifiers "private"
	at com.jsoniter.output.TestGson.test_surrogate(TestGson.java:292)
Caused by: java.lang.IllegalAccessException: class com.google.gson.internal.ConstructorConstructor$3 cannot access a member of class com.jsoniter.output.TestGson$TestObject with modifiers "private"
	at com.jsoniter.output.TestGson.test_surrogate(TestGson.java:292)

[INFO] Running com.jsoniter.any.TestLong
[INFO] Running com.jsoniter.TestAnnotationJsonCreator
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.jsoniter.any.TestLong
[INFO] Running com.jsoniter.TestAnnotationJsonObject
com.jsoniter.spi.JsonException: failed to generate decoder for: com.jsoniter.spi.ClassInfo@5f1d270a with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonObject.TestObject15 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonObject.TestObject15() : (com.jsoniter.TestAnnotationJsonObject.TestObject15)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
throw new com.jsoniter.spi.JsonException("extra property: field1");
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
throw new com.jsoniter.spi.JsonException("extra property: field1");
}
break;

}
iter.skip();
}
return obj;
}
com.jsoniter.spi.JsonException: failed to generate decoder for: com.jsoniter.spi.ClassInfo@23b260ed with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOExc[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.263 s <<< FAILURE! - in com.jsoniter.TestAnnotationJsonCreator
eption { java.lang.Object exist[ERROR] test_ctor_and_setter_binding(com.jsoniter.TestAnnotationJsonCreator)  Time elapsed: 0.202 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@1a14fdf0 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
java.lang.String _name_ = null;
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return new com.jsoniter.TestAnnotationJsonCreator.TestObject(_name_);
}
com.jsoniter.any.Any _props_ = null;
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 4: 
if (
field.at(0)==110 && 
field.at(1)==97 && 
field.at(2)==109 && 
field.at(3)==101
) {
_name_ = (java.lang.String)iter.readString();
continue;
}
break;
case 5: 
if (
field.at(0)==112 && 
field.at(1)==114 && 
field.at(2)==111 && 
field.at(3)==112 && 
field.at(4)==115
) {
_props_ = (com.jsoniter.any.Any)iter.readAny();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 4: 
if (
field.at(0)==110 && 
field.at(1)==97 && 
field.at(2)==109 && 
field.at(3)==101
) {
_name_ = (java.lang.String)iter.readString();
continue;
}
break;
case 5: 
if (
field.at(0)==112 && 
field.at(1)==114 && 
field.at(2)==111 && 
field.at(3)==112 && 
field.at(4)==115
) {
_props_ = (com.jsoniter.any.Any)iter.readAny();
continue;
}
break;

}
iter.skip();
}
com.jsoniter.TestAnnotationJsonCreator.TestObject obj = new com.jsoniter.TestAnnotationJsonCreator.TestObject(_name_);
obj.setProperties(_props_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding(TestAnnotationJsonCreator.java:52)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding(TestAnnotationJsonCreator.java:52)

ing[ERROR] test_ctor(com.jsoniter.TestAnnotationJsonCreator)  Time elapsed: 0.061 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@58b311ba with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
int _field1_ = 0;
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return new com.jsoniter.TestAnnotationJsonCreator.TestObject2(_field1_);
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
_field1_ = (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
_field1_ = (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
com.jsoniter.TestAnnotationJsonCreator.TestObject2 obj = new com.jsoniter.TestAnnotationJsonCreator.TestObject2(_field1_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonCreator.test_ctor(TestAnnotationJsonCreator.java:27)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonCreator.test_ctor(TestAnnotationJsonCreator.java:27)

Obj = com.jsoniter.CodegenAc[INFO] Running com.jsoniter.output.TestArray
cess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonObject.TestObject13 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonObject.TestObject13() : (com.jsoniter.TestAnnotationJsonObject.TestObject13)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
throw new com.jsoniter.spi.JsonException("extra property: " + field.toString());
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
throw new com.jsoniter.spi.JsonException("extra property: " + field.toString());
}
return obj;
}
[ERROR] Tests run: 4, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.165 s <<< FAILURE! - in com.jsoniter.TestAnnotationJsonObject
[ERROR] test_extra_properties(com.jsoniter.TestAnnotationJsonObject)  Time elapsed: 0.104 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@786e2c5e with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonObject.TestObject9 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonObject.TestObject9() : (com.jsoniter.TestAnnotationJsonObject.TestObject9)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
java.util.Map extra = null;
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
if (extra == null) { extra = new java.util.HashMap(); }
extra.put(field.toString(), iter.readAny());
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
if (extra == null) { extra = new java.util.HashMap(); }
extra.put(field.toString(), iter.readAny());
}
obj.extraProperties = extra;
return obj;
}
	at com.jsoniter.TestAnnotationJsonObject.test_extra_properties(TestAnnotationJsonObject.java:22)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonObject.test_extra_properties(TestAnnotationJsonObject.java:22)

[ERROR] test_no_unknown_properties(com.jsoniter.TestAnnotationJsonObject)  Time elapsed: 0.028 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@fd07138 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonObject.TestObject14 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonObject.TestObject14() : (com.jsoniter.TestAnnotationJsonObject.TestObject14)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 2: 
if (
field.at(0)==105 && 
field.at(1)==100
) {
obj.id= (int)iter.readInt();
continue;
}
break;

}
throw new com.jsoniter.spi.JsonException("extra property: " + field.toString());
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 2: 
if (
field.at(0)==105 && 
field.at(1)==100
) {
obj.id= (int)iter.readInt();
continue;
}
break;

}
throw new com.jsoniter.spi.JsonException("extra property: " + field.toString());
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties(TestAnnotationJsonObject.java:61)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties(TestAnnotationJsonObject.java:61)

[INFO] Running com.jsoniter.output.TestAnnotationJsonIgnore
[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.404 s <<< FAILURE! - in com.jsoniter.output.TestAnnotationJsonIgnore
[ERROR] test_ignore_decoding_only(com.jsoniter.output.TestAnnotationJsonIgnore)  Time elapsed: 0.384 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonIgnore$TestObject2 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonIgnore.TestObject2 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
stream.writeVal((int)obj.field1);
}

	at com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only(TestAnnotationJsonIgnore.java:29)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only(TestAnnotationJsonIgnore.java:29)

[ERROR] test_ignore(com.jsoniter.output.TestAnnotationJsonIgnore)  Time elapsed: 0.012 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonIgnore$TestObject1 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonIgnore.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
}

	at com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore(TestAnnotationJsonIgnore.java:18)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore(TestAnnotationJsonIgnore.java:18)

[ERROR] test_private_serialize(com.jsoniter.output.TestAnnotationJsonIgnore)  Time elapsed: 0.008 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonIgnore$TestPrivateVariables with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonIgnore.TestPrivateVariables obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
}

	at com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize(TestAnnotationJsonIgnore.java:44)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize(TestAnnotationJsonIgnore.java:44)

[INFO] Running com.jsoniter.output.TestAnnotationJsonUnwrapper
[ERROR] Tests run: 15, Failures: 0, Errors: 13, Skipped: 0, Time elapsed: 0.246 s <<< FAILURE! - in com.jsoniter.output.TestArray
[ERROR] test_arrays_as_list(com.jsoniter.output.TestArray)  Time elapsed: 0.013 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.AbstractList with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.Arrays_ArrayList: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_arrays_as_list(TestArray.java:114)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.Arrays_ArrayList: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_arrays_as_list(TestArray.java:114)

[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.021 s <<< FAILURE! - in com.jsoniter.output.TestAnnotationJsonUnwrapper
[ERROR] test_array_of_null(com.jsoniter.output.TestArray)  Time elapsed: 0.091 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: ParameterizedTypeImpl{actualTypeArguments=[class java.lang.String], ownerType=null, rawType=java.util.List} with [class java.lang.String], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_array_of_null(TestArray.java:90)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestArray.test_array_of_null(TestArray.java:90)

[ERROR] test_unwrapper_with_map(com.jsoniter.output.TestAnnotationJsonUnwrapper)  Time elapsed: 0.015 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonUnwrapper$TestObject2 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonUnwrapper.TestObject2 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.Map map = (java.util.Map)obj.getProperties();
java.util.Iterator iter = map.entrySet().iterator();
while(iter.hasNext()) {
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeObjectField(entry.getKey().toString());
if (entry.getValue() == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)entry.getValue());
}
}
}

	at com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map(TestAnnotationJsonUnwrapper.java:47)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map(TestAnnotationJsonUnwrapper.java:47)

[ERROR] test_default_empty_collection(com.jsoniter.output.TestArray)  Time elapsed: 0.005 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.AbstractSet with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.Iterator iter = ((java.util.Collection)obj).iterator();
if (!iter.hasNext()) { return; }
java.lang.Object e = iter.next();
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
while (iter.hasNext()) {
stream.write(',');
e = iter.next();
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_default_empty_collection(TestArray.java:118)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestArray.test_default_empty_collection(TestArray.java:118)

[ERROR] test_unwrapper(com.jsoniter.output.TestAnnotationJsonUnwrapper)  Time elapsed: 0.006 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonUnwrapper$TestObject1 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonUnwrapper.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
obj.unwrap(stream);
}

	at com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper(TestAnnotationJsonUnwrapper.java:31)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper(TestAnnotationJsonUnwrapper.java:31)

[ERROR] test_hash_set(com.jsoniter.output.TestArray)  Time elapsed: 0.023 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashSet with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.Iterator iter = ((java.util.Collection)obj).iterator();
if (!iter.hasNext()) { return; }
java.lang.Object e = iter.next();
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
while (iter.hasNext()) {
stream.write(',');
e = iter.next();
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_hash_set(TestArray.java:107)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestArray.test_hash_set(TestArray.java:107)

[INFO] Running com.jsoniter.TestReadAny
[ERROR] test_indention(com.jsoniter.output.TestArray)  Time elapsed: 0.005 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { stream.write((byte)'[', (byte)']'); return; }
stream.writeArrayStart(); stream.writeIndention();
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.writeMore();
e = arr[i++];
stream.writeVal((int)e);
}
stream.writeArrayEnd();
}

	at com.jsoniter.output.TestArray.test_indention(TestArray.java:137)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestArray.test_indention(TestArray.java:137)

com.[ERROR] test_gen_array(com.jsoniter.output.TestArray)  Time elapsed: 0.005 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [Ljava.lang.String; with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.lang.String[] arr = (java.lang.String[])obj;
if (arr.length == 0) { return; }
int i = 0;
java.lang.String e = arr[i++];
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)e, stream);
}
while (i < arr.length) {
stream.write(',');
e = arr[i++];
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_gen_array(TestArray.java:26)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestArray.test_gen_array(TestArray.java:26)

jsoni[ERROR] test_empty_collection(com.jsoniter.output.TestArray)  Time elapsed: 0.004 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.ArrayList with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_empty_collection(TestArray.java:64)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestArray.test_empty_collection(TestArray.java:64)

te[ERROR] test_list_of_null(com.jsoniter.output.TestArray)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: ParameterizedTypeImpl{actualTypeArguments=[class java.lang.String], ownerType=null, rawType=java.util.List} with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.List_java.lang.String: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_list_of_null(TestArray.java:100)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.List_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_list_of_null(TestArray.java:100)

r.spi.JsonException: Value not found: failed to get index 0 from []
com.jsoniter.spi.JsonException: Value not found: failed to get index 0 from []
com.jsoniter.spi.JsonException: Value not found: failed to get key hello from {}
com.jsoniter.spi.JsonException: Value not found: failed to get key hello from {}
[ERROR] test_indention_with_empty_array(com.jsoniter.output.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg1755612019.encoder.int_array: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { stream.write((byte)'[', (byte)']'); return; }
stream.writeArrayStart(); stream.writeIndention();
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.writeMore();
e = arr[i++];
stream.writeVal((int)e);
}
stream.writeArrayEnd();
}

	at com.jsoniter.output.TestArray.test_indention_with_empty_array(TestArray.java:150)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg1755612019.encoder.int_array: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_indention_with_empty_array(TestArray.java:150)

[ERROR] test_list_of_objects(com.jsoniter.output.TestArray)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: ParameterizedTypeImpl{actualTypeArguments=[class java.lang.String], ownerType=null, rawType=java.util.List} with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.List_java.lang.String: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_list_of_objects(TestArray.java:83)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.List_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_list_of_objects(TestArray.java:83)

[ERROR] test_collection(com.jsoniter.output.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: java.util.List<java.lang.String> with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.List_java.lang.String: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_collection(TestArray.java:35)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.List_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_collection(TestArray.java:35)

[ERROR] Tests run: 19, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.119 s <<< FAILURE! - in com.jsoniter.TestReadAny
[ERROR] test_read_class(com.jsoniter.TestReadAny)  Time elapsed: 0.012 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7345f97d with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestReadAny.TestObject1() : (com.jsoniter.TestReadAny.TestObject1)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestReadAny.TestObject1() : (com.jsoniter.TestReadAny.TestObject1)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
int _field1_ = 0;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1212206434: 
_field1_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestReadAny.TestObject1 obj = (existingObj == null ? new com.jsoniter.TestReadAny.TestObject1() : (com.jsoniter.TestReadAny.TestObject1)existingObj);
obj.field1 = _field1_;
return obj;
}
	at com.jsoniter.TestReadAny.test_read_class(TestReadAny.java:145)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestReadAny.test_read_class(TestReadAny.java:145)

[ERROR] test_bind_to_any(com.jsoniter.TestReadAny)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@554566a8 with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestReadAny.test_bind_to_any(TestReadAny.java:28)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestReadAny.test_bind_to_any(TestReadAny.java:28)

[INFO] Running com.jsoniter.output.TestNested
[ERROR] test_collection_without_type(com.jsoniter.output.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.ArrayList with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.ArrayList: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_collection_without_type(TestArray.java:45)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.ArrayList: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_collection_without_type(TestArray.java:45)

[ERROR] test_empty_array(com.jsoniter.output.TestArray)  Time elapsed: 0.091 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [Ljava.lang.String; with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String_array: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.lang.String[] arr = (java.lang.String[])obj;
if (arr.length == 0) { return; }
int i = 0;
java.lang.String e = arr[i++];
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)e, stream);
}
while (i < arr.length) {
stream.write(',');
e = arr[i++];
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_empty_array(TestArray.java:51)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String_array: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_empty_array(TestArray.java:51)

[ERROR] Tests run: 5, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.026 s <<< FAILURE! - in com.jsoniter.output.TestNested
[ERROR] test_recursive_class(com.jsoniter.output.TestNested)  Time elapsed: 0.015 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestNested$TestObject3 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestNested.TestObject3 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.reference == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.com.jsoniter.output.TestNested_TestObject3", (com.jsoniter.output.TestNested.TestObject3)obj.reference, stream);
}
}

	at com.jsoniter.output.TestNested.test_recursive_class(TestNested.java:119)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestNested.test_recursive_class(TestNested.java:119)

[INFO] Running com.jsoniter.output.TestMap
[ERROR] test_array_of_objects(com.jsoniter.output.TestNested)  Time elapsed: 0.007 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestNested$TestObject1 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestNested.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field1);
}
stream.writeRaw(",\"field2\":", 10);
if (obj.field2 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field2);
}
}

	at com.jsoniter.output.TestNested.test_array_of_objects(TestNested.java:38)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestNested.test_array_of_objects(TestNested.java:38)

[ERROR] test_collection_of_objects(com.jsoniter.output.TestNested)  Time elapsed: 0.003 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestNested$TestObject1 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.com.jsoniter.output.TestNested_TestObject1: frozen class (cannot edit)
public static void encode_(com.jsoniter.output.TestNested.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field1);
}
stream.writeRaw(",\"field2\":", 10);
if (obj.field2 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field2);
}
}

	at com.jsoniter.output.TestNested.test_collection_of_objects(TestNested.java:47)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.com.jsoniter.output.TestNested_TestObject1: frozen class (cannot edit)
	at com.jsoniter.output.TestNested.test_collection_of_objects(TestNested.java:47)

[ERROR] Tests run: 11, Failures: 0, Errors: 10, Skipped: 0, Time elapsed: 0.277 s <<< FAILURE! - in com.jsoniter.output.TestMap
[INFO] Running com.jsoniter.TestAnnotationJsonIgnore
[ERROR] test_value_is_null(com.jsoniter.output.TestMap)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.int_array: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { return; }
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.write(',');
e = arr[i++];
stream.writeVal((int)e);
}
}

	at com.jsoniter.output.TestMap.test_value_is_null(TestMap.java:54)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.int_array: frozen class (cannot edit)
	at com.jsoniter.output.TestMap.test_value_is_null(TestMap.java:54)

[ERROR] test_multiple_keys(com.jsoniter.output.TestMap)  Time elapsed: 0.133 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashMap with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_multiple_keys(TestMap.java:156)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestMap.test_multiple_keys(TestMap.java:156)

[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 3.285 s <<< FAILURE! - in com.jsoniter.TestAnnotationJsonIgnore
[ERROR] test_indention_with_empty_map(com.jsoniter.output.TestMap)  Time elapsed: 0.007 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashMap with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { stream.write((byte)'{', (byte)'}'); return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeObjectStart(); stream.writeIndention();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)entry.getValue());
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.writeMore();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)entry.getValue());
}
}
stream.writeObjectEnd();
}

	at com.jsoniter.output.TestMap.test_indention_with_empty_map(TestMap.java:135)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestMap.test_indention_with_empty_map(TestMap.java:135)

[ERROR] test_ignore_no_constructor_field(com.jsoniter.TestAnnotationJsonIgnore)  Time elapsed: 3.096 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@617449dd with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonIgnore.TestObject2 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonIgnore.TestObject2() : (com.jsoniter.TestAnnotationJsonIgnore.TestObject2)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
iter.skip();
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonIgnore.test_ignore_no_constructor_field(TestAnnotationJsonIgnore.java:35)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonIgnore.test_ignore_no_constructor_field(TestAnnotationJsonIgnore.java:35)

[ERROR] test_object_key(com.jsoniter.output.TestMap)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashMap with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.HashMap: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_object_key(TestMap.java:148)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.HashMap: frozen class (cannot edit)
	at com.jsoniter.output.TestMap.test_object_key(TestMap.java:148)

[ERROR] test(com.jsoniter.output.TestMap)  Time elapsed: 0.013 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashMap with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.HashMap: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test(TestMap.java:32)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.HashMap: frozen class (cannot edit)
	at com.jsoniter.output.TestMap.test(TestMap.java:32)

[ERROR] test_enum_key(com.jsoniter.output.TestMap)  Time elapsed: 0.013 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: java.util.Map<com.jsoniter.output.TestMap$EnumKey, java.lang.Object> with [class com.jsoniter.output.TestMap$EnumKey, class java.lang.Object], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
com.jsoniter.output.CodegenAccess.writeMapKey("jsoniter_codegen.cfg9223372034806973682.encoder.com.jsoniter.output.TestMap_EnumKey", entry.getKey(), stream);
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
com.jsoniter.output.CodegenAccess.writeMapKey("jsoniter_codegen.cfg9223372034806973682.encoder.com.jsoniter.output.TestMap_EnumKey", entry.getKey(), stream);
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_enum_key(TestMap.java:76)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestMap.test_enum_key(TestMap.java:76)

[ERROR] test_json_ignore_with_creator(com.jsoniter.TestAnnotationJsonIgnore)  Time elapsed: 0.175 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@16b3c905 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
java.lang.String _field2_ = null;
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return new com.jsoniter.TestAnnotationJsonIgnore.TestObject3(_field2_);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return new com.jsoniter.TestAnnotationJsonIgnore.TestObject3(_field2_);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1195428815: 
_field2_ = (java.lang.String)iter.readString();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotationJsonIgnore.TestObject3 obj = new com.jsoniter.TestAnnotationJsonIgnore.TestObject3(_field2_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonIgnore.test_json_ignore_with_creator(TestAnnotationJsonIgnore.java:63)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonIgnore.test_json_ignore_with_creator(TestAnnotationJsonIgnore.java:63)

[ERROR] test_integer_key(com.jsoniter.output.TestMap)  Time elapsed: 0.009 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: java.util.Map<java.lang.Integer, java.lang.Object> with [class java.lang.Integer, class java.lang.Object], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.write('"');
stream.writeVal((java.lang.Integer)entry.getKey());
stream.write('"');
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.write('"');
stream.writeVal((java.lang.Integer)entry.getKey());
stream.write('"');
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_integer_key(TestMap.java:63)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestMap.test_integer_key(TestMap.java:63)

[ERROR] test_ignore(com.jsoniter.TestAnnotationJsonIgnore)  Time elapsed: 0.013 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@53eba4b8 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonIgnore.TestObject1 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonIgnore.TestObject1() : (com.jsoniter.TestAnnotationJsonIgnore.TestObject1)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
iter.skip();
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonIgnore.test_ignore(TestAnnotationJsonIgnore.java:24)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonIgnore.test_ignore(TestAnnotationJsonIgnore.java:24)

[ERROR] test_int_as_map_key(com.jsoniter.output.TestMap)  Time elapsed: 0.005 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: java.util.Map<java.lang.Integer, java.lang.String> with [class java.lang.Integer, class java.lang.String], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.write('"');
stream.writeVal((java.lang.Integer)entry.getKey());
stream.write('"');
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.write('"');
stream.writeVal((java.lang.Integer)entry.getKey());
stream.write('"');
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.String", (java.lang.String)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_int_as_map_key(TestMap.java:141)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestMap.test_int_as_map_key(TestMap.java:141)

[INFO] Running com.jsoniter.TestAnnotation
[ERROR] test_MapKeyCodec(com.jsoniter.output.TestMap)  Time elapsed: 0.093 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: java.util.Map<com.jsoniter.output.TestMap$TestObject1, java.lang.Object> with [class com.jsoniter.output.TestMap$TestObject1, class java.lang.Object], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
com.jsoniter.output.CodegenAccess.writeMapKey("jsoniter_codegen.cfg9223372034806973682.encoder.com.jsoniter.output.TestMap_TestObject1", entry.getKey(), stream);
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
com.jsoniter.output.CodegenAccess.writeMapKey("jsoniter_codegen.cfg9223372034806973682.encoder.com.jsoniter.output.TestMap_TestObject1", entry.getKey(), stream);
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_MapKeyCodec(TestMap.java:96)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestMap.test_MapKeyCodec(TestMap.java:96)

[ERROR] Tests run: 4, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.357 s <<< FAILURE! - in com.jsoniter.TestAnnotation
[ERROR] test_name_conflict(com.jsoniter.TestAnnotation)  Time elapsed: 0.012 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@391515c7 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotation.TestObject17() : (com.jsoniter.TestAnnotation.TestObject17)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotation.TestObject17() : (com.jsoniter.TestAnnotation.TestObject17)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
int _field1_ = 0;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1212206434: 
_field1_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotation.TestObject17 obj = (existingObj == null ? new com.jsoniter.TestAnnotation.TestObject17() : (com.jsoniter.TestAnnotation.TestObject17)existingObj);
obj.setField1(_field1_);
return obj;
}
	at com.jsoniter.TestAnnotation.test_name_conflict(TestAnnotation.java:84)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotation.test_name_conflict(TestAnnotation.java:84)

[ERROR] test_inherited_setter_is_not_duplicate(com.jsoniter.TestAnnotation)  Time elapsed: 0.02 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@16bd7ae1 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotation.TestObject18() : (com.jsoniter.TestAnnotation.TestObject18)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotation.TestObject18() : (com.jsoniter.TestAnnotation.TestObject18)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
int __val_ = 0;
java.lang.Integer _hello_ = null;
java.lang.Object _hello_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1335831723: 
_hello_ = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
continue;
case 1952112677: 
__val_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotation.TestObject18 obj = (existingObj == null ? new com.jsoniter.TestAnnotation.TestObject18() : (com.jsoniter.TestAnnotation.TestObject18)existingObj);
obj._val = __val_;
obj.setHello(_hello_);
obj.setHello(_hello_);
return obj;
}
	at com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate(TestAnnotation.java:103)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate(TestAnnotation.java:103)

[ERROR] test_single_param_setter(com.jsoniter.TestAnnotation)  Time elapsed: 0.215 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@3312f4f4 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotation.TestObject5() : (com.jsoniter.TestAnnotation.TestObject5)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotation.TestObject5() : (com.jsoniter.TestAnnotation.TestObject5)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
int _field1_ = 0;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1212206434: 
_field1_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotation.TestObject5 obj = (existingObj == null ? new com.jsoniter.TestAnnotation.TestObject5() : (com.jsoniter.TestAnnotation.TestObject5)existingObj);
obj.setField1(_field1_);
return obj;
}
	at com.jsoniter.TestAnnotation.test_single_param_setter(TestAnnotation.java:48)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotation.test_single_param_setter(TestAnnotation.java:48)

[ERROR] test_empty(com.jsoniter.output.TestMap)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashMap with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.HashMap: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_empty(TestMap.java:39)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.HashMap: frozen class (cannot edit)
	at com.jsoniter.output.TestMap.test_empty(TestMap.java:39)

[ERROR] test_static_factory(com.jsoniter.TestAnnotation)  Time elapsed: 0.109 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@49cb3881 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
int _field1_ = 0;
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return com.jsoniter.TestAnnotation.TestObject4.createObject(_field1_);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return com.jsoniter.TestAnnotation.TestObject4.createObject(_field1_);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1212206434: 
_field1_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotation.TestObject4 obj = com.jsoniter.TestAnnotation.TestObject4.createObject(_field1_);
return obj;
}
	at com.jsoniter.TestAnnotation.test_static_factory(TestAnnotation.java:34)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotation.test_static_factory(TestAnnotation.java:34)

[INFO] Running com.jsoniter.TestNested
[INFO] Running com.jsoniter.TestExisting
[ERROR] Tests run: 4, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.225 s <<< FAILURE! - in com.jsoniter.TestNested
[ERROR] test_recursive_class(com.jsoniter.TestNested)  Time elapsed: 0.18 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@40a1b6d4 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.output.TestNested.TestObject3() : (com.jsoniter.output.TestNested.TestObject3)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.output.TestNested.TestObject3() : (com.jsoniter.output.TestNested.TestObject3)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
com.jsoniter.output.TestNested.TestObject3 _reference_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1518465946: 
_reference_ = (com.jsoniter.output.TestNested.TestObject3)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.output.TestNested_TestObject3", iter);
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.output.TestNested.TestObject3 obj = (existingObj == null ? new com.jsoniter.output.TestNested.TestObject3() : (com.jsoniter.output.TestNested.TestObject3)existingObj);
obj.reference = _reference_;
return obj;
}
	at com.jsoniter.TestNested.test_recursive_class(TestNested.java:70)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestNested.test_recursive_class(TestNested.java:70)

[ERROR] Tests run: 5, Failures: 0, Errors: 5, Skipped: 0, Time elapsed: 0.233 s <<< FAILURE! - in com.jsoniter.TestExisting
[ERROR] test_indirect_reuse(com.jsoniter.TestExisting)  Time elapsed: 0.19 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@649b5891 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestExisting.TestObj1 obj = (existingObj == null ? new com.jsoniter.TestExisting.TestObj1() : (com.jsoniter.TestExisting.TestObj1)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestExisting.test_indirect_reuse(TestExisting.java:44)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestExisting.test_indirect_reuse(TestExisting.java:44)

[ERROR] test_array_of_objects(com.jsoniter.TestNested)  Time elapsed: 0.014 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@5f0f70c7 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.SimpleObject() : (com.jsoniter.SimpleObject)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.SimpleObject() : (com.jsoniter.SimpleObject)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
java.lang.String _field2_ = null;
java.lang.String _field1_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1195428815: 
_field2_ = (java.lang.String)iter.readString();
continue;
case 1212206434: 
_field1_ = (java.lang.String)iter.readString();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.SimpleObject obj = (existingObj == null ? new com.jsoniter.SimpleObject() : (com.jsoniter.SimpleObject)existingObj);
obj.field2 = _field2_;
obj.field1 = _field1_;
return obj;
}
	at com.jsoniter.TestNested.test_array_of_objects(TestNested.java:13)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestNested.test_array_of_objects(TestNested.java:13)

[ERROR] test_direct_reuse(com.jsoniter.TestExisting)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7a3f08b6 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestExisting_TestObj1: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestExisting.TestObj1 obj = (existingObj == null ? new com.jsoniter.TestExisting.TestObj1() : (com.jsoniter.TestExisting.TestObj1)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestExisting.test_direct_reuse(TestExisting.java:28)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestExisting_TestObj1: frozen class (cannot edit)
	at com.jsoniter.TestExisting.test_direct_reuse(TestExisting.java:28)

[INFO] Running com.jsoniter.TestSpiPropertyDecoder
[ERROR] test_reuse_list(com.jsoniter.TestExisting)  Time elapsed: 0.038 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@5fb5ad40 with [class java.lang.Integer], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestExisting.test_reuse_list(TestExisting.java:53)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestExisting.test_reuse_list(TestExisting.java:53)

[ERROR] test_reuse_map(com.jsoniter.TestExisting)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@615439f7 with [class java.lang.String, class java.lang.Object], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.HashMap: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.Object)iter.read());
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestExisting.test_reuse_map(TestExisting.java:68)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.HashMap: frozen class (cannot edit)
	at com.jsoniter.TestExisting.test_reuse_map(TestExisting.java:68)

[ERROR] test_reuse_linked_list(com.jsoniter.TestExisting)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@51b87df7 with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.LinkedList_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
java.util.LinkedList col = (java.util.LinkedList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestExisting.test_reuse_linked_list(TestExisting.java:60)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.LinkedList_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestExisting.test_reuse_linked_list(TestExisting.java:60)

[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.021 s <<< FAILURE! - in com.jsoniter.TestSpiPropertyDecoder
[ERROR] test_PropertyDecoder(com.jsoniter.TestSpiPropertyDecoder)  Time elapsed: 0.011 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@37e967df with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestSpiPropertyDecoder.TestObject1() : (com.jsoniter.TestSpiPropertyDecoder.TestObject1)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestSpiPropertyDecoder.TestObject1() : (com.jsoniter.TestSpiPropertyDecoder.TestObject1)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
java.lang.String _field_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1736598119: 
_field_ = (java.lang.String)com.jsoniter.CodegenAccess.read("field@jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestSpiPropertyDecoder_TestObject1", iter);
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestSpiPropertyDecoder.TestObject1 obj = (existingObj == null ? new com.jsoniter.TestSpiPropertyDecoder.TestObject1() : (com.jsoniter.TestSpiPropertyDecoder.TestObject1)existingObj);
obj.field = _field_;
return obj;
}
	at com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder(TestSpiPropertyDecoder.java:28)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder(TestSpiPropertyDecoder.java:28)

[INFO] Running com.jsoniter.output.TestObject
[ERROR] test_PropertyDecoder_for_type_literal(com.jsoniter.TestSpiPropertyDecoder)  Time elapsed: 0.01 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@53b60595 with [class java.lang.Object], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestSpiPropertyDecoder.TestObject1() : (com.jsoniter.TestSpiPropertyDecoder.TestObject1)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestSpiPropertyDecoder.TestObject1() : (com.jsoniter.TestSpiPropertyDecoder.TestObject1)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
java.lang.String _field_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1736598119: 
_field_ = (java.lang.String)com.jsoniter.CodegenAccess.read("field@jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestSpiPropertyDecoder.TestObject1_java.lang.Object", iter);
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestSpiPropertyDecoder.TestObject1 obj = (existingObj == null ? new com.jsoniter.TestSpiPropertyDecoder.TestObject1() : (com.jsoniter.TestSpiPropertyDecoder.TestObject1)existingObj);
obj.field = _field_;
return obj;
}
	at com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal(TestSpiPropertyDecoder.java:42)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal(TestSpiPropertyDecoder.java:42)

[INFO] Running com.jsoniter.output.TestGenerics
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.044 s <<< FAILURE! - in com.jsoniter.output.TestGenerics
[ERROR] test_inherited_getter_is_not_duplicate(com.jsoniter.output.TestGenerics)  Time elapsed: 0.007 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestGenerics$TestObject6 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestGenerics.TestObject6 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.getHello() == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)obj.getHello());
}
}

	at com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate(TestGenerics.java:37)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate(TestGenerics.java:37)

[ERROR] test_wildcard(com.jsoniter.output.TestGenerics)  Time elapsed: 0.037 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: ParameterizedTypeImpl{actualTypeArguments=[?], ownerType=null, rawType=java.util.List} with [?], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
}
}

	at com.jsoniter.output.TestGenerics.test_wildcard(TestGenerics.java:55)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestGenerics.test_wildcard(TestGenerics.java:55)

[INFO] Running com.jsoniter.TestOmitValue
[ERROR] Tests run: 20, Failures: 0, Errors: 18, Skipped: 0, Time elapsed: 0.826 s <<< FAILURE! - in com.jsoniter.output.TestObject
[ERROR] test_array_field_is_null(com.jsoniter.output.TestObject)  Time elapsed: 0.012 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { return; }
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.write(',');
e = arr[i++];
stream.writeVal((int)e);
}
}

	at com.jsoniter.output.TestObject.test_array_field_is_null(TestObject.java:114)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_array_field_is_null(TestObject.java:114)

[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.jsoniter.TestOmitValue
[ERROR] test_omit_selft_defined(com.jsoniter.output.TestObject)  Time elapsed: 0.275 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject18 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject18 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
boolean notFirst = false;
if (!(true == obj.b)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'b', (byte)'\"', (byte)':');
stream.writeVal((boolean)obj.b);
}
if (!(true == obj.B.booleanValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'B', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Boolean)obj.B);
}
if (!(1 == obj.i)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'i', (byte)'\"', (byte)':');
stream.writeVal((int)obj.i);
}
if (!(1 == obj.I.intValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'I', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Integer)obj.I);
}
if (!(1 == obj.bt)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"bt\":", 5);
stream.writeVal((byte)obj.bt);
}
if (!(1 == obj.BT.byteValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"BT\":", 5);
stream.writeVal((java.lang.Byte)obj.BT);
}
if (!(1 == obj.s)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'s', (byte)'\"', (byte)':');
stream.writeVal((short)obj.s);
}
if (!(1 == obj.S.shortValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'S', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Short)obj.S);
}
if (!(1L == obj.l)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'l', (byte)'\"', (byte)':');
stream.writeVal((long)obj.l);
}
if (!(1L == obj.L.longValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'L', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Long)obj.L);
}
if (!(1F == obj.f)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'f', (byte)'\"', (byte)':');
stream.writeVal((float)obj.f);
}
if (!(1F == obj.F.floatValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'F', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Float)obj.F);
}
if (!(1D == obj.d)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'d', (byte)'\"', (byte)':');
stream.writeVal((double)obj.d);
}
if (!(1D == obj.D.doubleValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'D', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Double)obj.D);
}
if (!('a' == obj.c)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'c', (byte)'\"', (byte)':');
stream.writeVal((char)obj.c);
}
if (!('a' == obj.C.charValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'C', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Character)obj.C);
}
}

	at com.jsoniter.output.TestObject.test_omit_selft_defined(TestObject.java:410)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_omit_selft_defined(TestObject.java:410)

[INFO] Running com.jsoniter.output.TestCollection
[ERROR] test_not_omit_null(com.jsoniter.output.TestObject)  Time elapsed: 0.006 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject10 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject10 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field1);
}
}

	at com.jsoniter.output.TestObject.test_not_omit_null(TestObject.java:216)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_not_omit_null(TestObject.java:216)

[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.007 s <<< FAILURE! - in com.jsoniter.output.TestCollection
[ERROR] test_indention(com.jsoniter.output.TestCollection)  Time elapsed: 0.006 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashSet with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.Iterator iter = ((java.util.Collection)obj).iterator();
if (!iter.hasNext()) { stream.write((byte)'[', (byte)']'); return; }
stream.writeArrayStart(); stream.writeIndention();
java.lang.Object e = iter.next();
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
while (iter.hasNext()) {
stream.writeMore();
e = iter.next();
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
}
stream.writeArrayEnd();
}

	at com.jsoniter.output.TestCollection.test_indention(TestCollection.java:26)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestCollection.test_indention(TestCollection.java:26)

[ERROR] test_indention_with_empty_array(com.jsoniter.output.TestCollection)  Time elapsed: 0 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashSet with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg1755612019.encoder.java.util.HashSet: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.Iterator iter = ((java.util.Collection)obj).iterator();
if (!iter.hasNext()) { stream.write((byte)'[', (byte)']'); return; }
stream.writeArrayStart(); stream.writeIndention();
java.lang.Object e = iter.next();
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
while (iter.hasNext()) {
stream.writeMore();
e = iter.next();
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
}
stream.writeArrayEnd();
}

	at com.jsoniter.output.TestCollection.test_indention_with_empty_array(TestCollection.java:39)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg1755612019.encoder.java.util.HashSet: frozen class (cannot edit)
	at com.jsoniter.output.TestCollection.test_indention_with_empty_array(TestCollection.java:39)

[INFO] Running com.jsoniter.output.TestSpiPropertyEncoder
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.089 s <<< FAILURE! - in com.jsoniter.output.TestSpiPropertyEncoder
[ERROR] test_PropertyEncoder_for_type_literal(com.jsoniter.output.TestSpiPropertyEncoder)  Time elapsed: 0.071 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: com.jsoniter.output.TestSpiPropertyEncoder$TestObject1<java.lang.Object> with [class java.lang.Object], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestSpiPropertyEncoder.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("field1@jsoniter_codegen.cfg9223372036535405691.encoder.com.jsoniter.output.TestSpiPropertyEncoder.TestObject1_java.lang.Object", obj.field1, stream);
}
}

	at com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal(TestSpiPropertyEncoder.java:41)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal(TestSpiPropertyEncoder.java:41)

[ERROR] test_PropertyEncoder(com.jsoniter.output.TestSpiPropertyEncoder)  Time elapsed: 0.018 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestSpiPropertyEncoder$TestObject1 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestSpiPropertyEncoder.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("field1@jsoniter_codegen.cfg9223372036535405691.encoder.com.jsoniter.output.TestSpiPropertyEncoder_TestObject1", obj.field1, stream);
}
}

	at com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder(TestSpiPropertyEncoder.java:25)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder(TestSpiPropertyEncoder.java:25)

[INFO] Running com.jsoniter.TestSpiTypeDecoder
[ERROR] test_enum(com.jsoniter.output.TestObject)  Time elapsed: 0.035 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$MyEnum with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
stream.writeRaw(obj.toString());
}

	at com.jsoniter.output.TestObject.test_enum(TestObject.java:88)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_enum(TestObject.java:88)

[ERROR] test_empty_object(com.jsoniter.output.TestObject)  Time elapsed: 0.039 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject3 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject3 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
}

	at com.jsoniter.output.TestObject.test_empty_object(TestObject.java:61)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_empty_object(TestObject.java:61)

[ERROR] test_omit_default(com.jsoniter.output.TestObject)  Time elapsed: 0.022 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject17 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject17 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
boolean notFirst = false;
if (!(false == obj.b)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'b', (byte)'\"', (byte)':');
stream.writeVal((boolean)obj.b);
}
if (!(0 == obj.i)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'i', (byte)'\"', (byte)':');
stream.writeVal((int)obj.i);
}
if (!(0 == obj.bt)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"bt\":", 5);
stream.writeVal((byte)obj.bt);
}
if (!(0 == obj.s)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'s', (byte)'\"', (byte)':');
stream.writeVal((short)obj.s);
}
if (!(0 == obj.l)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'l', (byte)'\"', (byte)':');
stream.writeVal((long)obj.l);
}
if (!(0 == obj.f)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'f', (byte)'\"', (byte)':');
stream.writeVal((float)obj.f);
}
if (!(0 == obj.d)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'d', (byte)'\"', (byte)':');
stream.writeVal((double)obj.d);
}
if (!(0 == obj.e)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'e', (byte)'\"', (byte)':');
stream.writeVal((char)obj.e);
}
}

	at com.jsoniter.output.TestObject.test_omit_default(TestObject.java:363)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_omit_default(TestObject.java:363)

[ERROR] test_missing_notFirst(com.jsoniter.output.TestObject)  Time elapsed: 0.094 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject16 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject16 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
stream.writeObjectStart();
stream.writeIndention();
stream.writeObjectField("i");
if (obj.i == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Integer)obj.i);
}
stream.writeObjectEnd();
}

	at com.jsoniter.output.TestObject.test_missing_notFirst(TestObject.java:340)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_missing_notFirst(TestObject.java:340)

[ERROR] Tests run: 6, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.124 s <<< FAILURE! - in com.jsoniter.TestSpiTypeDecoder
[ERROR] test_list_or_single_element(com.jsoniter.TestSpiTypeDecoder)  Time elapsed: 0.005 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@2e214d39 with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.String: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element(TestSpiTypeDecoder.java:121)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element(TestSpiTypeDecoder.java:121)

[ERROR] test_name_conflict(com.jsoniter.output.TestObject)  Time elapsed: 0.015 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject12 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject12 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
stream.writeVal((int)obj.getField1());
}

	at com.jsoniter.output.TestObject.test_name_conflict(TestObject.java:252)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_name_conflict(TestObject.java:252)

[ERROR] test_as_field_type(com.jsoniter.TestSpiTypeDecoder)  Time elapsed: 0.013 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@54dc163a with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestSpiTypeDecoder.FieldWithMyDate() : (com.jsoniter.TestSpiTypeDecoder.FieldWithMyDate)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestSpiTypeDecoder.FieldWithMyDate() : (com.jsoniter.TestSpiTypeDecoder.FieldWithMyDate)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
com.jsoniter.TestSpiTypeDecoder.MyDate _field_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1736598119: 
_field_ = (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestSpiTypeDecoder.FieldWithMyDate obj = (existingObj == null ? new com.jsoniter.TestSpiTypeDecoder.FieldWithMyDate() : (com.jsoniter.TestSpiTypeDecoder.FieldWithMyDate)existingObj);
obj.field = _field_;
return obj;
}
	at com.jsoniter.TestSpiTypeDecoder.test_as_field_type(TestSpiTypeDecoder.java:84)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestSpiTypeDecoder.test_as_field_type(TestSpiTypeDecoder.java:84)

[ERROR] test_indention(com.jsoniter.output.TestObject)  Time elapsed: 0.036 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject14 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject14 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
stream.writeObjectStart();
boolean notFirst = false;
if (!(null == obj.field1)) {
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("field1");
stream.writeVal((java.lang.String)obj.field1);
}
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("field2");
stream.writeVal((java.lang.String)obj.field2);
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("field3");
if (obj.field3 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field3);
}
if (notFirst) { stream.writeObjectEnd(); } else { stream.write('}'); }
}

	at com.jsoniter.output.TestObject.test_indention(TestObject.java:290)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_indention(TestObject.java:290)

[ERROR] test_not_nullable(com.jsoniter.output.TestObject)  Time elapsed: 0.022 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [Ljava.lang.String; with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.lang.String[] arr = (java.lang.String[])obj;
if (arr.length == 0) { return; }
int i = 0;
java.lang.String e = arr[i++];
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)e);
}
while (i < arr.length) {
stream.write(',');
e = arr[i++];
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)e);
}
}
}

	at com.jsoniter.output.TestObject.test_not_nullable(TestObject.java:147)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_not_nullable(TestObject.java:147)

[ERROR] test_as_array_element(com.jsoniter.TestSpiTypeDecoder)  Time elapsed: 0.093 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@456beb8b with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new com.jsoniter.TestSpiTypeDecoder.MyDate[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
com.jsoniter.TestSpiTypeDecoder.MyDate a1 = (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new com.jsoniter.TestSpiTypeDecoder.MyDate[]{ a1 };
}
com.jsoniter.TestSpiTypeDecoder.MyDate a2 = (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new com.jsoniter.TestSpiTypeDecoder.MyDate[]{ a1, a2 };
}
com.jsoniter.TestSpiTypeDecoder.MyDate a3 = (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new com.jsoniter.TestSpiTypeDecoder.MyDate[]{ a1, a2, a3 };
}
com.jsoniter.TestSpiTypeDecoder.MyDate a4 = (com.jsoniter.TestSpiTypeDecoder.MyDate) (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new com.jsoniter.TestSpiTypeDecoder.MyDate[]{ a1, a2, a3, a4 };
}
com.jsoniter.TestSpiTypeDecoder.MyDate a5 = (com.jsoniter.TestSpiTypeDecoder.MyDate) (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
com.jsoniter.TestSpiTypeDecoder.MyDate[] arr = new com.jsoniter.TestSpiTypeDecoder.MyDate[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
com.jsoniter.TestSpiTypeDecoder.MyDate[] newArr = new com.jsoniter.TestSpiTypeDecoder.MyDate[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (com.jsoniter.TestSpiTypeDecoder.MyDate)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestSpiTypeDecoder_MyDate", iter);
}
com.jsoniter.TestSpiTypeDecoder.MyDate[] result = new com.jsoniter.TestSpiTypeDecoder.MyDate[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestSpiTypeDecoder.test_as_array_element(TestSpiTypeDecoder.java:90)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestSpiTypeDecoder.test_as_array_element(TestSpiTypeDecoder.java:90)

[ERROR] test_array_field_is_null_via_getter(com.jsoniter.output.TestObject)  Time elapsed: 0.011 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.int_array: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { return; }
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.write(',');
e = arr[i++];
stream.writeVal((int)e);
}
}

	at com.jsoniter.output.TestObject.test_array_field_is_null_via_getter(TestObject.java:130)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.int_array: frozen class (cannot edit)
	at com.jsoniter.output.TestObject.test_array_field_is_null_via_getter(TestObject.java:130)

[ERROR] test_omit_null(com.jsoniter.output.TestObject)  Time elapsed: 0.008 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject11 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject11 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
boolean notFirst = false;
if (!(null == obj.field1)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"field1\":", 9);
stream.writeVal((java.lang.String)obj.field1);
}
if (!(null == obj.field2)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"field2\":", 9);
stream.writeVal((java.lang.String)obj.field2);
}
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"field3\":", 9);
stream.writeVal((java.lang.Integer)obj.field3);
}

	at com.jsoniter.output.TestObject.test_omit_null(TestObject.java:229)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_omit_null(TestObject.java:229)

[ERROR] test_null_field(com.jsoniter.output.TestObject)  Time elapsed: 0.133 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject4 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject4 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field1);
}
}

	at com.jsoniter.output.TestObject.test_null_field(TestObject.java:72)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_null_field(TestObject.java:72)

[ERROR] test_array_field(com.jsoniter.output.TestObject)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.int_array: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { return; }
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.write(',');
e = arr[i++];
stream.writeVal((int)e);
}
}

	at com.jsoniter.output.TestObject.test_array_field(TestObject.java:107)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.int_array: frozen class (cannot edit)
	at com.jsoniter.output.TestObject.test_array_field(TestObject.java:107)

[ERROR] test_transient_field_getter(com.jsoniter.output.TestObject)  Time elapsed: 0.004 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject19 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject19 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
}

	at com.jsoniter.output.TestObject.test_transient_field_getter(TestObject.java:422)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_transient_field_getter(TestObject.java:422)

[INFO] Running com.jsoniter.output.TestGson
[ERROR] test_indention_with_empty_object(com.jsoniter.output.TestObject)  Time elapsed: 0.02 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject15 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject15 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
stream.writeObjectStart();
boolean notFirst = false;
if (!(null == obj.i1)) {
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("i1");
stream.writeVal((java.lang.Integer)obj.i1);
}
if (!(null == obj.i2)) {
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("i2");
stream.writeVal((java.lang.Integer)obj.i2);
}
if (notFirst) { stream.writeObjectEnd(); } else { stream.write('}'); }
}

	at com.jsoniter.output.TestObject.test_indention_with_empty_object(TestObject.java:325)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_indention_with_empty_object(TestObject.java:325)

[ERROR] Tests run: 15, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 0.251 s <<< FAILURE! - in com.jsoniter.output.TestGson
[ERROR] test_setDateFormat_with_style(com.jsoniter.output.TestGson)  Time elapsed: 0.094 s  <<< FAILURE!
junit.framework.ComparisonFailure: expected:<"January 1, 1970 []12:00:00 AM UTC"> but was:<"January 1, 1970 [at ]12:00:00 AM UTC">
	at com.jsoniter.output.TestGson.test_setDateFormat_with_style(TestGson.java:118)

[ERROR] test_surrogate(com.jsoniter.output.TestGson)  Time elapsed: 0.002 s  <<< FAILURE!
java.lang.AssertionError: java.lang.IllegalAccessException: class com.google.gson.internal.ConstructorConstructor$3 cannot access a member of class com.jsoniter.output.TestGson$TestObject with modifiers "private"
	at com.jsoniter.output.TestGson.test_surrogate(TestGson.java:292)
Caused by: java.lang.IllegalAccessException: class com.google.gson.internal.ConstructorConstructor$3 cannot access a member of class com.jsoniter.output.TestGson$TestObject with modifiers "private"
	at com.jsoniter.output.TestGson.test_surrogate(TestGson.java:292)

[ERROR] test_collection_value_not_nullable(com.jsoniter.output.TestObject)  Time elapsed: 0.009 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [Ljava.lang.String; with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.lang.String[] arr = (java.lang.String[])obj;
if (arr.length == 0) { return; }
int i = 0;
java.lang.String e = arr[i++];
com.jsoniter.output.CodegenAccess.writeStringWithoutQuote((java.lang.String)e, stream);
while (i < arr.length) {
stream.write((byte)'\"');
stream.write(',');
e = arr[i++];
stream.write((byte)'\"');
com.jsoniter.output.CodegenAccess.writeStringWithoutQuote((java.lang.String)e, stream);
}
}

	at com.jsoniter.output.TestObject.test_collection_value_not_nullable(TestObject.java:169)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_collection_value_not_nullable(TestObject.java:169)

[INFO] Running com.jsoniter.TestAnnotationJsonCreator
[ERROR] test_field(com.jsoniter.output.TestObject)  Time elapsed: 0.055 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject1 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field1);
}
}

	at com.jsoniter.output.TestObject.test_field(TestObject.java:36)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_field(TestObject.java:36)

[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.232 s <<< FAILURE! - in com.jsoniter.TestAnnotationJsonCreator
[INFO] Running com.jsoniter.TestGenerics
[ERROR] test_ctor_and_setter_binding(com.jsoniter.TestAnnotationJsonCreator)  Time elapsed: 0.146 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@482c351d with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
java.lang.String _name_ = null;
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return new com.jsoniter.TestAnnotationJsonCreator.TestObject(_name_);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return new com.jsoniter.TestAnnotationJsonCreator.TestObject(_name_);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
com.jsoniter.any.Any _props_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case -2018140719: 
_props_ = (com.jsoniter.any.Any)iter.readAny();
continue;
case -1925595674: 
_name_ = (java.lang.String)iter.readString();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotationJsonCreator.TestObject obj = new com.jsoniter.TestAnnotationJsonCreator.TestObject(_name_);
obj.setProperties(_props_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding(TestAnnotationJsonCreator.java:52)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding(TestAnnotationJsonCreator.java:52)

[ERROR] test_ctor(com.jsoniter.TestAnnotationJsonCreator)  Time elapsed: 0.086 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@320be73 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
int _field1_ = 0;
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return new com.jsoniter.TestAnnotationJsonCreator.TestObject2(_field1_);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return new com.jsoniter.TestAnnotationJsonCreator.TestObject2(_field1_);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1212206434: 
_field1_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotationJsonCreator.TestObject2 obj = new com.jsoniter.TestAnnotationJsonCreator.TestObject2(_field1_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonCreator.test_ctor(TestAnnotationJsonCreator.java:27)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonCreator.test_ctor(TestAnnotationJsonCreator.java:27)

[INFO] Running com.jsoniter.output.TestArray
[ERROR] Tests run: 22, Failures: 0, Errors: 20, Skipped: 0, Time elapsed: 0.579 s <<< FAILURE! - in com.jsoniter.TestGenerics
[ERROR] test_string_list(com.jsoniter.TestGenerics)  Time elapsed: 0.011 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@634e1b39 with [class java.lang.String], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_string_list(TestGenerics.java:26)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_string_list(TestGenerics.java:26)

[ERROR] Tests run: 15, Failures: 0, Errors: 13, Skipped: 0, Time elapsed: 0.28 s <<< FAILURE! - in com.jsoniter.output.TestArray
[ERROR] test_linked_list(com.jsoniter.TestGenerics)  Time elapsed: 0.01 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@751d7425 with [class java.lang.String], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
java.util.LinkedList col = (java.util.LinkedList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_linked_list(TestGenerics.java:33)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_linked_list(TestGenerics.java:33)

[ERROR] test_arrays_as_list(com.jsoniter.output.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.AbstractList with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.Arrays_ArrayList: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_arrays_as_list(TestArray.java:114)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.Arrays_ArrayList: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_arrays_as_list(TestArray.java:114)

[ERROR] test_int_list(com.jsoniter.TestGenerics)  Time elapsed: 0.014 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@6dae70f9 with [class java.lang.Integer], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestGenerics.test_int_list(TestGenerics.java:19)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_int_list(TestGenerics.java:19)

[ERROR] test_array_of_null(com.jsoniter.output.TestArray)  Time elapsed: 0.12 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: ParameterizedTypeImpl{actualTypeArguments=[class java.lang.String], ownerType=null, rawType=java.util.List} with [class java.lang.String], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_array_of_null(TestArray.java:90)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestArray.test_array_of_null(TestArray.java:90)

[ERROR] test_issue_103(com.jsoniter.TestGenerics)  Time elapsed: 0.017 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7ac058a0 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestGenerics.User obj = (existingObj == null ? new com.jsoniter.TestGenerics.User() : (com.jsoniter.TestGenerics.User)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 3: 
if (
field.at(0)==97 && 
field.at(1)==103 && 
field.at(2)==101
) {
obj.age= (int)iter.readInt();
continue;
}
break;
case 4: 
if (
field.at(0)==110 && 
field.at(1)==97 && 
field.at(2)==109 && 
field.at(3)==101
) {
obj.name= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 3: 
if (
field.at(0)==97 && 
field.at(1)==103 && 
field.at(2)==101
) {
obj.age= (int)iter.readInt();
continue;
}
break;
case 4: 
if (
field.at(0)==110 && 
field.at(1)==97 && 
field.at(2)==109 && 
field.at(3)==101
) {
obj.name= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestGenerics.test_issue_103(TestGenerics.java:130)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_issue_103(TestGenerics.java:130)

[ERROR] test_default_empty_collection(com.jsoniter.output.TestArray)  Time elapsed: 0.012 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.AbstractSet with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.Iterator iter = ((java.util.Collection)obj).iterator();
if (!iter.hasNext()) { return; }
java.lang.Object e = iter.next();
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
while (iter.hasNext()) {
stream.write(',');
e = iter.next();
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_default_empty_collection(TestArray.java:118)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestArray.test_default_empty_collection(TestArray.java:118)

[ERROR] test_hash_set(com.jsoniter.output.TestArray)  Time elapsed: 0.006 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashSet with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.Iterator iter = ((java.util.Collection)obj).iterator();
if (!iter.hasNext()) { return; }
java.lang.Object e = iter.next();
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
while (iter.hasNext()) {
stream.write(',');
e = iter.next();
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_hash_set(TestArray.java:107)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestArray.test_hash_set(TestArray.java:107)

[ERROR] test_indention(com.jsoniter.output.TestArray)  Time elapsed: 0.004 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { stream.write((byte)'[', (byte)']'); return; }
stream.writeArrayStart(); stream.writeIndention();
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.writeMore();
e = arr[i++];
stream.writeVal((int)e);
}
stream.writeArrayEnd();
}

	at com.jsoniter.output.TestArray.test_indention(TestArray.java:137)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestArray.test_indention(TestArray.java:137)

[ERROR] test_gen_array(com.jsoniter.output.TestArray)  Time elapsed: 0.007 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [Ljava.lang.String; with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.lang.String[] arr = (java.lang.String[])obj;
if (arr.length == 0) { return; }
int i = 0;
java.lang.String e = arr[i++];
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)e, stream);
}
while (i < arr.length) {
stream.write(',');
e = arr[i++];
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_gen_array(TestArray.java:26)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestArray.test_gen_array(TestArray.java:26)

[ERROR] test_empty_collection(com.jsoniter.output.TestArray)  Time elapsed: 0.004 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.ArrayList with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_empty_collection(TestArray.java:64)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestArray.test_empty_collection(TestArray.java:64)

[ERROR] test_list_of_null(com.jsoniter.output.TestArray)  Time elapsed: 0.003 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: ParameterizedTypeImpl{actualTypeArguments=[class java.lang.String], ownerType=null, rawType=java.util.List} with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.List_java.lang.String: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_list_of_null(TestArray.java:100)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.List_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_list_of_null(TestArray.java:100)

[ERROR] test_indention_with_empty_array(com.jsoniter.output.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg1755612019.encoder.int_array: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { stream.write((byte)'[', (byte)']'); return; }
stream.writeArrayStart(); stream.writeIndention();
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.writeMore();
e = arr[i++];
stream.writeVal((int)e);
}
stream.writeArrayEnd();
}

	at com.jsoniter.output.TestArray.test_indention_with_empty_array(TestArray.java:150)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg1755612019.encoder.int_array: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_indention_with_empty_array(TestArray.java:150)

[ERROR] test_list_of_list(com.jsoniter.TestGenerics)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@60deefed with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestGenerics.test_list_of_list(TestGenerics.java:61)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_list_of_list(TestGenerics.java:61)

[ERROR] test_integer_map(com.jsoniter.TestGenerics)  Time elapsed: 0.249 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@31881aa2 with [class java.lang.String, class java.lang.Integer], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestGenerics.test_integer_map(TestGenerics.java:54)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_integer_map(TestGenerics.java:54)

[ERROR] test_string_map(com.jsoniter.TestGenerics)  Time elapsed: 0.005 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@cf01c2e with [class java.lang.String, class java.lang.String], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.String)iter.readString());
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestGenerics.test_string_map(TestGenerics.java:47)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_string_map(TestGenerics.java:47)

[ERROR] test_string_set(com.jsoniter.TestGenerics)  Time elapsed: 0.015 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@1eb9bf60 with [class java.lang.String], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashSet col = (java.util.HashSet)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.HashSet(0): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.HashSet obj = col == null ? new java.util.HashSet(1): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.HashSet obj = col == null ? new java.util.HashSet(2): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.HashSet obj = col == null ? new java.util.HashSet(3): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.HashSet obj = col == null ? new java.util.HashSet(8): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_string_set(TestGenerics.java:40)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_string_set(TestGenerics.java:40)

[ERROR] test_complex_object(com.jsoniter.TestGenerics)  Time elapsed: 0.126 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@38811103 with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestGenerics.test_complex_object(TestGenerics.java:68)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_complex_object(TestGenerics.java:68)

[ERROR] test_wildcard(com.jsoniter.TestGenerics)  Time elapsed: 0.028 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@2becfd4c with [?], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Object)iter.read();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Object)iter.read();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Object)iter.read();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Object)iter.read();
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Object)iter.read());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_wildcard(TestGenerics.java:140)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_wildcard(TestGenerics.java:140)

[ERROR] test_string_list(com.jsoniter.TestGenerics)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7c71c889 with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.String: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_string_list(TestGenerics.java:26)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_string_list(TestGenerics.java:26)

[ERROR] test_list_of_objects(com.jsoniter.output.TestArray)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: ParameterizedTypeImpl{actualTypeArguments=[class java.lang.String], ownerType=null, rawType=java.util.List} with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.List_java.lang.String: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_list_of_objects(TestArray.java:83)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.List_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_list_of_objects(TestArray.java:83)

[ERROR] test_collection(com.jsoniter.output.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: java.util.List<java.lang.String> with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.List_java.lang.String: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_collection(TestArray.java:35)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.List_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_collection(TestArray.java:35)

[ERROR] test_collection_without_type(com.jsoniter.output.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.ArrayList with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.ArrayList: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_collection_without_type(TestArray.java:45)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.ArrayList: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_collection_without_type(TestArray.java:45)

[ERROR] test_empty_array(com.jsoniter.output.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [Ljava.lang.String; with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String_array: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.lang.String[] arr = (java.lang.String[])obj;
if (arr.length == 0) { return; }
int i = 0;
java.lang.String e = arr[i++];
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)e, stream);
}
while (i < arr.length) {
stream.write(',');
e = arr[i++];
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)e, stream);
}
}
}

	at com.jsoniter.output.TestArray.test_empty_array(TestArray.java:51)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String_array: frozen class (cannot edit)
	at com.jsoniter.output.TestArray.test_empty_array(TestArray.java:51)

[ERROR] test_linked_list(com.jsoniter.TestGenerics)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@4cc8d70d with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.LinkedList_java.lang.String: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
java.util.LinkedList col = (java.util.LinkedList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_linked_list(TestGenerics.java:33)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.LinkedList_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_linked_list(TestGenerics.java:33)

[INFO] Running com.jsoniter.output.TestMap
[ERROR] test_int_list(com.jsoniter.TestGenerics)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@5c59a0f7 with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.ArrayList_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestGenerics.test_int_list(TestGenerics.java:19)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.ArrayList_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_int_list(TestGenerics.java:19)

[ERROR] Tests run: 11, Failures: 0, Errors: 10, Skipped: 0, Time elapsed: 0.259 s <<< FAILURE! - in com.jsoniter.output.TestMap
[ERROR] test_value_is_null(com.jsoniter.output.TestMap)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.int_array: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { return; }
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.write(',');
e = arr[i++];
stream.writeVal((int)e);
}
}

	at com.jsoniter.output.TestMap.test_value_is_null(TestMap.java:54)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.int_array: frozen class (cannot edit)
	at com.jsoniter.output.TestMap.test_value_is_null(TestMap.java:54)

[ERROR] test_multiple_keys(com.jsoniter.output.TestMap)  Time elapsed: 0.013 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashMap with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_multiple_keys(TestMap.java:156)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestMap.test_multiple_keys(TestMap.java:156)

[ERROR] test_indention_with_empty_map(com.jsoniter.output.TestMap)  Time elapsed: 0.1 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashMap with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { stream.write((byte)'{', (byte)'}'); return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeObjectStart(); stream.writeIndention();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)entry.getValue());
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.writeMore();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)entry.getValue());
}
}
stream.writeObjectEnd();
}

	at com.jsoniter.output.TestMap.test_indention_with_empty_map(TestMap.java:135)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestMap.test_indention_with_empty_map(TestMap.java:135)

[ERROR] test_object_key(com.jsoniter.output.TestMap)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashMap with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.HashMap: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_object_key(TestMap.java:148)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.HashMap: frozen class (cannot edit)
	at com.jsoniter.output.TestMap.test_object_key(TestMap.java:148)

[ERROR] test_issue_103(com.jsoniter.TestGenerics)  Time elapsed: 0.003 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@101330ad with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestGenerics_User: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestGenerics.User obj = (existingObj == null ? new com.jsoniter.TestGenerics.User() : (com.jsoniter.TestGenerics.User)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 3: 
if (
field.at(0)==97 && 
field.at(1)==103 && 
field.at(2)==101
) {
obj.age= (int)iter.readInt();
continue;
}
break;
case 4: 
if (
field.at(0)==110 && 
field.at(1)==97 && 
field.at(2)==109 && 
field.at(3)==101
) {
obj.name= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 3: 
if (
field.at(0)==97 && 
field.at(1)==103 && 
field.at(2)==101
) {
obj.age= (int)iter.readInt();
continue;
}
break;
case 4: 
if (
field.at(0)==110 && 
field.at(1)==97 && 
field.at(2)==109 && 
field.at(3)==101
) {
obj.name= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestGenerics.test_issue_103(TestGenerics.java:130)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestGenerics_User: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_issue_103(TestGenerics.java:130)

[ERROR] test(com.jsoniter.output.TestMap)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashMap with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.HashMap: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test(TestMap.java:32)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.HashMap: frozen class (cannot edit)
	at com.jsoniter.output.TestMap.test(TestMap.java:32)

[ERROR] test_enum_key(com.jsoniter.output.TestMap)  Time elapsed: 0.035 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: java.util.Map<com.jsoniter.output.TestMap$EnumKey, java.lang.Object> with [class com.jsoniter.output.TestMap$EnumKey, class java.lang.Object], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
com.jsoniter.output.CodegenAccess.writeMapKey("jsoniter_codegen.cfg9223372036535405691.encoder.com.jsoniter.output.TestMap_EnumKey", entry.getKey(), stream);
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
com.jsoniter.output.CodegenAccess.writeMapKey("jsoniter_codegen.cfg9223372036535405691.encoder.com.jsoniter.output.TestMap_EnumKey", entry.getKey(), stream);
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_enum_key(TestMap.java:76)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestMap.test_enum_key(TestMap.java:76)

[ERROR] test_list_of_list(com.jsoniter.TestGenerics)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@625487a6 with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestGenerics.test_list_of_list(TestGenerics.java:61)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_list_of_list(TestGenerics.java:61)

[ERROR] test_integer_map(com.jsoniter.TestGenerics)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@682e445e with [class java.lang.String, class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.Map_java.lang.String_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestGenerics.test_integer_map(TestGenerics.java:54)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.Map_java.lang.String_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_integer_map(TestGenerics.java:54)

[ERROR] test_integer_key(com.jsoniter.output.TestMap)  Time elapsed: 0.026 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: java.util.Map<java.lang.Integer, java.lang.Object> with [class java.lang.Integer, class java.lang.Object], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.write('"');
stream.writeVal((java.lang.Integer)entry.getKey());
stream.write('"');
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.write('"');
stream.writeVal((java.lang.Integer)entry.getKey());
stream.write('"');
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_integer_key(TestMap.java:63)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestMap.test_integer_key(TestMap.java:63)

[ERROR] test_int_as_map_key(com.jsoniter.output.TestMap)  Time elapsed: 0.006 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: java.util.Map<java.lang.Integer, java.lang.String> with [class java.lang.Integer, class java.lang.String], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.write('"');
stream.writeVal((java.lang.Integer)entry.getKey());
stream.write('"');
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.write('"');
stream.writeVal((java.lang.Integer)entry.getKey());
stream.write('"');
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.String", (java.lang.String)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_int_as_map_key(TestMap.java:141)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestMap.test_int_as_map_key(TestMap.java:141)

[ERROR] test_MapKeyCodec(com.jsoniter.output.TestMap)  Time elapsed: 0.074 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: java.util.Map<com.jsoniter.output.TestMap$TestObject1, java.lang.Object> with [class com.jsoniter.output.TestMap$TestObject1, class java.lang.Object], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
com.jsoniter.output.CodegenAccess.writeMapKey("jsoniter_codegen.cfg9223372036535405691.encoder.com.jsoniter.output.TestMap_TestObject1", entry.getKey(), stream);
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
com.jsoniter.output.CodegenAccess.writeMapKey("jsoniter_codegen.cfg9223372036535405691.encoder.com.jsoniter.output.TestMap_TestObject1", entry.getKey(), stream);
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_MapKeyCodec(TestMap.java:96)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestMap.test_MapKeyCodec(TestMap.java:96)

[ERROR] test_string_map(com.jsoniter.TestGenerics)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@79e10fb4 with [class java.lang.String, class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.Map_java.lang.String_java.lang.String: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.String)iter.readString());
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestGenerics.test_string_map(TestGenerics.java:47)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.Map_java.lang.String_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_string_map(TestGenerics.java:47)

[ERROR] test_string_set(com.jsoniter.TestGenerics)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@70fede7d with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.Set_java.lang.String: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashSet col = (java.util.HashSet)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.HashSet(0): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.HashSet obj = col == null ? new java.util.HashSet(1): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.HashSet obj = col == null ? new java.util.HashSet(2): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.HashSet obj = col == null ? new java.util.HashSet(3): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.HashSet obj = col == null ? new java.util.HashSet(8): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_string_set(TestGenerics.java:40)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.Set_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_string_set(TestGenerics.java:40)

[ERROR] test_empty(com.jsoniter.output.TestMap)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.HashMap with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.HashMap: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.writeObjectField(entry.getKey());
if (entry.getValue() == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)entry.getValue(), stream);
}
}
}

	at com.jsoniter.output.TestMap.test_empty(TestMap.java:39)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.HashMap: frozen class (cannot edit)
	at com.jsoniter.output.TestMap.test_empty(TestMap.java:39)

[ERROR] test_complex_object(com.jsoniter.TestGenerics)  Time elapsed: 0.077 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@36510e73 with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestGenerics.test_complex_object(TestGenerics.java:68)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_complex_object(TestGenerics.java:68)

[INFO] Running com.jsoniter.TestExisting
[ERROR] test_wildcard(com.jsoniter.TestGenerics)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@2c47a053 with [?], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Object: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Object)iter.read();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Object)iter.read();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Object)iter.read();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Object)iter.read();
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Object)iter.read());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_wildcard(TestGenerics.java:140)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Object: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_wildcard(TestGenerics.java:140)

[INFO] Running com.jsoniter.any.TestArray
[ERROR] Tests run: 5, Failures: 0, Errors: 5, Skipped: 0, Time elapsed: 0.3 s <<< FAILURE! - in com.jsoniter.TestExisting
[ERROR] test_indirect_reuse(com.jsoniter.TestExisting)  Time elapsed: 0.131 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@5fb5ad40 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestExisting.TestObj1() : (com.jsoniter.TestExisting.TestObj1)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestExisting.TestObj1() : (com.jsoniter.TestExisting.TestObj1)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
java.lang.String _field1_ = null;
java.lang.String _field2_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1195428815: 
_field2_ = (java.lang.String)iter.readString();
continue;
case 1212206434: 
_field1_ = (java.lang.String)iter.readString();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestExisting.TestObj1 obj = (existingObj == null ? new com.jsoniter.TestExisting.TestObj1() : (com.jsoniter.TestExisting.TestObj1)existingObj);
obj.field1 = _field1_;
obj.field2 = _field2_;
return obj;
}
	at com.jsoniter.TestExisting.test_indirect_reuse(TestExisting.java:44)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestExisting.test_indirect_reuse(TestExisting.java:44)

[ERROR] Tests run: 10, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.009 s <<< FAILURE! - in com.jsoniter.any.TestArray
[ERROR] test_direct_reuse(com.jsoniter.TestExisting)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@615439f7 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestExisting_TestObj1: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestExisting.TestObj1() : (com.jsoniter.TestExisting.TestObj1)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestExisting.TestObj1() : (com.jsoniter.TestExisting.TestObj1)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
java.lang.String _field1_ = null;
java.lang.String _field2_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1195428815: 
_field2_ = (java.lang.String)iter.readString();
continue;
case 1212206434: 
_field1_ = (java.lang.String)iter.readString();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestExisting.TestObj1 obj = (existingObj == null ? new com.jsoniter.TestExisting.TestObj1() : (com.jsoniter.TestExisting.TestObj1)existingObj);
obj.field1 = _field1_;
obj.field2 = _field2_;
return obj;
}
	at com.jsoniter.TestExisting.test_direct_reuse(TestExisting.java:28)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestExisting_TestObj1: frozen class (cannot edit)
	at com.jsoniter.TestExisting.test_direct_reuse(TestExisting.java:28)

[ERROR] test_to_string(com.jsoniter.any.TestArray)  Time elapsed: 0.003 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [J with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
long[] arr = (long[])obj;
if (arr.length == 0) { return; }
int i = 0;
long e = arr[i++];
stream.writeVal((long)e);
while (i < arr.length) {
stream.write(',');
e = arr[i++];
stream.writeVal((long)e);
}
}

	at com.jsoniter.any.TestArray.test_to_string(TestArray.java:53)
Caused by: java.lang.NullPointerException
	at com.jsoniter.any.TestArray.test_to_string(TestArray.java:53)

[ERROR] test_reuse_list(com.jsoniter.TestExisting)  Time elapsed: 0.155 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@51b87df7 with [class java.lang.Integer], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestExisting.test_reuse_list(TestExisting.java:53)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestExisting.test_reuse_list(TestExisting.java:53)

[INFO] Running com.jsoniter.TestArray
[ERROR] test_reuse_map(com.jsoniter.TestExisting)  Time elapsed: 0.006 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@2315052d with [class java.lang.String, class java.lang.Object], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.HashMap: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.Object)iter.read());
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestExisting.test_reuse_map(TestExisting.java:68)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.HashMap: frozen class (cannot edit)
	at com.jsoniter.TestExisting.test_reuse_map(TestExisting.java:68)

[ERROR] Tests run: 10, Failures: 0, Errors: 9, Skipped: 0, Time elapsed: 0.21 s <<< FAILURE! - in com.jsoniter.TestArray
[ERROR] test_reuse_linked_list(com.jsoniter.TestExisting)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@67d8faec with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.LinkedList_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
java.util.LinkedList col = (java.util.LinkedList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestExisting.test_reuse_linked_list(TestExisting.java:60)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.LinkedList_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestExisting.test_reuse_linked_list(TestExisting.java:60)

[ERROR] test_null(com.jsoniter.TestArray)  Time elapsed: 0.074 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@71bb8b34 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new double[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
double a1 = (double)iter.readDouble();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new double[]{ a1 };
}
double a2 = (double)iter.readDouble();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new double[]{ a1, a2 };
}
double a3 = (double)iter.readDouble();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new double[]{ a1, a2, a3 };
}
double a4 = (double) (double)iter.readDouble();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new double[]{ a1, a2, a3, a4 };
}
double a5 = (double) (double)iter.readDouble();
double[] arr = new double[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
double[] newArr = new double[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (double)iter.readDouble();
}
double[] result = new double[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_null(TestArray.java:170)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestArray.test_null(TestArray.java:170)

[ERROR] test_five_elements(com.jsoniter.TestArray)  Time elapsed: 0.007 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@197ce367 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.int_array: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_five_elements(TestArray.java:154)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.int_array: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_five_elements(TestArray.java:154)

[INFO] Running com.jsoniter.output.TestObject
[ERROR] test_four_elements(com.jsoniter.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@383cdd4d with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.int_array: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_four_elements(TestArray.java:126)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.int_array: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_four_elements(TestArray.java:126)

[ERROR] test_array_lazy_any_to_string(com.jsoniter.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.ArrayList with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.ArrayList: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.TestArray.test_array_lazy_any_to_string(TestArray.java:200)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.ArrayList: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_array_lazy_any_to_string(TestArray.java:200)

[ERROR] Tests run: 20, Failures: 0, Errors: 18, Skipped: 0, Time elapsed: 0.705 s <<< FAILURE! - in com.jsoniter.output.TestObject
[ERROR] test_one_element(com.jsoniter.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@65036e8d with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.int_array: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_one_element(TestArray.java:42)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.int_array: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_one_element(TestArray.java:42)

[ERROR] test_array_field_is_null(com.jsoniter.output.TestObject)  Time elapsed: 0.014 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { return; }
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.write(',');
e = arr[i++];
stream.writeVal((int)e);
}
}

	at com.jsoniter.output.TestObject.test_array_field_is_null(TestObject.java:114)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_array_field_is_null(TestObject.java:114)

[ERROR] test_omit_selft_defined(com.jsoniter.output.TestObject)  Time elapsed: 0.15 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject18 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject18 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
boolean notFirst = false;
if (!(true == obj.b)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'b', (byte)'\"', (byte)':');
stream.writeVal((boolean)obj.b);
}
if (!(true == obj.B.booleanValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'B', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Boolean)obj.B);
}
if (!(1 == obj.i)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'i', (byte)'\"', (byte)':');
stream.writeVal((int)obj.i);
}
if (!(1 == obj.I.intValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'I', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Integer)obj.I);
}
if (!(1 == obj.bt)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"bt\":", 5);
stream.writeVal((byte)obj.bt);
}
if (!(1 == obj.BT.byteValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"BT\":", 5);
stream.writeVal((java.lang.Byte)obj.BT);
}
if (!(1 == obj.s)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'s', (byte)'\"', (byte)':');
stream.writeVal((short)obj.s);
}
if (!(1 == obj.S.shortValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'S', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Short)obj.S);
}
if (!(1L == obj.l)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'l', (byte)'\"', (byte)':');
stream.writeVal((long)obj.l);
}
if (!(1L == obj.L.longValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'L', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Long)obj.L);
}
if (!(1F == obj.f)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'f', (byte)'\"', (byte)':');
stream.writeVal((float)obj.f);
}
if (!(1F == obj.F.floatValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'F', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Float)obj.F);
}
if (!(1D == obj.d)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'d', (byte)'\"', (byte)':');
stream.writeVal((double)obj.d);
}
if (!(1D == obj.D.doubleValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'D', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Double)obj.D);
}
if (!('a' == obj.c)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'c', (byte)'\"', (byte)':');
stream.writeVal((char)obj.c);
}
if (!('a' == obj.C.charValue())) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'C', (byte)'\"', (byte)':');
stream.writeVal((java.lang.Character)obj.C);
}
}

	at com.jsoniter.output.TestObject.test_omit_selft_defined(TestObject.java:410)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_omit_selft_defined(TestObject.java:410)

[ERROR] test_boolean_array(com.jsoniter.TestArray)  Time elapsed: 0.124 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@48ccbb32 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new boolean[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
boolean a1 = (boolean)iter.readBoolean();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new boolean[]{ a1 };
}
boolean a2 = (boolean)iter.readBoolean();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new boolean[]{ a1, a2 };
}
boolean a3 = (boolean)iter.readBoolean();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new boolean[]{ a1, a2, a3 };
}
boolean a4 = (boolean) (boolean)iter.readBoolean();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new boolean[]{ a1, a2, a3, a4 };
}
boolean a5 = (boolean) (boolean)iter.readBoolean();
boolean[] arr = new boolean[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
boolean[] newArr = new boolean[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (boolean)iter.readBoolean();
}
boolean[] result = new boolean[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_boolean_array(TestArray.java:175)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestArray.test_boolean_array(TestArray.java:175)

[ERROR] test_not_omit_null(com.jsoniter.output.TestObject)  Time elapsed: 0.006 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject10 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject10 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field1);
}
}

	at com.jsoniter.output.TestObject.test_not_omit_null(TestObject.java:216)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_not_omit_null(TestObject.java:216)

[ERROR] test_three_elements(com.jsoniter.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@36551e97 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.int_array: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_three_elements(TestArray.java:100)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.int_array: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_three_elements(TestArray.java:100)

[ERROR] test_enum(com.jsoniter.output.TestObject)  Time elapsed: 0.007 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$MyEnum with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
stream.writeRaw(obj.toString());
}

	at com.jsoniter.output.TestObject.test_enum(TestObject.java:88)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_enum(TestObject.java:88)

[ERROR] test_two_elements(com.jsoniter.TestArray)  Time elapsed: 0 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@685d7ba5 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.int_array: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_two_elements(TestArray.java:74)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.int_array: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_two_elements(TestArray.java:74)

[ERROR] test_empty_object(com.jsoniter.output.TestObject)  Time elapsed: 0.029 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject3 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject3 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
}

	at com.jsoniter.output.TestObject.test_empty_object(TestObject.java:61)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_empty_object(TestObject.java:61)

[ERROR] test_empty_array(com.jsoniter.TestArray)  Time elapsed: 0 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@16d41725 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.int_array: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_empty_array(TestArray.java:25)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.int_array: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_empty_array(TestArray.java:25)

[ERROR] test_omit_default(com.jsoniter.output.TestObject)  Time elapsed: 0.018 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject17 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject17 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
boolean notFirst = false;
if (!(false == obj.b)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'b', (byte)'\"', (byte)':');
stream.writeVal((boolean)obj.b);
}
if (!(0 == obj.i)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'i', (byte)'\"', (byte)':');
stream.writeVal((int)obj.i);
}
if (!(0 == obj.bt)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"bt\":", 5);
stream.writeVal((byte)obj.bt);
}
if (!(0 == obj.s)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'s', (byte)'\"', (byte)':');
stream.writeVal((short)obj.s);
}
if (!(0 == obj.l)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'l', (byte)'\"', (byte)':');
stream.writeVal((long)obj.l);
}
if (!(0 == obj.f)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'f', (byte)'\"', (byte)':');
stream.writeVal((float)obj.f);
}
if (!(0 == obj.d)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'d', (byte)'\"', (byte)':');
stream.writeVal((double)obj.d);
}
if (!(0 == obj.e)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.write((byte)'\"', (byte)'e', (byte)'\"', (byte)':');
stream.writeVal((char)obj.e);
}
}

	at com.jsoniter.output.TestObject.test_omit_default(TestObject.java:363)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_omit_default(TestObject.java:363)

[INFO] Running com.jsoniter.TestCustomizeType
[ERROR] test_missing_notFirst(com.jsoniter.output.TestObject)  Time elapsed: 0.006 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject16 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject16 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
stream.writeObjectStart();
stream.writeIndention();
stream.writeObjectField("i");
if (obj.i == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Integer)obj.i);
}
stream.writeObjectEnd();
}

	at com.jsoniter.output.TestObject.test_missing_notFirst(TestObject.java:340)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_missing_notFirst(TestObject.java:340)

[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.16 s <<< FAILURE! - in com.jsoniter.TestCustomizeType
[ERROR] test_name_conflict(com.jsoniter.output.TestObject)  Time elapsed: 0.014 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject12 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject12 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
stream.writeVal((int)obj.getField1());
}

	at com.jsoniter.output.TestObject.test_name_conflict(TestObject.java:252)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_name_conflict(TestObject.java:252)

[ERROR] test_indention(com.jsoniter.output.TestObject)  Time elapsed: 0.017 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject14 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject14 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
stream.writeObjectStart();
boolean notFirst = false;
if (!(null == obj.field1)) {
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("field1");
stream.writeVal((java.lang.String)obj.field1);
}
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("field2");
stream.writeVal((java.lang.String)obj.field2);
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("field3");
if (obj.field3 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field3);
}
if (notFirst) { stream.writeObjectEnd(); } else { stream.write('}'); }
}

	at com.jsoniter.output.TestObject.test_indention(TestObject.java:290)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_indention(TestObject.java:290)

[ERROR] test_not_nullable(com.jsoniter.output.TestObject)  Time elapsed: 0.266 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [Ljava.lang.String; with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.lang.String[] arr = (java.lang.String[])obj;
if (arr.length == 0) { return; }
int i = 0;
java.lang.String e = arr[i++];
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)e);
}
while (i < arr.length) {
stream.write(',');
e = arr[i++];
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)e);
}
}
}

	at com.jsoniter.output.TestObject.test_not_nullable(TestObject.java:147)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_not_nullable(TestObject.java:147)

[ERROR] test_array_field_is_null_via_getter(com.jsoniter.output.TestObject)  Time elapsed: 0.003 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.int_array: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { return; }
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.write(',');
e = arr[i++];
stream.writeVal((int)e);
}
}

	at com.jsoniter.output.TestObject.test_array_field_is_null_via_getter(TestObject.java:130)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.int_array: frozen class (cannot edit)
	at com.jsoniter.output.TestObject.test_array_field_is_null_via_getter(TestObject.java:130)

[ERROR] test_omit_null(com.jsoniter.output.TestObject)  Time elapsed: 0.017 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject11 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject11 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
boolean notFirst = false;
if (!(null == obj.field1)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"field1\":", 9);
stream.writeVal((java.lang.String)obj.field1);
}
if (!(null == obj.field2)) {
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"field2\":", 9);
stream.writeVal((java.lang.String)obj.field2);
}
if (notFirst) { stream.write(','); } else { notFirst = true; }
stream.writeRaw("\"field3\":", 9);
stream.writeVal((java.lang.Integer)obj.field3);
}

	at com.jsoniter.output.TestObject.test_omit_null(TestObject.java:229)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_omit_null(TestObject.java:229)

[ERROR] test_customize_through_extension(com.jsoniter.TestCustomizeType)  Time elapsed: 0.147 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@2478b629 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestCustomizeType.FieldWithMyDate2 obj = (existingObj == null ? new com.jsoniter.TestCustomizeType.FieldWithMyDate2() : (com.jsoniter.TestCustomizeType.FieldWithMyDate2)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 5: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
com.jsoniter.CodegenAccess.setExistingObject(iter, obj.field);obj.field= (com.jsoniter.TestCustomizeType.MyDate2)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestCustomizeType_MyDate2", iter);
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 5: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
com.jsoniter.CodegenAccess.setExistingObject(iter, obj.field);obj.field= (com.jsoniter.TestCustomizeType.MyDate2)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestCustomizeType_MyDate2", iter);
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestCustomizeType.test_customize_through_extension(TestCustomizeType.java:45)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestCustomizeType.test_customize_through_extension(TestCustomizeType.java:45)

[ERROR] test_null_field(com.jsoniter.output.TestObject)  Time elapsed: 0.006 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject4 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject4 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field1);
}
}

	at com.jsoniter.output.TestObject.test_null_field(TestObject.java:72)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_null_field(TestObject.java:72)

[ERROR] test_customize_impl(com.jsoniter.TestCustomizeType)  Time elapsed: 0.013 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@570a62a5 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestCustomizeType.MyObject obj = (existingObj == null ? new com.jsoniter.TestCustomizeType.MyObject() : (com.jsoniter.TestCustomizeType.MyObject)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (long)iter.readLong();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (long)iter.readLong();
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestCustomizeType.test_customize_impl(TestCustomizeType.java:60)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestCustomizeType.test_customize_impl(TestCustomizeType.java:60)

[ERROR] test_array_field(com.jsoniter.output.TestObject)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.int_array: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { return; }
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.write(',');
e = arr[i++];
stream.writeVal((int)e);
}
}

	at com.jsoniter.output.TestObject.test_array_field(TestObject.java:107)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.int_array: frozen class (cannot edit)
	at com.jsoniter.output.TestObject.test_array_field(TestObject.java:107)

[INFO] Running com.jsoniter.TestAnnotationJsonWrapper
[ERROR] test_transient_field_getter(com.jsoniter.output.TestObject)  Time elapsed: 0.054 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject19 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject19 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
}

	at com.jsoniter.output.TestObject.test_transient_field_getter(TestObject.java:422)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_transient_field_getter(TestObject.java:422)

[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.236 s <<< FAILURE! - in com.jsoniter.TestAnnotationJsonWrapper
[ERROR] test_indention_with_empty_object(com.jsoniter.output.TestObject)  Time elapsed: 0.06 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject15 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject15 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
stream.writeObjectStart();
boolean notFirst = false;
if (!(null == obj.i1)) {
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("i1");
stream.writeVal((java.lang.Integer)obj.i1);
}
if (!(null == obj.i2)) {
if (notFirst) { stream.writeMore(); } else { stream.writeIndention(); notFirst = true; }
stream.writeObjectField("i2");
stream.writeVal((java.lang.Integer)obj.i2);
}
if (notFirst) { stream.writeObjectEnd(); } else { stream.write('}'); }
}

	at com.jsoniter.output.TestObject.test_indention_with_empty_object(TestObject.java:325)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_indention_with_empty_object(TestObject.java:325)

[ERROR] test_key_value(com.jsoniter.TestAnnotationJsonWrapper)  Time elapsed: 0.042 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@26c8b296 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonWrapper.TestObject2 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonWrapper.TestObject2() : (com.jsoniter.TestAnnotationJsonWrapper.TestObject2)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
java.util.Map extra = null;
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
if (extra == null) { extra = new java.util.HashMap(); }
extra.put(field.toString(), iter.readAny());
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
if (extra == null) { extra = new java.util.HashMap(); }
extra.put(field.toString(), iter.readAny());
}
java.util.Iterator extraIter = extra.entrySet().iterator();
while(extraIter.hasNext()) {
java.util.Map.Entry entry = (java.util.Map.Entry)extraIter.next();
String key = entry.getKey().toString();
com.jsoniter.any.Any value = (com.jsoniter.any.Any)entry.getValue();
obj.setProperties(key, value.object());
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonWrapper.test_key_value(TestAnnotationJsonWrapper.java:49)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonWrapper.test_key_value(TestAnnotationJsonWrapper.java:49)

[ERROR] test_collection_value_not_nullable(com.jsoniter.output.TestObject)  Time elapsed: 0.013 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [Ljava.lang.String; with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.lang.String[] arr = (java.lang.String[])obj;
if (arr.length == 0) { return; }
int i = 0;
java.lang.String e = arr[i++];
com.jsoniter.output.CodegenAccess.writeStringWithoutQuote((java.lang.String)e, stream);
while (i < arr.length) {
stream.write((byte)'\"');
stream.write(',');
e = arr[i++];
stream.write((byte)'\"');
com.jsoniter.output.CodegenAccess.writeStringWithoutQuote((java.lang.String)e, stream);
}
}

	at com.jsoniter.output.TestObject.test_collection_value_not_nullable(TestObject.java:169)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_collection_value_not_nullable(TestObject.java:169)

[ERROR] test_binding(com.jsoniter.TestAnnotationJsonWrapper)  Time elapsed: 0.026 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@756b2d90 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonWrapper.TestObject1 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonWrapper.TestObject1() : (com.jsoniter.TestAnnotationJsonWrapper.TestObject1)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
int _field1_ = 0;
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
_field1_ = (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
_field1_ = (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
obj.initialize(_field1_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonWrapper.test_binding(TestAnnotationJsonWrapper.java:31)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonWrapper.test_binding(TestAnnotationJsonWrapper.java:31)

[ERROR] test_field(com.jsoniter.output.TestObject)  Time elapsed: 0.019 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestObject$TestObject1 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestObject.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field1);
}
}

	at com.jsoniter.output.TestObject.test_field(TestObject.java:36)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestObject.test_field(TestObject.java:36)

[ERROR] test_issue_104(com.jsoniter.TestAnnotationJsonWrapper)  Time elapsed: 0.168 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@5b1e88f with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonWrapper.AAA obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonWrapper.AAA() : (com.jsoniter.TestAnnotationJsonWrapper.AAA)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
java.lang.String _parts_ = null;
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 5: 
if (
field.at(0)==112 && 
field.at(1)==97 && 
field.at(2)==114 && 
field.at(3)==116 && 
field.at(4)==115
) {
_parts_ = (java.lang.String)iter.readString();
continue;
}
break;
case 6: 
if (
field.at(0)==110 && 
field.at(1)==97 && 
field.at(2)==109 && 
field.at(3)==101 && 
field.at(4)==95 && 
field.at(5)==49
) {
obj.name= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 5: 
if (
field.at(0)==112 && 
field.at(1)==97 && 
field.at(2)==114 && 
field.at(3)==116 && 
field.at(4)==115
) {
_parts_ = (java.lang.String)iter.readString();
continue;
}
break;
case 6: 
if (
field.at(0)==110 && 
field.at(1)==97 && 
field.at(2)==109 && 
field.at(3)==101 && 
field.at(4)==95 && 
field.at(5)==49
) {
obj.name= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
obj.foreignFromJson(_parts_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonWrapper.test_issue_104(TestAnnotationJsonWrapper.java:75)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonWrapper.test_issue_104(TestAnnotationJsonWrapper.java:75)

[INFO] Running com.jsoniter.TestGenerics
[INFO] Running com.jsoniter.any.TestList
[ERROR] Tests run: 16, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 11.654 s <<< FAILURE! - in com.jsoniter.any.TestList
[ERROR] test_to_string(com.jsoniter.any.TestList)  Time elapsed: 0.009 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.AbstractList with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.Arrays_ArrayList: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.any.TestList.test_to_string(TestList.java:52)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.Arrays_ArrayList: frozen class (cannot edit)
	at com.jsoniter.any.TestList.test_to_string(TestList.java:52)

[ERROR] test_to_string(com.jsoniter.any.TestList)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.AbstractList with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.Arrays_ArrayList: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372034806973682.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.any.TestList.test_to_string(TestList.java:52)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.java.util.Arrays_ArrayList: frozen class (cannot edit)
	at com.jsoniter.any.TestList.test_to_string(TestList.java:52)

[INFO] Running com.jsoniter.TestDemo
[ERROR] Tests run: 22, Failures: 0, Errors: 20, Skipped: 0, Time elapsed: 0.53 s <<< FAILURE! - in com.jsoniter.TestGenerics
[ERROR] test_string_list(com.jsoniter.TestGenerics)  Time elapsed: 0.046 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7eaa2bc6 with [class java.lang.String], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_string_list(TestGenerics.java:26)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_string_list(TestGenerics.java:26)

[ERROR] test_linked_list(com.jsoniter.TestGenerics)  Time elapsed: 0.019 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@4d81e83a with [class java.lang.String], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
java.util.LinkedList col = (java.util.LinkedList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_linked_list(TestGenerics.java:33)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_linked_list(TestGenerics.java:33)

3
[ERROR] test_int_list(com.jsoniter.TestGenerics)  Time elapsed: 0.162 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7cf8f45a with [class java.lang.Integer], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestGenerics.test_int_list(TestGenerics.java:19)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_int_list(TestGenerics.java:19)

6[ERROR] test_issue_103(com.jsoniter.TestGenerics)  Time elapsed: 0.06 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@49754e74 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestGenerics.User() : (com.jsoniter.TestGenerics.User)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestGenerics.User() : (com.jsoniter.TestGenerics.User)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
java.lang.String _name_ = null;
int _age_ = 0;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case -1925595674: 
_name_ = (java.lang.String)iter.readString();
continue;
case 742476188: 
_age_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestGenerics.User obj = (existingObj == null ? new com.jsoniter.TestGenerics.User() : (com.jsoniter.TestGenerics.User)existingObj);
obj.name = _name_;
obj.age = _age_;
return obj;
}
	at com.jsoniter.TestGenerics.test_issue_103(TestGenerics.java:130)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_issue_103(TestGenerics.java:130)


[ERROR] test_list_of_list(com.jsoniter.TestGenerics)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@1b46392c with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestGenerics.test_list_of_list(TestGenerics.java:61)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_list_of_list(TestGenerics.java:61)

[ERROR] Tests run: 11, Failures: 0, Errors: 7, Skipped: 0, Time elapsed: 1.137 s <<< FAILURE! - in com.jsoniter.TestDemo
[ERROR] test_utf8(com.jsoniter.TestDemo)  Time elapsed: 0.09 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@87f501f with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestDemo.TestObject obj = (existingObj == null ? new com.jsoniter.TestDemo.TestObject() : (com.jsoniter.TestDemo.TestObject)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 4: 
if (
field.at(0)==98 && 
field.at(1)==111 && 
field.at(2)==100 && 
field.at(3)==121
) {
obj.body= (java.lang.String)iter.readString();
continue;
}
break;
case 12: 
if (
field.at(0)==99 && 
field.at(1)==111 && 
field.at(2)==109 && 
field.at(3)==109 && 
field.at(4)==101 && 
field.at(5)==110 && 
field.at(6)==116 && 
field.at(7)==67 && 
field.at(8)==111 && 
field.at(9)==117 && 
field.at(10)==110 && 
field.at(11)==116
) {
obj.commentCount= (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 4: 
if (
field.at(0)==98 && 
field.at(1)==111 && 
field.at(2)==100 && 
field.at(3)==121
) {
obj.body= (java.lang.String)iter.readString();
continue;
}
break;
case 12: 
if (
field.at(0)==99 && 
field.at(1)==111 && 
field.at(2)==109 && 
field.at(3)==109 && 
field.at(4)==101 && 
field.at(5)==110 && 
field.at(6)==116 && 
field.at(7)==67 && 
field.at(8)==111 && 
field.at(9)==117 && 
field.at(10)==110 && 
field.at(11)==116
) {
obj.commentCount= (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestDemo.test_utf8(TestDemo.java:165)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_utf8(TestDemo.java:165)

[ERROR] test_abc(com.jsoniter.TestDemo)  Time elapsed: 0.043 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@67c6f4d8 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestDemo.ABC obj = (existingObj == null ? new com.jsoniter.TestDemo.ABC() : (com.jsoniter.TestDemo.ABC)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 1: 
if (
field.at(0)==97
) {
obj.a= (com.jsoniter.any.Any)iter.readAny();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 1: 
if (
field.at(0)==97
) {
obj.a= (com.jsoniter.any.Any)iter.readAny();
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestDemo.test_abc(TestDemo.java:46)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_abc(TestDemo.java:46)

[ERROR] test_bind_api(com.jsoniter.TestDemo)  Time elapsed: 0.091 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@1e56bc9b with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestDemo.test_bind_api(TestDemo.java:22)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_bind_api(TestDemo.java:22)

[ERROR] test_generics(com.jsoniter.TestDemo)  Time elapsed: 0.21 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@25a5c8e with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestDemo.Feed obj = (existingObj == null ? new com.jsoniter.TestDemo.Feed() : (com.jsoniter.TestDemo.Feed)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 2: 
if (
field.at(0)==105 && 
field.at(1)==100
) {
obj.id= (java.lang.String)iter.readString();
continue;
}
break;
case 4: 
if (
field.at(0)==110 && 
field.at(1)==97 && 
field.at(2)==109 && 
field.at(3)==101
) {
obj.name= (java.lang.String)iter.readString();
continue;
}
break;
case 5: 
if (
field.at(0)==111 && 
field.at(1)==119 && 
field.at(2)==110 && 
field.at(3)==101 && 
field.at(4)==114
) {
obj.owner= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 2: 
if (
field.at(0)==105 && 
field.at(1)==100
) {
obj.id= (java.lang.String)iter.readString();
continue;
}
break;
case 4: 
if (
field.at(0)==110 && 
field.at(1)==97 && 
field.at(2)==109 && 
field.at(3)==101
) {
obj.name= (java.lang.String)iter.readString();
continue;
}
break;
case 5: 
if (
field.at(0)==111 && 
field.at(1)==119 && 
field.at(2)==110 && 
field.at(3)==101 && 
field.at(4)==114
) {
obj.owner= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestDemo.test_generics(TestDemo.java:185)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_generics(TestDemo.java:185)

[ERROR] test_iterator_api_and_bind(com.jsoniter.TestDemo)  Time elapsed: 0.037 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@51f68849 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new java.lang.String[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
java.lang.String a1 = (java.lang.String)iter.readString();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new java.lang.String[]{ a1 };
}
java.lang.String a2 = (java.lang.String)iter.readString();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new java.lang.String[]{ a1, a2 };
}
java.lang.String a3 = (java.lang.String)iter.readString();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new java.lang.String[]{ a1, a2, a3 };
}
java.lang.String a4 = (java.lang.String) (java.lang.String)iter.readString();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new java.lang.String[]{ a1, a2, a3, a4 };
}
java.lang.String a5 = (java.lang.String) (java.lang.String)iter.readString();
java.lang.String[] arr = new java.lang.String[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
java.lang.String[] newArr = new java.lang.String[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (java.lang.String)iter.readString();
}
java.lang.String[] result = new java.lang.String[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestDemo.test_iterator_api_and_bind(TestDemo.java:55)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_iterator_api_and_bind(TestDemo.java:55)

[ERROR] test_integer_map(com.jsoniter.TestGenerics)  Time elapsed: 0.035 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@6f15f52a with [class java.lang.String, class java.lang.Integer], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestGenerics.test_integer_map(TestGenerics.java:54)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_integer_map(TestGenerics.java:54)

[ERROR] test_string_map(com.jsoniter.TestGenerics)  Time elapsed: 0.004 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@341c6ac2 with [class java.lang.String, class java.lang.String], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.String)iter.readString());
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestGenerics.test_string_map(TestGenerics.java:47)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_string_map(TestGenerics.java:47)

[ERROR] test_string_set(com.jsoniter.TestGenerics)  Time elapsed: 0.128 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@787d1f9c with [class java.lang.String], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashSet col = (java.util.HashSet)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.HashSet(0): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.HashSet obj = col == null ? new java.util.HashSet(1): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.HashSet obj = col == null ? new java.util.HashSet(2): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.HashSet obj = col == null ? new java.util.HashSet(3): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.HashSet obj = col == null ? new java.util.HashSet(8): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_string_set(TestGenerics.java:40)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_string_set(TestGenerics.java:40)

[ERROR] test_any_is_fun(com.jsoniter.TestDemo)  Time elapsed: 0.114 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: java.util.Map<java.lang.String, com.jsoniter.any.Any> with [class java.lang.String, class com.jsoniter.any.Any], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeVal((java.lang.String)entry.getKey());
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
stream.writeVal((com.jsoniter.any.Any)entry.getValue());
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.writeVal((java.lang.String)entry.getKey());
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
stream.writeVal((com.jsoniter.any.Any)entry.getValue());
}
}
}

	at com.jsoniter.TestDemo.test_any_is_fun(TestDemo.java:133)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_any_is_fun(TestDemo.java:133)

[ERROR] test_complex_object(com.jsoniter.TestGenerics)  Time elapsed: 0.004 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7c71c889 with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestGenerics.test_complex_object(TestGenerics.java:68)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_complex_object(TestGenerics.java:68)

[ERROR] test_deserialize(com.jsoniter.TestDemo)  Time elapsed: 0.01 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@798cf6d2 with [class java.lang.String, class java.lang.Object], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.Object)iter.read());
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestDemo.test_deserialize(TestDemo.java:171)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_deserialize(TestDemo.java:171)

[ERROR] test_wildcard(com.jsoniter.TestGenerics)  Time elapsed: 0.042 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@5c59a0f7 with [?], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Object)iter.read();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Object)iter.read();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Object)iter.read();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Object)iter.read();
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Object)iter.read());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_wildcard(TestGenerics.java:140)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestGenerics.test_wildcard(TestGenerics.java:140)

[INFO] Running com.jsoniter.TestAnnotationJsonProperty
[ERROR] test_string_list(com.jsoniter.TestGenerics)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@101330ad with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.String: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_string_list(TestGenerics.java:26)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_string_list(TestGenerics.java:26)

[ERROR] Tests run: 11, Failures: 0, Errors: 11, Skipped: 0, Time elapsed: 0.989 s <<< FAILURE! - in com.jsoniter.TestAnnotationJsonProperty
[ERROR] test_required(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.216 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@2d313c8c with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
long tracker = 0;
com.jsoniter.TestAnnotationJsonProperty.TestObject8 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject8() : (com.jsoniter.TestAnnotationJsonProperty.TestObject8)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
java.util.List missingFields = new java.util.ArrayList();
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 1L, "result");
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 2L, "code2");
throw new com.jsoniter.spi.JsonException("missing required properties: " + missingFields);
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 2: 
if (
field.at(0)==114 && 
field.at(1)==115
) {
obj.result= (boolean)iter.readBoolean();
tracker = tracker | 1L;
continue;
}
break;
case 4: 
if (
field.at(0)==99 && 
field.at(1)==111 && 
field.at(2)==100 && 
field.at(3)==101
) {
obj.code2= (int)iter.readInt();
tracker = tracker | 2L;
continue;
}
break;
case 5: 
if (
field.at(0)==101 && 
field.at(1)==114 && 
field.at(2)==114 && 
field.at(3)==111 && 
field.at(4)==114
) {
obj.error= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 2: 
if (
field.at(0)==114 && 
field.at(1)==115
) {
obj.result= (boolean)iter.readBoolean();
tracker = tracker | 1L;
continue;
}
break;
case 4: 
if (
field.at(0)==99 && 
field.at(1)==111 && 
field.at(2)==100 && 
field.at(3)==101
) {
obj.code2= (int)iter.readInt();
tracker = tracker | 2L;
continue;
}
break;
case 5: 
if (
field.at(0)==101 && 
field.at(1)==114 && 
field.at(2)==114 && 
field.at(3)==111 && 
field.at(4)==114
) {
obj.error= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
if (tracker != 3L) {
java.util.List missingFields = new java.util.ArrayList();
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 1L, "result");
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 2L, "code2");
throw new com.jsoniter.spi.JsonException("missing required properties: " + missingFields);
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_required(TestAnnotationJsonProperty.java:125)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_required(TestAnnotationJsonProperty.java:125)

[ERROR] test_linked_list(com.jsoniter.TestGenerics)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@625487a6 with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.LinkedList_java.lang.String: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
java.util.LinkedList col = (java.util.LinkedList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_linked_list(TestGenerics.java:33)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.LinkedList_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_linked_list(TestGenerics.java:33)

[ERROR] test_getter_and_setter(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.059 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7c1503a3 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonProperty.TestObject9 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject9() : (com.jsoniter.TestAnnotationJsonProperty.TestObject9)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 7: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==45 && 
field.at(6)==49
) {
obj.setField1( (java.lang.String)iter.readString());
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 7: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==45 && 
field.at(6)==49
) {
obj.setField1( (java.lang.String)iter.readString());
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter(TestAnnotationJsonProperty.java:144)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter(TestAnnotationJsonProperty.java:144)

[ERROR] test_rename(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.025 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@47df5041 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonProperty.TestObject1 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject1() : (com.jsoniter.TestAnnotationJsonProperty.TestObject1)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 7: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==45 && 
field.at(6)==49
) {
obj.field1= (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 7: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==45 && 
field.at(6)==49
) {
obj.field1= (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_rename(TestAnnotationJsonProperty.java:26)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_rename(TestAnnotationJsonProperty.java:26)

[ERROR] test_required_properties(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.17 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@517704 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
long tracker = 0;
com.jsoniter.TestAnnotationJsonProperty.TestObject2 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject2() : (com.jsoniter.TestAnnotationJsonProperty.TestObject2)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
java.util.List missingFields = new java.util.ArrayList();
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 1L, "field1");
obj.missingProperties = missingFields;
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (int)iter.readInt();
tracker = tracker | 1L;
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (int)iter.readInt();
tracker = tracker | 1L;
continue;
}
break;

}
iter.skip();
}
if (tracker != 1L) {
java.util.List missingFields = new java.util.ArrayList();
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 1L, "field1");
obj.missingProperties = missingFields;
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_required_properties(TestAnnotationJsonProperty.java:40)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_required_properties(TestAnnotationJsonProperty.java:40)

[ERROR] test_int_list(com.jsoniter.TestGenerics)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@682e445e with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.ArrayList_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestGenerics.test_int_list(TestGenerics.java:19)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.ArrayList_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_int_list(TestGenerics.java:19)

[ERROR] test_issue_103(com.jsoniter.TestGenerics)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@79e10fb4 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestGenerics_User: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestGenerics.User() : (com.jsoniter.TestGenerics.User)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestGenerics.User() : (com.jsoniter.TestGenerics.User)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
java.lang.String _name_ = null;
int _age_ = 0;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case -1925595674: 
_name_ = (java.lang.String)iter.readString();
continue;
case 742476188: 
_age_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestGenerics.User obj = (existingObj == null ? new com.jsoniter.TestGenerics.User() : (com.jsoniter.TestGenerics.User)existingObj);
obj.name = _name_;
obj.age = _age_;
return obj;
}
	at com.jsoniter.TestGenerics.test_issue_103(TestGenerics.java:130)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestGenerics_User: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_issue_103(TestGenerics.java:130)

[ERROR] test_required_properties_not_missing(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.067 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@4b195203 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
long tracker = 0;
com.jsoniter.TestAnnotationJsonProperty.TestObject6 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject6() : (com.jsoniter.TestAnnotationJsonProperty.TestObject6)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
java.util.List missingFields = new java.util.ArrayList();
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 1L, "field1");
obj.missingProperties = missingFields;
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (int)iter.readInt();
tracker = tracker | 1L;
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (int)iter.readInt();
tracker = tracker | 1L;
continue;
}
break;

}
iter.skip();
}
if (tracker != 1L) {
java.util.List missingFields = new java.util.ArrayList();
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 1L, "field1");
obj.missingProperties = missingFields;
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing(TestAnnotationJsonProperty.java:87)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing(TestAnnotationJsonProperty.java:87)

[ERROR] test_list_of_list(com.jsoniter.TestGenerics)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@70fede7d with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestGenerics.test_list_of_list(TestGenerics.java:61)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_list_of_list(TestGenerics.java:61)

[ERROR] test_bind_from_multiple_names(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.149 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@23444a36 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonProperty.TestObject5 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject5() : (com.jsoniter.TestAnnotationJsonProperty.TestObject5)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 7: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==45 && 
field.at(6)==49
) {
obj.field1= (int)iter.readInt();
continue;
}
if (
field.at(5)==95 && 
field.at(6)==49
) {
obj.field1= (int)iter.readInt();
continue;
}
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 7: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==45 && 
field.at(6)==49
) {
obj.field1= (int)iter.readInt();
continue;
}
if (
field.at(5)==95 && 
field.at(6)==49
) {
obj.field1= (int)iter.readInt();
continue;
}
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names(TestAnnotationJsonProperty.java:73)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names(TestAnnotationJsonProperty.java:73)

[ERROR] test_integer_map(com.jsoniter.TestGenerics)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@36510e73 with [class java.lang.String, class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.Map_java.lang.String_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestGenerics.test_integer_map(TestGenerics.java:54)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.Map_java.lang.String_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_integer_map(TestGenerics.java:54)

[ERROR] test_specify_property(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.155 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@4a50c746 with [class java.lang.Integer], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
java.util.LinkedList col = (java.util.LinkedList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_specify_property(TestAnnotationJsonProperty.java:99)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_specify_property(TestAnnotationJsonProperty.java:99)

[ERROR] test_string_map(com.jsoniter.TestGenerics)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@2c47a053 with [class java.lang.String, class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.Map_java.lang.String_java.lang.String: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.String)iter.readString());
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestGenerics.test_string_map(TestGenerics.java:47)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.Map_java.lang.String_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_string_map(TestGenerics.java:47)

[ERROR] test_creator_with_json_property(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.02 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@79ecc507 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
int _hello_ = 0;
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return new com.jsoniter.TestAnnotationJsonProperty.TestObject10(_hello_);
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 5: 
if (
field.at(0)==104 && 
field.at(1)==101 && 
field.at(2)==108 && 
field.at(3)==108 && 
field.at(4)==111
) {
_hello_ = (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 5: 
if (
field.at(0)==104 && 
field.at(1)==101 && 
field.at(2)==108 && 
field.at(3)==108 && 
field.at(4)==111
) {
_hello_ = (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
com.jsoniter.TestAnnotationJsonProperty.TestObject10 obj = new com.jsoniter.TestAnnotationJsonProperty.TestObject10(_hello_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property(TestAnnotationJsonProperty.java:163)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property(TestAnnotationJsonProperty.java:163)

[ERROR] test_string_set(com.jsoniter.TestGenerics)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@5d2a86c0 with [class java.lang.String], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.Set_java.lang.String: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashSet col = (java.util.HashSet)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.HashSet(0): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.HashSet obj = col == null ? new java.util.HashSet(1): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.HashSet obj = col == null ? new java.util.HashSet(2): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.String)iter.readString();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.HashSet obj = col == null ? new java.util.HashSet(3): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.String)iter.readString();
java.util.HashSet obj = col == null ? new java.util.HashSet(8): (java.util.HashSet)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.String)iter.readString());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_string_set(TestGenerics.java:40)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.Set_java.lang.String: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_string_set(TestGenerics.java:40)

[ERROR] test_complex_object(com.jsoniter.TestGenerics)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@5ba1b62e with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestGenerics.test_complex_object(TestGenerics.java:68)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_complex_object(TestGenerics.java:68)

[ERROR] test_integer_property_decoder(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.092 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@6df4af5 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonProperty.TestObject4 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject4() : (com.jsoniter.TestAnnotationJsonProperty.TestObject4)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (java.lang.Integer)com.jsoniter.CodegenAccess.read("field1@jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestAnnotationJsonProperty_TestObject4", iter);
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (java.lang.Integer)com.jsoniter.CodegenAccess.read("field1@jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestAnnotationJsonProperty_TestObject4", iter);
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder(TestAnnotationJsonProperty.java:62)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder(TestAnnotationJsonProperty.java:62)

[ERROR] test_wildcard(com.jsoniter.TestGenerics)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@65bd19bf with [?], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.Object: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Object)iter.read();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Object)iter.read();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Object)iter.read();
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Object)iter.read();
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Object)iter.read());
}
return obj;
}
	at com.jsoniter.TestGenerics.test_wildcard(TestGenerics.java:140)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.java.util.List_java.lang.Object: frozen class (cannot edit)
	at com.jsoniter.TestGenerics.test_wildcard(TestGenerics.java:140)

[ERROR] test_field_and_getter_setter(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.015 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@590d6c76 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonProperty.TestObject11 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject11() : (com.jsoniter.TestAnnotationJsonProperty.TestObject11)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 5: 
if (
field.at(0)==104 && 
field.at(1)==101 && 
field.at(2)==108 && 
field.at(3)==108 && 
field.at(4)==111
) {
obj.field= (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 5: 
if (
field.at(0)==104 && 
field.at(1)==101 && 
field.at(2)==108 && 
field.at(3)==108 && 
field.at(4)==111
) {
obj.field= (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter(TestAnnotationJsonProperty.java:183)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter(TestAnnotationJsonProperty.java:183)

[INFO] Running com.jsoniter.any.TestArray
[ERROR] test_property_decoder(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.02 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@448c92fc with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonProperty.TestObject3 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject3() : (com.jsoniter.TestAnnotationJsonProperty.TestObject3)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (int)com.jsoniter.CodegenAccess.readInt("field1@jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestAnnotationJsonProperty_TestObject3", iter);
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (int)com.jsoniter.CodegenAccess.readInt("field1@jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestAnnotationJsonProperty_TestObject3", iter);
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_property_decoder(TestAnnotationJsonProperty.java:51)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_property_decoder(TestAnnotationJsonProperty.java:51)

[ERROR] Tests run: 10, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.086 s <<< FAILURE! - in com.jsoniter.any.TestArray
[ERROR] test_to_string(com.jsoniter.any.TestArray)  Time elapsed: 0.004 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [J with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
long[] arr = (long[])obj;
if (arr.length == 0) { return; }
int i = 0;
long e = arr[i++];
stream.writeVal((long)e);
while (i < arr.length) {
stream.write(',');
e = arr[i++];
stream.writeVal((long)e);
}
}

	at com.jsoniter.any.TestArray.test_to_string(TestArray.java:53)
Caused by: java.lang.NullPointerException
	at com.jsoniter.any.TestArray.test_to_string(TestArray.java:53)

[INFO] Running com.jsoniter.output.TestAnnotationJsonProperty
[INFO] Running com.jsoniter.TestArray
[ERROR] Tests run: 4, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.196 s <<< FAILURE! - in com.jsoniter.output.TestAnnotationJsonProperty
[ERROR] test_getter_and_setter(com.jsoniter.output.TestAnnotationJsonProperty)  Time elapsed: 0.13 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonProperty$TestObject4 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonProperty.TestObject4 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.getField1() == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.getField1());
}
}

	at com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter(TestAnnotationJsonProperty.java:68)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter(TestAnnotationJsonProperty.java:68)

[ERROR] test_getter(com.jsoniter.output.TestAnnotationJsonProperty)  Time elapsed: 0.015 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonProperty$TestObject3 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonProperty.TestObject3 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.getField1() == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.getField1());
}
}

	at com.jsoniter.output.TestAnnotationJsonProperty.test_getter(TestAnnotationJsonProperty.java:50)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonProperty.test_getter(TestAnnotationJsonProperty.java:50)

[ERROR] Tests run: 10, Failures: 0, Errors: 9, Skipped: 0, Time elapsed: 0.097 s <<< FAILURE! - in com.jsoniter.TestArray
[ERROR] test_null(com.jsoniter.TestArray)  Time elapsed: 0.043 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@197ce367 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new double[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
double a1 = (double)iter.readDouble();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new double[]{ a1 };
}
double a2 = (double)iter.readDouble();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new double[]{ a1, a2 };
}
double a3 = (double)iter.readDouble();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new double[]{ a1, a2, a3 };
}
double a4 = (double) (double)iter.readDouble();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new double[]{ a1, a2, a3, a4 };
}
double a5 = (double) (double)iter.readDouble();
double[] arr = new double[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
double[] newArr = new double[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (double)iter.readDouble();
}
double[] result = new double[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_null(TestArray.java:170)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestArray.test_null(TestArray.java:170)

[ERROR] test_encoder(com.jsoniter.output.TestAnnotationJsonProperty)  Time elapsed: 0.04 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonProperty$TestObject2 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonProperty.TestObject2 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
com.jsoniter.output.CodegenAccess.writeVal("field1@jsoniter_codegen.cfg9223372034806973682.encoder.com.jsoniter.output.TestAnnotationJsonProperty_TestObject2", obj.field1, stream);
}

	at com.jsoniter.output.TestAnnotationJsonProperty.test_encoder(TestAnnotationJsonProperty.java:36)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonProperty.test_encoder(TestAnnotationJsonProperty.java:36)

[ERROR] test_property(com.jsoniter.output.TestAnnotationJsonProperty)  Time elapsed: 0.01 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class com.jsoniter.output.TestAnnotationJsonProperty$TestObject1 with [], exception: java.lang.NullPointerException
public static void encode_(com.jsoniter.output.TestAnnotationJsonProperty.TestObject1 obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj.field1 == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.String)obj.field1);
}
}

	at com.jsoniter.output.TestAnnotationJsonProperty.test_property(TestAnnotationJsonProperty.java:23)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAnnotationJsonProperty.test_property(TestAnnotationJsonProperty.java:23)

[ERROR] test_five_elements(com.jsoniter.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@383cdd4d with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.int_array: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_five_elements(TestArray.java:154)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.int_array: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_five_elements(TestArray.java:154)

[INFO] Running com.jsoniter.TestMap
[ERROR] test_four_elements(com.jsoniter.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@65036e8d with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.int_array: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_four_elements(TestArray.java:126)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.int_array: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_four_elements(TestArray.java:126)

[ERROR] Tests run: 5, Failures: 0, Errors: 5, Skipped: 0, Time elapsed: 0.223 s <<< FAILURE! - in com.jsoniter.TestMap
[ERROR] test_object_key(com.jsoniter.TestMap)  Time elapsed: 0.004 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@4df7d9ee with [class java.lang.String, class java.lang.Object], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.Object)iter.read());
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestMap.test_object_key(TestMap.java:21)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestMap.test_object_key(TestMap.java:21)

[ERROR] test_array_lazy_any_to_string(com.jsoniter.TestArray)  Time elapsed: 0.029 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.ArrayList with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.ArrayList: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.TestArray.test_array_lazy_any_to_string(TestArray.java:200)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.ArrayList: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_array_lazy_any_to_string(TestArray.java:200)

[ERROR] test_enum_key(com.jsoniter.TestMap)  Time elapsed: 0.107 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@1cee2e10 with [class com.jsoniter.TestMap$EnumKey, class java.lang.Object], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readMapKey("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestMap_EnumKey", iter);
map.put(mapKey, (java.lang.Object)iter.read());
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestMap.test_enum_key(TestMap.java:49)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestMap.test_enum_key(TestMap.java:49)

[ERROR] test_integer_key(com.jsoniter.TestMap)  Time elapsed: 0.007 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@10131289 with [class java.lang.Integer, class java.lang.Object], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readMapKey("jsoniter_codegen.cfg9223372034806973682.decoder.java.lang.Integer", iter);
map.put(mapKey, (java.lang.Object)iter.read());
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestMap.test_integer_key(TestMap.java:37)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestMap.test_integer_key(TestMap.java:37)

[ERROR] test_one_element(com.jsoniter.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@48ccbb32 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.int_array: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_one_element(TestArray.java:42)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.int_array: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_one_element(TestArray.java:42)

[ERROR] test_string_key(com.jsoniter.TestMap)  Time elapsed: 0.096 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@64a1116a with [class java.lang.String, class java.lang.Object], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.Object)iter.read());
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestMap.test_string_key(TestMap.java:29)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestMap.test_string_key(TestMap.java:29)

[ERROR] test_MapKeyCodec(com.jsoniter.TestMap)  Time elapsed: 0.009 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7cc2c551 with [class com.jsoniter.TestMap$TestObject1, class java.lang.Object], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readMapKey("jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestMap_TestObject1", iter);
map.put(mapKey, (java.lang.Object)iter.read());
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestMap.test_MapKeyCodec(TestMap.java:69)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestMap.test_MapKeyCodec(TestMap.java:69)

[INFO] Running com.jsoniter.output.TestAny
[ERROR] test_boolean_array(com.jsoniter.TestArray)  Time elapsed: 0.019 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@36551e97 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new boolean[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
boolean a1 = (boolean)iter.readBoolean();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new boolean[]{ a1 };
}
boolean a2 = (boolean)iter.readBoolean();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new boolean[]{ a1, a2 };
}
boolean a3 = (boolean)iter.readBoolean();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new boolean[]{ a1, a2, a3 };
}
boolean a4 = (boolean) (boolean)iter.readBoolean();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new boolean[]{ a1, a2, a3, a4 };
}
boolean a5 = (boolean) (boolean)iter.readBoolean();
boolean[] arr = new boolean[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
boolean[] newArr = new boolean[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (boolean)iter.readBoolean();
}
boolean[] result = new boolean[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_boolean_array(TestArray.java:175)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestArray.test_boolean_array(TestArray.java:175)

[ERROR] Tests run: 11, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.111 s <<< FAILURE! - in com.jsoniter.output.TestAny
[ERROR] test_list(com.jsoniter.output.TestAny)  Time elapsed: 0.084 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.AbstractList with [], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
stream.writeVal((java.lang.Object)e);
}
}
}

	at com.jsoniter.output.TestAny.test_list(TestAny.java:114)
Caused by: java.lang.NullPointerException
	at com.jsoniter.output.TestAny.test_list(TestAny.java:114)

[ERROR] test_array(com.jsoniter.output.TestAny)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class [I with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.int_array: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
int[] arr = (int[])obj;
if (arr.length == 0) { return; }
int i = 0;
int e = arr[i++];
stream.writeVal((int)e);
while (i < arr.length) {
stream.write(',');
e = arr[i++];
stream.writeVal((int)e);
}
}

	at com.jsoniter.output.TestAny.test_array(TestAny.java:123)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.encoder.int_array: frozen class (cannot edit)
	at com.jsoniter.output.TestAny.test_array(TestAny.java:123)

[INFO] Running com.jsoniter.TestObject
[ERROR] test_three_elements(com.jsoniter.TestArray)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@685d7ba5 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.int_array: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_three_elements(TestArray.java:100)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.int_array: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_three_elements(TestArray.java:100)

[ERROR] Tests run: 15, Failures: 0, Errors: 13, Skipped: 0, Time elapsed: 0.523 s <<< FAILURE! - in com.jsoniter.TestObject
[ERROR] test_private_ref(com.jsoniter.TestObject)  Time elapsed: 0.008 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@133aacbe with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestObject.TestObject7 obj = (existingObj == null ? new com.jsoniter.TestObject.TestObject7() : (com.jsoniter.TestObject.TestObject7)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
iter.skip();
}
return obj;
}
	at com.jsoniter.TestObject.test_private_ref(TestObject.java:238)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestObject.test_private_ref(TestObject.java:238)

[ERROR] test_inheritance(com.jsoniter.TestObject)  Time elapsed: 0.029 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7cfb8e98 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestObject.InheritedObject obj = (existingObj == null ? new com.jsoniter.TestObject.InheritedObject() : (com.jsoniter.TestObject.InheritedObject)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;
case 14: 
if (
field.at(0)==105 && 
field.at(1)==110 && 
field.at(2)==104 && 
field.at(3)==101 && 
field.at(4)==114 && 
field.at(5)==105 && 
field.at(6)==116 && 
field.at(7)==101 && 
field.at(8)==100 && 
field.at(9)==70 && 
field.at(10)==105 && 
field.at(11)==101 && 
field.at(12)==108 && 
field.at(13)==100
) {
obj.inheritedField= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;
case 14: 
if (
field.at(0)==105 && 
field.at(1)==110 && 
field.at(2)==104 && 
field.at(3)==101 && 
field.at(4)==114 && 
field.at(5)==105 && 
field.at(6)==116 && 
field.at(7)==101 && 
field.at(8)==100 && 
field.at(9)==70 && 
field.at(10)==105 && 
field.at(11)==101 && 
field.at(12)==108 && 
field.at(13)==100
) {
obj.inheritedField= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestObject.test_inheritance(TestObject.java:117)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestObject.test_inheritance(TestObject.java:117)

[ERROR] test_two_elements(com.jsoniter.TestArray)  Time elapsed: 0 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@16d41725 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.int_array: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_two_elements(TestArray.java:74)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.int_array: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_two_elements(TestArray.java:74)

[ERROR] test_object_creation(com.jsoniter.TestObject)  Time elapsed: 0.034 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@6af78a48 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestObject.IDependenceInjectedObject obj = (existingObj == null ? (com.jsoniter.TestObject.IDependenceInjectedObject)com.jsoniter.spi.JsoniterSpi.create(com.jsoniter.TestObject.IDependenceInjectedObject.class) : (com.jsoniter.TestObject.IDependenceInjectedObject)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
iter.skip();
}
return obj;
}
	at com.jsoniter.TestObject.test_object_creation(TestObject.java:158)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestObject.test_object_creation(TestObject.java:158)

[ERROR] test_empty_array(com.jsoniter.TestArray)  Time elapsed: 0 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@3b6c2be6 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.int_array: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestArray.test_empty_array(TestArray.java:25)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.decoder.int_array: frozen class (cannot edit)
	at com.jsoniter.TestArray.test_empty_array(TestArray.java:25)

[ERROR] test_maybe_empty_array_field(com.jsoniter.TestObject)  Time elapsed: 0.023 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@27c53c32 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestObject.TestObject6 obj = (existingObj == null ? new com.jsoniter.TestObject.TestObject6() : (com.jsoniter.TestObject.TestObject6)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
com.jsoniter.CodegenAccess.setExistingObject(iter, obj.field1);obj.field1= (com.jsoniter.TestObject.TestObject6_field1)com.jsoniter.CodegenAccess.read("field1@jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestObject_TestObject6", iter);
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
com.jsoniter.CodegenAccess.setExistingObject(iter, obj.field1);obj.field1= (com.jsoniter.TestObject.TestObject6_field1)com.jsoniter.CodegenAccess.read("field1@jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.TestObject_TestObject6", iter);
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestObject.test_maybe_empty_array_field(TestObject.java:198)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestObject.test_maybe_empty_array_field(TestObject.java:198)

[INFO] Running com.jsoniter.TestCustomizeType
[ERROR] test_two_fields(com.jsoniter.TestObject)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@68aec50 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.SimpleObject: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.SimpleObject obj = (existingObj == null ? new com.jsoniter.SimpleObject() : (com.jsoniter.SimpleObject)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestObject.test_two_fields(TestObject.java:71)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.SimpleObject: frozen class (cannot edit)
	at com.jsoniter.TestObject.test_two_fields(TestObject.java:71)

[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.32 s <<< FAILURE! - in com.jsoniter.TestCustomizeType
[ERROR] test_customize_through_extension(com.jsoniter.TestCustomizeType)  Time elapsed: 0.133 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@570a62a5 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestCustomizeType.FieldWithMyDate2() : (com.jsoniter.TestCustomizeType.FieldWithMyDate2)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestCustomizeType.FieldWithMyDate2() : (com.jsoniter.TestCustomizeType.FieldWithMyDate2)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
com.jsoniter.TestCustomizeType.MyDate2 _field_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1736598119: 
_field_ = (com.jsoniter.TestCustomizeType.MyDate2)com.jsoniter.CodegenAccess.read("jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestCustomizeType_MyDate2", iter);
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestCustomizeType.FieldWithMyDate2 obj = (existingObj == null ? new com.jsoniter.TestCustomizeType.FieldWithMyDate2() : (com.jsoniter.TestCustomizeType.FieldWithMyDate2)existingObj);
obj.field = _field_;
return obj;
}
	at com.jsoniter.TestCustomizeType.test_customize_through_extension(TestCustomizeType.java:45)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestCustomizeType.test_customize_through_extension(TestCustomizeType.java:45)

[ERROR] test_enum(com.jsoniter.TestObject)  Time elapsed: 0.197 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@59328218 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { if (iter.readNull()) { return null; }
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readSlice(iter);
switch (field.len()) {
case 3: 
if (
field.at(0)==87 && 
field.at(1)==79 && 
field.at(2)==87
) {
return com.jsoniter.TestObject$TestObject5$MyEnum.WOW;
}
break;
case 5: 
if (
field.at(0)==87 && 
field.at(1)==79 && 
field.at(2)==82 && 
field.at(3)==76 && 
field.at(4)==68
) {
return com.jsoniter.TestObject$TestObject5$MyEnum.WORLD;
}
if (
field.at(0)==72 && 
field.at(1)==69 && 
field.at(2)==76 && 
field.at(3)==76 && 
field.at(4)==79
) {
return com.jsoniter.TestObject$TestObject5$MyEnum.HELLO;
}
break;

}
throw iter.reportError("decode enum", field + " is not valid enum for com.jsoniter.TestObject$TestObject5$MyEnum");
}
	at com.jsoniter.TestObject.test_enum(TestObject.java:175)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestObject.test_enum(TestObject.java:175)

[ERROR] test_customize_impl(com.jsoniter.TestCustomizeType)  Time elapsed: 0.187 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@52a7928a with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestCustomizeType.MyObject() : (com.jsoniter.TestCustomizeType.MyObject)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestCustomizeType.MyObject() : (com.jsoniter.TestCustomizeType.MyObject)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
long _field1_ = 0;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1212206434: 
_field1_ = (long)iter.readLong();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestCustomizeType.MyObject obj = (existingObj == null ? new com.jsoniter.TestCustomizeType.MyObject() : (com.jsoniter.TestCustomizeType.MyObject)existingObj);
obj.field1 = _field1_;
return obj;
}
	at com.jsoniter.TestCustomizeType.test_customize_impl(TestCustomizeType.java:60)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestCustomizeType.test_customize_impl(TestCustomizeType.java:60)

[INFO] Running com.jsoniter.TestAnnotationJsonWrapper
[ERROR] test_empty_object(com.jsoniter.TestObject)  Time elapsed: 0.013 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@478967eb with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.SimpleObject: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.SimpleObject obj = (existingObj == null ? new com.jsoniter.SimpleObject() : (com.jsoniter.SimpleObject)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestObject.test_empty_object(TestObject.java:35)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.SimpleObject: frozen class (cannot edit)
	at com.jsoniter.TestObject.test_empty_object(TestObject.java:35)

[ERROR] test_read_null(com.jsoniter.TestObject)  Time elapsed: 0.001 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@4a1dda83 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.SimpleObject: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.SimpleObject obj = (existingObj == null ? new com.jsoniter.SimpleObject() : (com.jsoniter.SimpleObject)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestObject.test_read_null(TestObject.java:95)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.SimpleObject: frozen class (cannot edit)
	at com.jsoniter.TestObject.test_read_null(TestObject.java:95)

[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.45 s <<< FAILURE! - in com.jsoniter.TestAnnotationJsonWrapper
[ERROR] test_key_value(com.jsoniter.TestAnnotationJsonWrapper)  Time elapsed: 0.23 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7f27f59b with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestAnnotationJsonWrapper.TestObject2 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonWrapper.TestObject2() : (com.jsoniter.TestAnnotationJsonWrapper.TestObject2)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
java.util.Map extra = null;
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
if (extra == null) { extra = new java.util.HashMap(); }
extra.put(field.toString(), iter.readAny());
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
if (extra == null) { extra = new java.util.HashMap(); }
extra.put(field.toString(), iter.readAny());
}
java.util.Iterator extraIter = extra.entrySet().iterator();
while(extraIter.hasNext()) {
java.util.Map.Entry entry = (java.util.Map.Entry)extraIter.next();
String key = entry.getKey().toString();
com.jsoniter.any.Any value = (com.jsoniter.any.Any)entry.getValue();
obj.setProperties(key, value.object());
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonWrapper.test_key_value(TestAnnotationJsonWrapper.java:49)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonWrapper.test_key_value(TestAnnotationJsonWrapper.java:49)

[ERROR] test_binding(com.jsoniter.TestAnnotationJsonWrapper)  Time elapsed: 0.067 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@291a4791 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonWrapper.TestObject1() : (com.jsoniter.TestAnnotationJsonWrapper.TestObject1)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonWrapper.TestObject1() : (com.jsoniter.TestAnnotationJsonWrapper.TestObject1)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
int _field1_ = 0;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1212206434: 
_field1_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotationJsonWrapper.TestObject1 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonWrapper.TestObject1() : (com.jsoniter.TestAnnotationJsonWrapper.TestObject1)existingObj);
obj.initialize(_field1_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonWrapper.test_binding(TestAnnotationJsonWrapper.java:31)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonWrapper.test_binding(TestAnnotationJsonWrapper.java:31)

[ERROR] test_non_ascii_field(com.jsoniter.TestObject)  Time elapsed: 0.025 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@6f315b08 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestObject.TestObject9 obj = (existingObj == null ? new com.jsoniter.TestObject.TestObject9() : (com.jsoniter.TestObject.TestObject9)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==-27 && 
field.at(1)==-83 && 
field.at(2)==-105 && 
field.at(3)==-26 && 
field.at(4)==-82 && 
field.at(5)==-75
) {
obj.字段= (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==-27 && 
field.at(1)==-83 && 
field.at(2)==-105 && 
field.at(3)==-26 && 
field.at(4)==-82 && 
field.at(5)==-75
) {
obj.字段= (int)iter.readInt();
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestObject.test_non_ascii_field(TestObject.java:267)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestObject.test_non_ascii_field(TestObject.java:267)

[ERROR] test_setter_is_preferred(com.jsoniter.TestObject)  Time elapsed: 0.166 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@3b170235 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestObject.TestObject8 obj = (existingObj == null ? new com.jsoniter.TestObject.TestObject8() : (com.jsoniter.TestObject.TestObject8)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 7: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==45 && 
field.at(6)==49
) {
obj.setField1( (java.lang.String)iter.readString());
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 7: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==45 && 
field.at(6)==49
) {
obj.setField1( (java.lang.String)iter.readString());
continue;
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestObject.test_setter_is_preferred(TestObject.java:252)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestObject.test_setter_is_preferred(TestObject.java:252)

[ERROR] test_issue_104(com.jsoniter.TestAnnotationJsonWrapper)  Time elapsed: 0.151 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@11c88cca with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonWrapper.AAA() : (com.jsoniter.TestAnnotationJsonWrapper.AAA)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonWrapper.AAA() : (com.jsoniter.TestAnnotationJsonWrapper.AAA)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
java.lang.String _name_ = null;
java.lang.String _parts_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 831172030: 
_name_ = (java.lang.String)iter.readString();
continue;
case 1480434725: 
_parts_ = (java.lang.String)iter.readString();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotationJsonWrapper.AAA obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonWrapper.AAA() : (com.jsoniter.TestAnnotationJsonWrapper.AAA)existingObj);
obj.name = _name_;
obj.foreignFromJson(_parts_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonWrapper.test_issue_104(TestAnnotationJsonWrapper.java:75)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonWrapper.test_issue_104(TestAnnotationJsonWrapper.java:75)

[ERROR] test_native_field(com.jsoniter.TestObject)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@5e9bf744 with [class java.lang.Integer], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.ArrayList col = (java.util.ArrayList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.ArrayList(0): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(1): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(2): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.ArrayList obj = col == null ? new java.util.ArrayList(3): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.ArrayList obj = col == null ? new java.util.ArrayList(8): (java.util.ArrayList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestObject.test_native_field(TestObject.java:104)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.java.util.List_java.lang.Integer: frozen class (cannot edit)
	at com.jsoniter.TestObject.test_native_field(TestObject.java:104)

[INFO] Running com.jsoniter.any.TestList
[ERROR] test_empty_class(com.jsoniter.TestObject)  Time elapsed: 0.014 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@48cdb156 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.TestObject.EmptyClass obj = (existingObj == null ? new com.jsoniter.TestObject.EmptyClass() : (com.jsoniter.TestObject.EmptyClass)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
iter.skip();
}
return obj;
}
	at com.jsoniter.TestObject.test_empty_class(TestObject.java:28)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestObject.test_empty_class(TestObject.java:28)

[ERROR] Tests run: 16, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 11.793 s <<< FAILURE! - in com.jsoniter.any.TestList
[ERROR] test_to_string(com.jsoniter.any.TestList)  Time elapsed: 0.005 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.AbstractList with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.Arrays_ArrayList: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.any.TestList.test_to_string(TestList.java:52)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.Arrays_ArrayList: frozen class (cannot edit)
	at com.jsoniter.any.TestList.test_to_string(TestList.java:52)

[ERROR] test_to_string(com.jsoniter.any.TestList)  Time elapsed: 0 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: class java.util.AbstractList with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.Arrays_ArrayList: frozen class (cannot edit)
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
java.util.List list = (java.util.List)obj;
int size = list.size();
if (size == 0) { return; }
java.lang.Object e = list.get(0);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
for (int i = 1; i < size; i++) {
stream.write(',');
e = list.get(i);
if (e == null) { stream.writeNull(); } else {
com.jsoniter.output.CodegenAccess.writeVal("jsoniter_codegen.cfg9223372036535405691.encoder.java.lang.Object", (java.lang.Object)e, stream);
}
}
}

	at com.jsoniter.any.TestList.test_to_string(TestList.java:52)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372036535405691.encoder.java.util.Arrays_ArrayList: frozen class (cannot edit)
	at com.jsoniter.any.TestList.test_to_string(TestList.java:52)

[INFO] Running com.jsoniter.TestDemo
3
[ERROR] test_one_field(com.jsoniter.TestObject)  Time elapsed: 0.002 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@4b4814d0 with [], exception: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.SimpleObject: frozen class (cannot edit)
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
com.jsoniter.SimpleObject obj = (existingObj == null ? new com.jsoniter.SimpleObject() : (com.jsoniter.SimpleObject)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100
) {
if (
field.at(5)==49
) {
obj.field1= (java.lang.String)iter.readString();
continue;
}
if (
field.at(5)==50
) {
obj.field2= (java.lang.String)iter.readString();
continue;
}
}
break;

}
iter.skip();
}
return obj;
}
	at com.jsoniter.TestObject.test_one_field(TestObject.java:51)
Caused by: java.lang.RuntimeException: jsoniter_codegen.cfg9223372034806973682.decoder.com.jsoniter.SimpleObject: frozen class (cannot edit)
	at com.jsoniter.TestObject.test_one_field(TestObject.java:51)

6
[ERROR] Tests run: 11, Failures: 0, Errors: 7, Skipped: 0, Time elapsed: 1.125 s <<< FAILURE! - in com.jsoniter.TestDemo
[ERROR] test_utf8(com.jsoniter.TestDemo)  Time elapsed: 0.124 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@3a6e9856 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestDemo.TestObject() : (com.jsoniter.TestDemo.TestObject)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestDemo.TestObject() : (com.jsoniter.TestDemo.TestObject)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
java.lang.String _body_ = null;
int _commentCount_ = 0;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case -609584779: 
_body_ = (java.lang.String)iter.readString();
continue;
case 1979725789: 
_commentCount_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestDemo.TestObject obj = (existingObj == null ? new com.jsoniter.TestDemo.TestObject() : (com.jsoniter.TestDemo.TestObject)existingObj);
obj.body = _body_;
obj.commentCount = _commentCount_;
return obj;
}
	at com.jsoniter.TestDemo.test_utf8(TestDemo.java:165)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_utf8(TestDemo.java:165)

[ERROR] test_abc(com.jsoniter.TestDemo)  Time elapsed: 0.078 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@56fda064 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestDemo.ABC() : (com.jsoniter.TestDemo.ABC)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestDemo.ABC() : (com.jsoniter.TestDemo.ABC)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
com.jsoniter.any.Any _a_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case -468965076: 
_a_ = (com.jsoniter.any.Any)iter.readAny();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestDemo.ABC obj = (existingObj == null ? new com.jsoniter.TestDemo.ABC() : (com.jsoniter.TestDemo.ABC)existingObj);
obj.a = _a_;
return obj;
}
	at com.jsoniter.TestDemo.test_abc(TestDemo.java:46)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_abc(TestDemo.java:46)

[ERROR] test_bind_api(com.jsoniter.TestDemo)  Time elapsed: 0.053 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@447521e with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new int[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
int a1 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1 };
}
int a2 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2 };
}
int a3 = (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3 };
}
int a4 = (int) (int)iter.readInt();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new int[]{ a1, a2, a3, a4 };
}
int a5 = (int) (int)iter.readInt();
int[] arr = new int[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
int[] newArr = new int[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (int)iter.readInt();
}
int[] result = new int[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestDemo.test_bind_api(TestDemo.java:22)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_bind_api(TestDemo.java:22)

[ERROR] test_generics(com.jsoniter.TestDemo)  Time elapsed: 0.046 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@4409cae6 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestDemo.Feed() : (com.jsoniter.TestDemo.Feed)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestDemo.Feed() : (com.jsoniter.TestDemo.Feed)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
java.lang.String _id_ = null;
java.lang.String _owner_ = null;
java.lang.String _name_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case -1925595674: 
_name_ = (java.lang.String)iter.readString();
continue;
case -177779500: 
_owner_ = (java.lang.String)iter.readString();
continue;
case 926444256: 
_id_ = (java.lang.String)iter.readString();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestDemo.Feed obj = (existingObj == null ? new com.jsoniter.TestDemo.Feed() : (com.jsoniter.TestDemo.Feed)existingObj);
obj.id = _id_;
obj.owner = _owner_;
obj.name = _name_;
return obj;
}
	at com.jsoniter.TestDemo.test_generics(TestDemo.java:185)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_generics(TestDemo.java:185)

[ERROR] test_iterator_api_and_bind(com.jsoniter.TestDemo)  Time elapsed: 0.095 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@2d237460 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '[') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
com.jsoniter.CodegenAccess.resetExistingObject(iter); return null;
}
}
}
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == ']') {
return new java.lang.String[0];
}
com.jsoniter.CodegenAccess.unreadByte(iter);
java.lang.String a1 = (java.lang.String)iter.readString();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new java.lang.String[]{ a1 };
}
java.lang.String a2 = (java.lang.String)iter.readString();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new java.lang.String[]{ a1, a2 };
}
java.lang.String a3 = (java.lang.String)iter.readString();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new java.lang.String[]{ a1, a2, a3 };
}
java.lang.String a4 = (java.lang.String) (java.lang.String)iter.readString();
if (!com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
return new java.lang.String[]{ a1, a2, a3, a4 };
}
java.lang.String a5 = (java.lang.String) (java.lang.String)iter.readString();
java.lang.String[] arr = new java.lang.String[10];
arr[0] = a1;
arr[1] = a2;
arr[2] = a3;
arr[3] = a4;
arr[4] = a5;
int i = 5;
while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter)) {
if (i == arr.length) {
java.lang.String[] newArr = new java.lang.String[arr.length * 2];
System.arraycopy(arr, 0, newArr, 0, arr.length);
arr = newArr;
}
arr[i++] = (java.lang.String)iter.readString();
}
java.lang.String[] result = new java.lang.String[i];
System.arraycopy(arr, 0, result, 0, i);
return result;
}
	at com.jsoniter.TestDemo.test_iterator_api_and_bind(TestDemo.java:55)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_iterator_api_and_bind(TestDemo.java:55)

[ERROR] test_any_is_fun(com.jsoniter.TestDemo)  Time elapsed: 0.031 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate encoder for: java.util.Map<java.lang.String, com.jsoniter.any.Any> with [class java.lang.String, class com.jsoniter.any.Any], exception: java.lang.NullPointerException
public static void encode_(java.lang.Object obj, com.jsoniter.output.JsonStream stream) throws java.io.IOException {
if (obj == null) { stream.writeNull(); return; }
java.util.Map map = (java.util.Map)obj;
java.util.Iterator iter = map.entrySet().iterator();
if(!iter.hasNext()) { return; }
java.util.Map.Entry entry = (java.util.Map.Entry)iter.next();
stream.writeVal((java.lang.String)entry.getKey());
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
stream.writeVal((com.jsoniter.any.Any)entry.getValue());
}
while(iter.hasNext()) {
entry = (java.util.Map.Entry)iter.next();
stream.write(',');
stream.writeVal((java.lang.String)entry.getKey());
stream.write(':');
if (entry.getValue() == null) { stream.writeNull(); } else {
stream.writeVal((com.jsoniter.any.Any)entry.getValue());
}
}
}

	at com.jsoniter.TestDemo.test_any_is_fun(TestDemo.java:133)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_any_is_fun(TestDemo.java:133)

[ERROR] test_deserialize(com.jsoniter.TestDemo)  Time elapsed: 0.065 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@649b5891 with [class java.lang.String, class java.lang.Object], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.util.HashMap map = (java.util.HashMap)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
if (map == null) { map = new java.util.HashMap(); }
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
return map;
}
do {
java.lang.Object mapKey = com.jsoniter.CodegenAccess.readObjectFieldAsString(iter);
map.put(mapKey, (java.lang.Object)iter.read());
} while (com.jsoniter.CodegenAccess.nextToken(iter) == ',');
return map;
}
	at com.jsoniter.TestDemo.test_deserialize(TestDemo.java:171)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestDemo.test_deserialize(TestDemo.java:171)

[INFO] Running com.jsoniter.TestAnnotationJsonProperty
[ERROR] Tests run: 11, Failures: 0, Errors: 11, Skipped: 0, Time elapsed: 1.308 s <<< FAILURE! - in com.jsoniter.TestAnnotationJsonProperty
[ERROR] test_required(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.296 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7c1503a3 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
long tracker = 0;
com.jsoniter.TestAnnotationJsonProperty.TestObject8 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject8() : (com.jsoniter.TestAnnotationJsonProperty.TestObject8)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
java.util.List missingFields = new java.util.ArrayList();
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 1L, "result");
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 2L, "code2");
throw new com.jsoniter.spi.JsonException("missing required properties: " + missingFields);
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 2: 
if (
field.at(0)==114 && 
field.at(1)==115
) {
obj.result= (boolean)iter.readBoolean();
tracker = tracker | 1L;
continue;
}
break;
case 4: 
if (
field.at(0)==99 && 
field.at(1)==111 && 
field.at(2)==100 && 
field.at(3)==101
) {
obj.code2= (int)iter.readInt();
tracker = tracker | 2L;
continue;
}
break;
case 5: 
if (
field.at(0)==101 && 
field.at(1)==114 && 
field.at(2)==114 && 
field.at(3)==111 && 
field.at(4)==114
) {
obj.error= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 2: 
if (
field.at(0)==114 && 
field.at(1)==115
) {
obj.result= (boolean)iter.readBoolean();
tracker = tracker | 1L;
continue;
}
break;
case 4: 
if (
field.at(0)==99 && 
field.at(1)==111 && 
field.at(2)==100 && 
field.at(3)==101
) {
obj.code2= (int)iter.readInt();
tracker = tracker | 2L;
continue;
}
break;
case 5: 
if (
field.at(0)==101 && 
field.at(1)==114 && 
field.at(2)==114 && 
field.at(3)==111 && 
field.at(4)==114
) {
obj.error= (java.lang.String)iter.readString();
continue;
}
break;

}
iter.skip();
}
if (tracker != 3L) {
java.util.List missingFields = new java.util.ArrayList();
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 1L, "result");
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 2L, "code2");
throw new com.jsoniter.spi.JsonException("missing required properties: " + missingFields);
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_required(TestAnnotationJsonProperty.java:125)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_required(TestAnnotationJsonProperty.java:125)

[ERROR] test_getter_and_setter(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.038 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@2a0ea492 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject9() : (com.jsoniter.TestAnnotationJsonProperty.TestObject9)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject9() : (com.jsoniter.TestAnnotationJsonProperty.TestObject9)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
java.lang.String _field1_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 686115421: 
_field1_ = (java.lang.String)iter.readString();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotationJsonProperty.TestObject9 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject9() : (com.jsoniter.TestAnnotationJsonProperty.TestObject9)existingObj);
obj.setField1(_field1_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter(TestAnnotationJsonProperty.java:144)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter(TestAnnotationJsonProperty.java:144)

[ERROR] test_rename(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.145 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@2e56b4d with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject1() : (com.jsoniter.TestAnnotationJsonProperty.TestObject1)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject1() : (com.jsoniter.TestAnnotationJsonProperty.TestObject1)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
int _field1_ = 0;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 686115421: 
_field1_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotationJsonProperty.TestObject1 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject1() : (com.jsoniter.TestAnnotationJsonProperty.TestObject1)existingObj);
obj.field1 = _field1_;
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_rename(TestAnnotationJsonProperty.java:26)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_rename(TestAnnotationJsonProperty.java:26)

[ERROR] test_required_properties(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.146 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@28a6e171 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
long tracker = 0;
com.jsoniter.TestAnnotationJsonProperty.TestObject2 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject2() : (com.jsoniter.TestAnnotationJsonProperty.TestObject2)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
java.util.List missingFields = new java.util.ArrayList();
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 1L, "field1");
obj.missingProperties = missingFields;
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (int)iter.readInt();
tracker = tracker | 1L;
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (int)iter.readInt();
tracker = tracker | 1L;
continue;
}
break;

}
iter.skip();
}
if (tracker != 1L) {
java.util.List missingFields = new java.util.ArrayList();
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 1L, "field1");
obj.missingProperties = missingFields;
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_required_properties(TestAnnotationJsonProperty.java:40)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_required_properties(TestAnnotationJsonProperty.java:40)

[ERROR] test_required_properties_not_missing(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.053 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@31a136a6 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (iter.readNull()) { return null; }
long tracker = 0;
com.jsoniter.TestAnnotationJsonProperty.TestObject6 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject6() : (com.jsoniter.TestAnnotationJsonProperty.TestObject6)existingObj);
if (!com.jsoniter.CodegenAccess.readObjectStart(iter)) {
java.util.List missingFields = new java.util.ArrayList();
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 1L, "field1");
obj.missingProperties = missingFields;
return obj;
}
com.jsoniter.spi.Slice field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
boolean once = true;
while (once) {
once = false;
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (int)iter.readInt();
tracker = tracker | 1L;
continue;
}
break;

}
iter.skip();
}
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
field = com.jsoniter.CodegenAccess.readObjectFieldAsSlice(iter);
switch (field.len()) {
case 6: 
if (
field.at(0)==102 && 
field.at(1)==105 && 
field.at(2)==101 && 
field.at(3)==108 && 
field.at(4)==100 && 
field.at(5)==49
) {
obj.field1= (int)iter.readInt();
tracker = tracker | 1L;
continue;
}
break;

}
iter.skip();
}
if (tracker != 1L) {
java.util.List missingFields = new java.util.ArrayList();
com.jsoniter.CodegenAccess.addMissingField(missingFields, tracker, 1L, "field1");
obj.missingProperties = missingFields;
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing(TestAnnotationJsonProperty.java:87)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing(TestAnnotationJsonProperty.java:87)

[INFO] 
[INFO] Results:
[INFO] 
[ERROR] test_bind_from_multiple_names(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.119 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@2f9b21d6 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject5() : (com.jsoniter.TestAnnotationJsonProperty.TestObject5)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject5() : (com.jsoniter.TestAnnotationJsonProperty.TestObject5)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
int _field1_ = 0;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case -1665605285: 
_field1_ = (int)iter.readInt();
continue;
case 686115421: 
_field1_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotationJsonProperty.TestObject5 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject5() : (com.jsoniter.TestAnnotationJsonProperty.TestObject5)existingObj);
obj.field1 = _field1_;
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names(TestAnnotationJsonProperty.java:73)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names(TestAnnotationJsonProperty.java:73)

[ERROR] Failures: 
[ERROR] com.jsoniter.output.TestGson.test_setDateFormat_with_style(com.jsoniter.output.TestGson)
[ERROR]   Run 1: TestGson.test_setDateFormat_with_style:118 expected:<"January 1, 1970 []12:00:00 AM UTC"> but was:<"January 1, 1970 [at ]12:00:00 AM UTC">
[ERROR]   Run 2: TestGson.test_setDateFormat_with_style:118 expected:<"January 1, 1970 []12:00:00 AM UTC"> but was:<"January 1, 1970 [at ]12:00:00 AM UTC">
[ERROR]   Run 3: TestGson.test_setDateFormat_with_style:118 expected:<"January 1, 1970 []12:00:00 AM UTC"> but was:<"January 1, 1970 [at ]12:00:00 AM UTC">
[INFO] 
[ERROR] com.jsoniter.output.TestGson.test_surrogate(com.jsoniter.output.TestGson)
[ERROR]   Run 1: TestGson.test_surrogate:292 java.lang.IllegalAccessException: class com.google.gson.internal.ConstructorConstructor$3 cannot access a member of class com.jsoniter.output.TestGson$TestObject with modifiers "private"
[ERROR]   Run 2: TestGson.test_surrogate:292 java.lang.IllegalAccessException: class com.google.gson.internal.ConstructorConstructor$3 cannot access a member of class com.jsoniter.output.TestGson$TestObject with modifiers "private"
[ERROR]   Run 3: TestGson.test_surrogate:292 java.lang.IllegalAccessException: class com.google.gson.internal.ConstructorConstructor$3 cannot access a member of class com.jsoniter.output.TestGson$TestObject with modifiers "private"
[INFO] 
[ERROR] Errors: 
[ERROR] com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate(com.jsoniter.TestAnnotation)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotation.test_inherited_setter_is_not_duplicate:103 » Json failed to gen...
[ERROR]   Run 3: TestAnnotation.test_inherited_setter_is_not_duplicate:103 » Json failed to gen...
[INFO] 
[ERROR] com.jsoniter.TestAnnotation.test_name_conflict(com.jsoniter.TestAnnotation)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotation.test_name_conflict:84 » Json failed to generate decoder for: co...
[ERROR]   Run 3: TestAnnotation.test_name_conflict:84 » Json failed to generate decoder for: co...
[INFO] 
[ERROR] com.jsoniter.TestAnnotation.test_single_param_setter(com.jsoniter.TestAnnotation)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotation.test_single_param_setter:48 » Json failed to generate decoder f...
[ERROR]   Run 3: TestAnnotation.test_single_param_setter:48 » Json failed to generate decoder f...
[INFO] 
[ERROR] com.jsoniter.TestAnnotation.test_static_factory(com.jsoniter.TestAnnotation)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotation.test_static_factory:34 » Json failed to generate decoder for: c...
[ERROR]   Run 3: TestAnnotation.test_static_factory:34 » Json failed to generate decoder for: c...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonCreator.test_ctor(com.jsoniter.TestAnnotationJsonCreator)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonCreator.test_ctor:27 » Json failed to generate decoder for: ...
[ERROR]   Run 3: TestAnnotationJsonCreator.test_ctor:27 » Json failed to generate decoder for: ...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding(com.jsoniter.TestAnnotationJsonCreator)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonCreator.test_ctor_and_setter_binding:52 » Json failed to gen...
[ERROR]   Run 3: TestAnnotationJsonCreator.test_ctor_and_setter_binding:52 » Json failed to gen...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonIgnore.test_ignore(com.jsoniter.TestAnnotationJsonIgnore)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonIgnore.test_ignore:24 » Json failed to generate decoder for:...
[ERROR]   Run 3: TestAnnotationJsonIgnore.test_ignore:24 » Json failed to generate decoder for:...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonIgnore.test_ignore_no_constructor_field(com.jsoniter.TestAnnotationJsonIgnore)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonIgnore.test_ignore_no_constructor_field:35 » Json failed to ...
[ERROR]   Run 3: TestAnnotationJsonIgnore.test_ignore_no_constructor_field:35 » Json failed to ...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonIgnore.test_json_ignore_with_creator(com.jsoniter.TestAnnotationJsonIgnore)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonIgnore.test_json_ignore_with_creator:63 » Json failed to gen...
[ERROR]   Run 3: TestAnnotationJsonIgnore.test_json_ignore_with_creator:63 » Json failed to gen...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonObject.test_extra_properties(com.jsoniter.TestAnnotationJsonObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonObject.test_extra_properties:22 » Json failed to generate de...
[ERROR]   Run 3: TestAnnotationJsonObject.test_extra_properties:22 » Json failed to generate de...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties(com.jsoniter.TestAnnotationJsonObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonObject.test_no_unknown_properties:61 » Json failed to genera...
[ERROR]   Run 3: TestAnnotationJsonObject.test_no_unknown_properties:61 » Json failed to genera...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names(com.jsoniter.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_bind_from_multiple_names:73 » Json failed to g...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property(com.jsoniter.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_creator_with_json_property:163 » Json failed t...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter(com.jsoniter.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_field_and_getter_setter:183 » Json failed to g...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter(com.jsoniter.TestAnnotationJsonProperty)
[ERROR] test_specify_property(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.153 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@6ef2f7ad with [class java.lang.Integer], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { if (iter.readNull()) { com.jsoniter.CodegenAccess.resetExistingObject(iter); return null; }
java.util.LinkedList col = (java.util.LinkedList)com.jsoniter.CodegenAccess.resetExistingObject(iter);
if (!com.jsoniter.CodegenAccess.readArrayStart(iter)) {
return col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
}
Object a1 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
return obj;
}
Object a2 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
return obj;
}
Object a3 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
if (com.jsoniter.CodegenAccess.nextToken(iter) != ',') {
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
return obj;
}
Object a4 = (java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt()));
java.util.LinkedList obj = col == null ? new java.util.LinkedList(): (java.util.LinkedList)com.jsoniter.CodegenAccess.reuseCollection(col);
obj.add(a1);
obj.add(a2);
obj.add(a3);
obj.add(a4);
while (com.jsoniter.CodegenAccess.nextToken(iter) == ',') {
obj.add((java.lang.Integer)(iter.readNull() ? null : java.lang.Integer.valueOf(iter.readInt())));
}
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_specify_property(TestAnnotationJsonProperty.java:99)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_specify_property(TestAnnotationJsonProperty.java:99)

[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_getter_and_setter:144 » Json failed to generat...
[ERROR] test_creator_with_json_property(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.047 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@5e85c21b with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
int _hello_ = 0;
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return new com.jsoniter.TestAnnotationJsonProperty.TestObject10(_hello_);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return new com.jsoniter.TestAnnotationJsonProperty.TestObject10(_hello_);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1335831723: 
_hello_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotationJsonProperty.TestObject10 obj = new com.jsoniter.TestAnnotationJsonProperty.TestObject10(_hello_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property(TestAnnotationJsonProperty.java:163)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property(TestAnnotationJsonProperty.java:163)

[INFO] 
[ERROR] test_integer_property_decoder(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.136 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@590d6c76 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject4() : (com.jsoniter.TestAnnotationJsonProperty.TestObject4)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject4() : (com.jsoniter.TestAnnotationJsonProperty.TestObject4)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
java.lang.Integer _field1_ = null;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1212206434: 
_field1_ = (java.lang.Integer)com.jsoniter.CodegenAccess.read("field1@jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestAnnotationJsonProperty_TestObject4", iter);
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotationJsonProperty.TestObject4 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject4() : (com.jsoniter.TestAnnotationJsonProperty.TestObject4)existingObj);
obj.field1 = _field1_;
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder(TestAnnotationJsonProperty.java:62)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder(TestAnnotationJsonProperty.java:62)

[ERROR] com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder(com.jsoniter.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_integer_property_decoder:62 » Json failed to g...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonProperty.test_property_decoder(com.jsoniter.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_property_decoder:51 » Json failed to generate ...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonProperty.test_rename(com.jsoniter.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_rename:26 » Json failed to generate decoder fo...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonProperty.test_required(com.jsoniter.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_required:125 » Json failed to generate decoder...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonProperty.test_required_properties(com.jsoniter.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_required_properties:40 » Json failed to genera...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing(com.jsoniter.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_required_properties_not_missing:87 » Json fail...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonProperty.test_specify_property(com.jsoniter.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_specify_property:99 » Json failed to generate ...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonWrapper.test_binding(com.jsoniter.TestAnnotationJsonWrapper)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonWrapper.test_binding:31 » Json failed to generate decoder fo...
[ERROR]   Run 3: TestAnnotationJsonWrapper.test_binding:31 » Json failed to generate decoder fo...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonWrapper.test_issue_104(com.jsoniter.TestAnnotationJsonWrapper)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonWrapper.test_issue_104:75 » Json failed to generate decoder ...
[ERROR]   Run 3: TestAnnotationJsonWrapper.test_issue_104:75 » Json failed to generate decoder ...
[INFO] 
[ERROR] com.jsoniter.TestAnnotationJsonWrapper.test_key_value(com.jsoniter.TestAnnotationJsonWrapper)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonWrapper.test_key_value:49 » Json failed to generate decoder ...
[ERROR]   Run 3: TestAnnotationJsonWrapper.test_key_value:49 » Json failed to generate decoder ...
[INFO] 
[ERROR] com.jsoniter.TestArray.test_array_lazy_any_to_string(com.jsoniter.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_array_lazy_any_to_string:200 » Json failed to generate encoder ...
[ERROR]   Run 3: TestArray.test_array_lazy_any_to_string:200 » Json failed to generate encoder ...
[INFO] 
[ERROR] com.jsoniter.TestArray.test_boolean_array(com.jsoniter.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_boolean_array:175 » Json failed to generate decoder for: com.js...
[ERROR]   Run 3: TestArray.test_boolean_array:175 » Json failed to generate decoder for: com.js...
[INFO] 
[ERROR] com.jsoniter.TestArray.test_empty_array(com.jsoniter.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_empty_array:25 » Json failed to generate decoder for: com.jsoni...
[ERROR] test_field_and_getter_setter(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.019 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@251c8145 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject11() : (com.jsoniter.TestAnnotationJsonProperty.TestObject11)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject11() : (com.jsoniter.TestAnnotationJsonProperty.TestObject11)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
int _field_ = 0;
int _field_ = 0;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1335831723: 
_field_ = (int)iter.readInt();
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotationJsonProperty.TestObject11 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject11() : (com.jsoniter.TestAnnotationJsonProperty.TestObject11)existingObj);
obj.field = _field_;
obj.setField(_field_);
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter(TestAnnotationJsonProperty.java:183)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter(TestAnnotationJsonProperty.java:183)

[ERROR]   Run 3: TestArray.test_empty_array:25 » Json failed to generate decoder for: com.jsoni...
[INFO] 
[ERROR] test_property_decoder(com.jsoniter.TestAnnotationJsonProperty)  Time elapsed: 0.152 s  <<< ERROR!
com.jsoniter.spi.JsonException: 
failed to generate decoder for: com.jsoniter.spi.ClassInfo@7abeabe9 with [], exception: java.lang.NullPointerException
public static java.lang.Object decode_(com.jsoniter.JsonIterator iter) throws java.io.IOException { java.lang.Object existingObj = com.jsoniter.CodegenAccess.resetExistingObject(iter);
byte nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '{') {
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == 'n') {
com.jsoniter.CodegenAccess.skipFixedBytes(iter, 3);
return null;
}
} // end of if null
} // end of if {
nextToken = com.jsoniter.CodegenAccess.readByte(iter);
if (nextToken != '"') {
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject3() : (com.jsoniter.TestAnnotationJsonProperty.TestObject3)existingObj);
} else {
nextToken = com.jsoniter.CodegenAccess.nextToken(iter);
if (nextToken == '}') {
return (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject3() : (com.jsoniter.TestAnnotationJsonProperty.TestObject3)existingObj);
} else {
com.jsoniter.CodegenAccess.unreadByte(iter);
}
} // end of if end
} else { com.jsoniter.CodegenAccess.unreadByte(iter); }// end of if not quote
int _field1_ = 0;
do {
switch (com.jsoniter.CodegenAccess.readObjectFieldAsHash(iter)) {
case 1212206434: 
_field1_ = (int)com.jsoniter.CodegenAccess.readInt("field1@jsoniter_codegen.cfg9223372036535405691.decoder.com.jsoniter.TestAnnotationJsonProperty_TestObject3", iter);
continue;
}
iter.skip();
} while (com.jsoniter.CodegenAccess.nextTokenIsComma(iter));
com.jsoniter.TestAnnotationJsonProperty.TestObject3 obj = (existingObj == null ? new com.jsoniter.TestAnnotationJsonProperty.TestObject3() : (com.jsoniter.TestAnnotationJsonProperty.TestObject3)existingObj);
obj.field1 = _field1_;
return obj;
}
	at com.jsoniter.TestAnnotationJsonProperty.test_property_decoder(TestAnnotationJsonProperty.java:51)
Caused by: java.lang.NullPointerException
	at com.jsoniter.TestAnnotationJsonProperty.test_property_decoder(TestAnnotationJsonProperty.java:51)

[ERROR] com.jsoniter.TestArray.test_five_elements(com.jsoniter.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_five_elements:154 » Json failed to generate decoder for: com.js...
[ERROR]   Run 3: TestArray.test_five_elements:154 » Json failed to generate decoder for: com.js...
[INFO] 
[ERROR] com.jsoniter.TestArray.test_four_elements(com.jsoniter.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_four_elements:126 » Json failed to generate decoder for: com.js...
[ERROR]   Run 3: TestArray.test_four_elements:126 » Json failed to generate decoder for: com.js...
[INFO] 
[ERROR] com.jsoniter.TestArray.test_null(com.jsoniter.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_null:170 » Json failed to generate decoder for: com.jsoniter.sp...
[ERROR]   Run 3: TestArray.test_null:170 » Json failed to generate decoder for: com.jsoniter.sp...
[INFO] 
[ERROR] com.jsoniter.TestArray.test_one_element(com.jsoniter.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_one_element:42 » Json failed to generate decoder for: com.jsoni...
[ERROR]   Run 3: TestArray.test_one_element:42 » Json failed to generate decoder for: com.jsoni...
[INFO] 
[ERROR] com.jsoniter.TestArray.test_three_elements(com.jsoniter.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_three_elements:100 » Json failed to generate decoder for: com.j...
[ERROR]   Run 3: TestArray.test_three_elements:100 » Json failed to generate decoder for: com.j...
[INFO] 
[ERROR] com.jsoniter.TestArray.test_two_elements(com.jsoniter.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_two_elements:74 » Json failed to generate decoder for: com.json...
[ERROR]   Run 3: TestArray.test_two_elements:74 » Json failed to generate decoder for: com.json...
[INFO] 
[ERROR] com.jsoniter.TestCustomizeType.test_customize_impl(com.jsoniter.TestCustomizeType)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestCustomizeType.test_customize_impl:60 » Json failed to generate decoder for...
[ERROR]   Run 3: TestCustomizeType.test_customize_impl:60 » Json failed to generate decoder for...
[INFO] 
[ERROR] com.jsoniter.TestCustomizeType.test_customize_through_extension(com.jsoniter.TestCustomizeType)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestCustomizeType.test_customize_through_extension:45 » Json failed to generat...
[ERROR]   Run 3: TestCustomizeType.test_customize_through_extension:45 » Json failed to generat...
[INFO] 
[ERROR] com.jsoniter.TestDemo.test_abc(com.jsoniter.TestDemo)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestDemo.test_abc:46 » Json failed to generate decoder for: com.jsoniter.spi.C...
[ERROR]   Run 3: TestDemo.test_abc:46 » Json failed to generate decoder for: com.jsoniter.spi.C...
[INFO] 
[ERROR] com.jsoniter.TestDemo.test_any_is_fun(com.jsoniter.TestDemo)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestDemo.test_any_is_fun:133 » Json failed to generate encoder for: java.util....
[ERROR]   Run 3: TestDemo.test_any_is_fun:133 » Json failed to generate encoder for: java.util....
[INFO] 
[ERROR] com.jsoniter.TestDemo.test_bind_api(com.jsoniter.TestDemo)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestDemo.test_bind_api:22 » Json failed to generate decoder for: com.jsoniter....
[ERROR]   Run 3: TestDemo.test_bind_api:22 » Json failed to generate decoder for: com.jsoniter....
[INFO] 
[ERROR] com.jsoniter.TestDemo.test_deserialize(com.jsoniter.TestDemo)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestDemo.test_deserialize:171 » Json failed to generate decoder for: com.jsoni...
[ERROR]   Run 3: TestDemo.test_deserialize:171 » Json failed to generate decoder for: com.jsoni...
[INFO] 
[ERROR] com.jsoniter.TestDemo.test_generics(com.jsoniter.TestDemo)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestDemo.test_generics:185 » Json failed to generate decoder for: com.jsoniter...
[ERROR]   Run 3: TestDemo.test_generics:185 » Json failed to generate decoder for: com.jsoniter...
[INFO] 
[ERROR] com.jsoniter.TestDemo.test_iterator_api_and_bind(com.jsoniter.TestDemo)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestDemo.test_iterator_api_and_bind:55 » Json failed to generate decoder for: ...
[ERROR]   Run 3: TestDemo.test_iterator_api_and_bind:55 » Json failed to generate decoder for: ...
[INFO] 
[ERROR] com.jsoniter.TestDemo.test_utf8(com.jsoniter.TestDemo)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestDemo.test_utf8:165 » Json failed to generate decoder for: com.jsoniter.spi...
[ERROR]   Run 3: TestDemo.test_utf8:165 » Json failed to generate decoder for: com.jsoniter.spi...
[INFO] 
[ERROR] com.jsoniter.TestExisting.test_direct_reuse(com.jsoniter.TestExisting)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestExisting.test_direct_reuse:28 » Json failed to generate decoder for: com.j...
[ERROR]   Run 3: TestExisting.test_direct_reuse:28 » Json failed to generate decoder for: com.j...
[INFO] 
[ERROR] com.jsoniter.TestExisting.test_indirect_reuse(com.jsoniter.TestExisting)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestExisting.test_indirect_reuse:44 » Json failed to generate decoder for: com...
[ERROR]   Run 3: TestExisting.test_indirect_reuse:44 » Json failed to generate decoder for: com...
[INFO] 
[ERROR] com.jsoniter.TestExisting.test_reuse_linked_list(com.jsoniter.TestExisting)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestExisting.test_reuse_linked_list:60 » Json failed to generate decoder for: ...
[ERROR]   Run 3: TestExisting.test_reuse_linked_list:60 » Json failed to generate decoder for: ...
[INFO] 
[ERROR] com.jsoniter.TestExisting.test_reuse_list(com.jsoniter.TestExisting)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestExisting.test_reuse_list:53 » Json failed to generate decoder for: com.jso...
[ERROR]   Run 3: TestExisting.test_reuse_list:53 » Json failed to generate decoder for: com.jso...
[INFO] 
[ERROR] com.jsoniter.TestExisting.test_reuse_map(com.jsoniter.TestExisting)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestExisting.test_reuse_map:68 » Json failed to generate decoder for: com.json...
[ERROR]   Run 3: TestExisting.test_reuse_map:68 » Json failed to generate decoder for: com.json...
[INFO] 
[ERROR] com.jsoniter.TestGenerics.test_complex_object(com.jsoniter.TestGenerics)
[INFO]   Run 1: PASS
[INFO]   Run 2: PASS
[ERROR]   Run 3: TestGenerics.test_complex_object:68 » Json failed to generate decoder for: com...
[ERROR]   Run 4: TestGenerics.test_complex_object:68 » Json failed to generate decoder for: com...
[ERROR]   Run 5: TestGenerics.test_complex_object:68 » Json failed to generate decoder for: com...
[ERROR]   Run 6: TestGenerics.test_complex_object:68 » Json failed to generate decoder for: com...
[INFO] 
[ERROR] com.jsoniter.TestGenerics.test_int_list(com.jsoniter.TestGenerics)
[INFO]   Run 1: PASS
[INFO]   Run 2: PASS
[ERROR]   Run 3: TestGenerics.test_int_list:19 » Json failed to generate decoder for: com.jsoni...
[ERROR]   Run 4: TestGenerics.test_int_list:19 » Json failed to generate decoder for: com.jsoni...
[ERROR]   Run 5: TestGenerics.test_int_list:19 » Json failed to generate decoder for: com.jsoni...
[ERROR]   Run 6: TestGenerics.test_int_list:19 » Json failed to generate decoder for: com.jsoni...
[INFO] 
[ERROR] com.jsoniter.TestGenerics.test_integer_map(com.jsoniter.TestGenerics)
[INFO]   Run 1: PASS
[INFO]   Run 2: PASS
[ERROR]   Run 3: TestGenerics.test_integer_map:54 » Json failed to generate decoder for: com.js...
[ERROR]   Run 4: TestGenerics.test_integer_map:54 » Json failed to generate decoder for: com.js...
[ERROR]   Run 5: TestGenerics.test_integer_map:54 » Json failed to generate decoder for: com.js...
[ERROR]   Run 6: TestGenerics.test_integer_map:54 » Json failed to generate decoder for: com.js...
[INFO] 
[ERROR] com.jsoniter.TestGenerics.test_issue_103(com.jsoniter.TestGenerics)
[INFO]   Run 1: PASS
[INFO]   Run 2: PASS
[ERROR]   Run 3: TestGenerics.test_issue_103:130 » Json failed to generate decoder for: com.jso...
[ERROR]   Run 4: TestGenerics.test_issue_103:130 » Json failed to generate decoder for: com.jso...
[ERROR]   Run 5: TestGenerics.test_issue_103:130 » Json failed to generate decoder for: com.jso...
[ERROR]   Run 6: TestGenerics.test_issue_103:130 » Json failed to generate decoder for: com.jso...
[INFO] 
[ERROR] com.jsoniter.TestGenerics.test_linked_list(com.jsoniter.TestGenerics)
[INFO]   Run 1: PASS
[INFO]   Run 2: PASS
[ERROR]   Run 3: TestGenerics.test_linked_list:33 » Json failed to generate decoder for: com.js...
[ERROR]   Run 4: TestGenerics.test_linked_list:33 » Json failed to generate decoder for: com.js...
[ERROR]   Run 5: TestGenerics.test_linked_list:33 » Json failed to generate decoder for: com.js...
[ERROR]   Run 6: TestGenerics.test_linked_list:33 » Json failed to generate decoder for: com.js...
[INFO] 
[ERROR] com.jsoniter.TestGenerics.test_list_of_list(com.jsoniter.TestGenerics)
[INFO]   Run 1: PASS
[INFO]   Run 2: PASS
[ERROR]   Run 3: TestGenerics.test_list_of_list:61 » Json failed to generate decoder for: com.j...
[ERROR]   Run 4: TestGenerics.test_list_of_list:61 » Json failed to generate decoder for: com.j...
[ERROR]   Run 5: TestGenerics.test_list_of_list:61 » Json failed to generate decoder for: com.j...
[ERROR]   Run 6: TestGenerics.test_list_of_list:61 » Json failed to generate decoder for: com.j...
[INFO] 
[ERROR] com.jsoniter.TestGenerics.test_string_list(com.jsoniter.TestGenerics)
[INFO]   Run 1: PASS
[INFO]   Run 2: PASS
[ERROR]   Run 3: TestGenerics.test_string_list:26 » Json failed to generate decoder for: com.js...
[ERROR]   Run 4: TestGenerics.test_string_list:26 » Json failed to generate decoder for: com.js...
[ERROR]   Run 5: TestGenerics.test_string_list:26 » Json failed to generate decoder for: com.js...
[ERROR]   Run 6: TestGenerics.test_string_list:26 » Json failed to generate decoder for: com.js...
[INFO] 
[ERROR] com.jsoniter.TestGenerics.test_string_map(com.jsoniter.TestGenerics)
[INFO]   Run 1: PASS
[INFO]   Run 2: PASS
[ERROR]   Run 3: TestGenerics.test_string_map:47 » Json failed to generate decoder for: com.jso...
[ERROR]   Run 4: TestGenerics.test_string_map:47 » Json failed to generate decoder for: com.jso...
[ERROR]   Run 5: TestGenerics.test_string_map:47 » Json failed to generate decoder for: com.jso...
[ERROR]   Run 6: TestGenerics.test_string_map:47 » Json failed to generate decoder for: com.jso...
[INFO] 
[ERROR] com.jsoniter.TestGenerics.test_string_set(com.jsoniter.TestGenerics)
[INFO]   Run 1: PASS
[INFO]   Run 2: PASS
[ERROR]   Run 3: TestGenerics.test_string_set:40 » Json failed to generate decoder for: com.jso...
[ERROR]   Run 4: TestGenerics.test_string_set:40 » Json failed to generate decoder for: com.jso...
[ERROR]   Run 5: TestGenerics.test_string_set:40 » Json failed to generate decoder for: com.jso...
[ERROR]   Run 6: TestGenerics.test_string_set:40 » Json failed to generate decoder for: com.jso...
[INFO] 
[ERROR] com.jsoniter.TestGenerics.test_wildcard(com.jsoniter.TestGenerics)
[INFO]   Run 1: PASS
[INFO]   Run 2: PASS
[ERROR]   Run 3: TestGenerics.test_wildcard:140 » Json failed to generate decoder for: com.json...
[ERROR]   Run 4: TestGenerics.test_wildcard:140 » Json failed to generate decoder for: com.json...
[ERROR]   Run 5: TestGenerics.test_wildcard:140 » Json failed to generate decoder for: com.json...
[ERROR]   Run 6: TestGenerics.test_wildcard:140 » Json failed to generate decoder for: com.json...
[INFO] 
[ERROR] com.jsoniter.TestMap.test_MapKeyCodec(com.jsoniter.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test_MapKeyCodec:69 » Json failed to generate decoder for: com.jsonite...
[INFO] 
[ERROR] com.jsoniter.TestMap.test_enum_key(com.jsoniter.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test_enum_key:49 » Json failed to generate decoder for: com.jsoniter.s...
[INFO] 
[ERROR] com.jsoniter.TestMap.test_integer_key(com.jsoniter.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test_integer_key:37 » Json failed to generate decoder for: com.jsonite...
[INFO] 
[ERROR] com.jsoniter.TestMap.test_object_key(com.jsoniter.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test_object_key:21 » Json failed to generate decoder for: com.jsoniter...
[INFO] 
[ERROR] com.jsoniter.TestMap.test_string_key(com.jsoniter.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test_string_key:29 » Json failed to generate decoder for: com.jsoniter...
[INFO] 
[ERROR] com.jsoniter.TestNested.test_array_of_objects(com.jsoniter.TestNested)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestNested.test_array_of_objects:13 » Json failed to generate decoder for: com...
[ERROR]   Run 3: TestNested.test_array_of_objects:13 » Json failed to generate decoder for: com...
[INFO] 
[ERROR] com.jsoniter.TestNested.test_recursive_class(com.jsoniter.TestNested)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestNested.test_recursive_class:70 » Json failed to generate decoder for: com....
[ERROR]   Run 3: TestNested.test_recursive_class:70 » Json failed to generate decoder for: com....
[INFO] 
[ERROR] com.jsoniter.TestObject.test_empty_class(com.jsoniter.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_empty_class:28 » Json failed to generate decoder for: com.json...
[INFO] 
[ERROR] com.jsoniter.TestObject.test_empty_object(com.jsoniter.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_empty_object:35 » Json failed to generate decoder for: com.jso...
[INFO] 
[ERROR] com.jsoniter.TestObject.test_enum(com.jsoniter.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_enum:175 » Json failed to generate decoder for: com.jsoniter.s...
[INFO] 
[ERROR] com.jsoniter.TestObject.test_inheritance(com.jsoniter.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_inheritance:117 » Json failed to generate decoder for: com.jso...
[INFO] 
[ERROR] com.jsoniter.TestObject.test_maybe_empty_array_field(com.jsoniter.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_maybe_empty_array_field:198 » Json failed to generate decoder ...
[INFO] 
[ERROR] com.jsoniter.TestObject.test_native_field(com.jsoniter.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_native_field:104 » Json failed to generate decoder for: com.js...
[INFO] 
[ERROR] com.jsoniter.TestObject.test_non_ascii_field(com.jsoniter.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_non_ascii_field:267 » Json failed to generate decoder for: com...
[INFO] 
[ERROR] com.jsoniter.TestObject.test_object_creation(com.jsoniter.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_object_creation:158 » Json failed to generate decoder for: com...
[INFO] 
[ERROR] com.jsoniter.TestObject.test_one_field(com.jsoniter.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_one_field:51 » Json failed to generate decoder for: com.jsonit...
[INFO] 
[ERROR] com.jsoniter.TestObject.test_private_ref(com.jsoniter.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_private_ref:238 » Json failed to generate decoder for: com.jso...
[INFO] 
[ERROR] com.jsoniter.TestObject.test_read_null(com.jsoniter.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_read_null:95 » Json failed to generate decoder for: com.jsonit...
[INFO] 
[ERROR] com.jsoniter.TestObject.test_setter_is_preferred(com.jsoniter.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_setter_is_preferred:252 » Json failed to generate decoder for:...
[INFO] 
[ERROR] com.jsoniter.TestObject.test_two_fields(com.jsoniter.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_two_fields:71 » Json failed to generate decoder for: com.jsoni...
[INFO] 
[ERROR] com.jsoniter.TestReadAny.test_bind_to_any(com.jsoniter.TestReadAny)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestReadAny.test_bind_to_any:28 » Json failed to generate decoder for: com.jso...
[ERROR]   Run 3: TestReadAny.test_bind_to_any:28 » Json failed to generate decoder for: com.jso...
[INFO] 
[ERROR] com.jsoniter.TestReadAny.test_read_class(com.jsoniter.TestReadAny)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestReadAny.test_read_class:145 » Json failed to generate decoder for: com.jso...
[ERROR]   Run 3: TestReadAny.test_read_class:145 » Json failed to generate decoder for: com.jso...
[INFO] 
[ERROR] com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder(com.jsoniter.TestSpiPropertyDecoder)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestSpiPropertyDecoder.test_PropertyDecoder:28 » Json failed to generate decod...
[ERROR]   Run 3: TestSpiPropertyDecoder.test_PropertyDecoder:28 » Json failed to generate decod...
[INFO] 
[ERROR] com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal(com.jsoniter.TestSpiPropertyDecoder)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal:42 » Json failed ...
[ERROR]   Run 3: TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal:42 » Json failed ...
[INFO] 
[ERROR] com.jsoniter.TestSpiTypeDecoder.test_as_array_element(com.jsoniter.TestSpiTypeDecoder)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestSpiTypeDecoder.test_as_array_element:90 » Json failed to generate decoder ...
[ERROR]   Run 3: TestSpiTypeDecoder.test_as_array_element:90 » Json failed to generate decoder ...
[INFO] 
[ERROR] com.jsoniter.TestSpiTypeDecoder.test_as_field_type(com.jsoniter.TestSpiTypeDecoder)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestSpiTypeDecoder.test_as_field_type:84 » Json failed to generate decoder for...
[ERROR]   Run 3: TestSpiTypeDecoder.test_as_field_type:84 » Json failed to generate decoder for...
[INFO] 
[ERROR] com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element(com.jsoniter.TestSpiTypeDecoder)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestSpiTypeDecoder.test_list_or_single_element:121 » Json failed to generate d...
[ERROR]   Run 3: TestSpiTypeDecoder.test_list_or_single_element:121 » Json failed to generate d...
[INFO] 
[ERROR] com.jsoniter.any.TestArray.test_to_string(com.jsoniter.any.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_to_string:53 » Json failed to generate encoder for: class [J wi...
[ERROR]   Run 3: TestArray.test_to_string:53 » Json failed to generate encoder for: class [J wi...
[INFO] 
[ERROR] com.jsoniter.any.TestList.test_to_string(com.jsoniter.any.TestList)
[INFO]   Run 1: PASS
[INFO]   Run 2: PASS
[ERROR]   Run 3: TestList.test_to_string:52 » Json failed to generate encoder for: class java.u...
[ERROR]   Run 4: TestList.test_to_string:52 » Json failed to generate encoder for: class java.u...
[ERROR]   Run 5: TestList.test_to_string:52 » Json failed to generate encoder for: class java.u...
[ERROR]   Run 6: TestList.test_to_string:52 » Json failed to generate encoder for: class java.u...
[INFO] 
[ERROR] com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore(com.jsoniter.output.TestAnnotationJsonIgnore)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonIgnore.test_ignore:18 » Json failed to generate encoder for:...
[ERROR]   Run 3: TestAnnotationJsonIgnore.test_ignore:18 » Json failed to generate encoder for:...
[INFO] 
[ERROR] com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only(com.jsoniter.output.TestAnnotationJsonIgnore)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonIgnore.test_ignore_decoding_only:29 » Json failed to generat...
[ERROR]   Run 3: TestAnnotationJsonIgnore.test_ignore_decoding_only:29 » Json failed to generat...
[INFO] 
[ERROR] com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize(com.jsoniter.output.TestAnnotationJsonIgnore)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonIgnore.test_private_serialize:44 » Json failed to generate e...
[ERROR]   Run 3: TestAnnotationJsonIgnore.test_private_serialize:44 » Json failed to generate e...
[INFO] 
[ERROR] com.jsoniter.output.TestAnnotationJsonProperty.test_encoder(com.jsoniter.output.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_encoder:36 » Json failed to generate encoder f...
[INFO] 
[ERROR] com.jsoniter.output.TestAnnotationJsonProperty.test_getter(com.jsoniter.output.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_getter:50 » Json failed to generate encoder fo...
[INFO] 
[ERROR] com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter(com.jsoniter.output.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_getter_and_setter:68 » Json failed to generate...
[INFO] 
[ERROR] com.jsoniter.output.TestAnnotationJsonProperty.test_property(com.jsoniter.output.TestAnnotationJsonProperty)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonProperty.test_property:23 » Json failed to generate encoder ...
[INFO] 
[ERROR] com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper(com.jsoniter.output.TestAnnotationJsonUnwrapper)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonUnwrapper.test_unwrapper:31 » Json failed to generate encode...
[ERROR]   Run 3: TestAnnotationJsonUnwrapper.test_unwrapper:31 » Json failed to generate encode...
[INFO] 
[ERROR] com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map(com.jsoniter.output.TestAnnotationJsonUnwrapper)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAnnotationJsonUnwrapper.test_unwrapper_with_map:47 » Json failed to genera...
[ERROR]   Run 3: TestAnnotationJsonUnwrapper.test_unwrapper_with_map:47 » Json failed to genera...
[INFO] 
[ERROR] com.jsoniter.output.TestAny.test_array(com.jsoniter.output.TestAny)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAny.test_array:123 » Json failed to generate encoder for: class [I with []...
[INFO] 
[ERROR] com.jsoniter.output.TestAny.test_list(com.jsoniter.output.TestAny)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestAny.test_list:114 » Json failed to generate encoder for: class java.util.A...
[INFO] 
[ERROR] com.jsoniter.output.TestArray.test_array_of_null(com.jsoniter.output.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_array_of_null:90 » Json failed to generate encoder for: Paramet...
[ERROR]   Run 3: TestArray.test_array_of_null:90 » Json failed to generate encoder for: Paramet...
[INFO] 
[ERROR] com.jsoniter.output.TestArray.test_arrays_as_list(com.jsoniter.output.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_arrays_as_list:114 » Json failed to generate encoder for: class...
[ERROR]   Run 3: TestArray.test_arrays_as_list:114 » Json failed to generate encoder for: class...
[INFO] 
[ERROR] com.jsoniter.output.TestArray.test_collection(com.jsoniter.output.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_collection:35 » Json failed to generate encoder for: java.util....
[ERROR]   Run 3: TestArray.test_collection:35 » Json failed to generate encoder for: java.util....
[INFO] 
[ERROR] com.jsoniter.output.TestArray.test_collection_without_type(com.jsoniter.output.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_collection_without_type:45 » Json failed to generate encoder fo...
[ERROR]   Run 3: TestArray.test_collection_without_type:45 » Json failed to generate encoder fo...
[INFO] 
[ERROR] com.jsoniter.output.TestArray.test_default_empty_collection(com.jsoniter.output.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_default_empty_collection:118 » Json failed to generate encoder ...
[ERROR]   Run 3: TestArray.test_default_empty_collection:118 » Json failed to generate encoder ...
[INFO] 
[ERROR] com.jsoniter.output.TestArray.test_empty_array(com.jsoniter.output.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_empty_array:51 » Json failed to generate encoder for: class [Lj...
[ERROR]   Run 3: TestArray.test_empty_array:51 » Json failed to generate encoder for: class [Lj...
[INFO] 
[ERROR] com.jsoniter.output.TestArray.test_empty_collection(com.jsoniter.output.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_empty_collection:64 » Json failed to generate encoder for: clas...
[ERROR]   Run 3: TestArray.test_empty_collection:64 » Json failed to generate encoder for: clas...
[INFO] 
[ERROR] com.jsoniter.output.TestArray.test_gen_array(com.jsoniter.output.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_gen_array:26 » Json failed to generate encoder for: class [Ljav...
[ERROR]   Run 3: TestArray.test_gen_array:26 » Json failed to generate encoder for: class [Ljav...
[INFO] 
[ERROR] com.jsoniter.output.TestArray.test_hash_set(com.jsoniter.output.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_hash_set:107 » Json failed to generate encoder for: class java....
[ERROR]   Run 3: TestArray.test_hash_set:107 » Json failed to generate encoder for: class java....
[INFO] 
[ERROR] com.jsoniter.output.TestArray.test_indention(com.jsoniter.output.TestArray)
[ERROR]   Run 1: TestArray.test_indention:137 » Json failed to generate encoder for: class [I w...
[ERROR]   Run 2: TestArray.test_indention:137 » Json failed to generate encoder for: class [I w...
[ERROR]   Run 3: TestArray.test_indention:137 » Json failed to generate encoder for: class [I w...
[INFO] 
[ERROR] com.jsoniter.output.TestArray.test_indention_with_empty_array(com.jsoniter.output.TestArray)
[ERROR]   Run 1: TestArray.test_indention_with_empty_array:150 » Json failed to generate encode...
[ERROR]   Run 2: TestArray.test_indention_with_empty_array:150 » Json failed to generate encode...
[ERROR]   Run 3: TestArray.test_indention_with_empty_array:150 » Json failed to generate encode...
[INFO] 
[ERROR] com.jsoniter.output.TestArray.test_list_of_null(com.jsoniter.output.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_list_of_null:100 » Json failed to generate encoder for: Paramet...
[ERROR]   Run 3: TestArray.test_list_of_null:100 » Json failed to generate encoder for: Paramet...
[INFO] 
[ERROR] com.jsoniter.output.TestArray.test_list_of_objects(com.jsoniter.output.TestArray)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestArray.test_list_of_objects:83 » Json failed to generate encoder for: Param...
[ERROR]   Run 3: TestArray.test_list_of_objects:83 » Json failed to generate encoder for: Param...
[INFO] 
[ERROR] com.jsoniter.output.TestCollection.test_indention(com.jsoniter.output.TestCollection)
[ERROR]   Run 1: TestCollection.test_indention:26 » Json failed to generate encoder for: class ...
[ERROR]   Run 2: TestCollection.test_indention:26 » Json failed to generate encoder for: class ...
[ERROR]   Run 3: TestCollection.test_indention:26 » Json failed to generate encoder for: class ...
[INFO] 
[ERROR] com.jsoniter.output.TestCollection.test_indention_with_empty_array(com.jsoniter.output.TestCollection)
[ERROR]   Run 1: TestCollection.test_indention_with_empty_array:39 » Json failed to generate en...
[ERROR]   Run 2: TestCollection.test_indention_with_empty_array:39 » Json failed to generate en...
[ERROR]   Run 3: TestCollection.test_indention_with_empty_array:39 » Json failed to generate en...
[INFO] 
[ERROR] com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate(com.jsoniter.output.TestGenerics)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestGenerics.test_inherited_getter_is_not_duplicate:37 » Json failed to genera...
[ERROR]   Run 3: TestGenerics.test_inherited_getter_is_not_duplicate:37 » Json failed to genera...
[INFO] 
[ERROR] com.jsoniter.output.TestGenerics.test_wildcard(com.jsoniter.output.TestGenerics)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestGenerics.test_wildcard:55 » Json failed to generate encoder for: Parameter...
[ERROR]   Run 3: TestGenerics.test_wildcard:55 » Json failed to generate encoder for: Parameter...
[INFO] 
[ERROR] com.jsoniter.output.TestMap.test(com.jsoniter.output.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test:32 » Json failed to generate encoder for: class java.util.HashMap...
[ERROR]   Run 3: TestMap.test:32 » Json failed to generate encoder for: class java.util.HashMap...
[INFO] 
[ERROR] com.jsoniter.output.TestMap.test_MapKeyCodec(com.jsoniter.output.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test_MapKeyCodec:96 » Json failed to generate encoder for: java.util.M...
[ERROR]   Run 3: TestMap.test_MapKeyCodec:96 » Json failed to generate encoder for: java.util.M...
[INFO] 
[ERROR] com.jsoniter.output.TestMap.test_empty(com.jsoniter.output.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test_empty:39 » Json failed to generate encoder for: class java.util.H...
[ERROR]   Run 3: TestMap.test_empty:39 » Json failed to generate encoder for: class java.util.H...
[INFO] 
[ERROR] com.jsoniter.output.TestMap.test_enum_key(com.jsoniter.output.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test_enum_key:76 » Json failed to generate encoder for: java.util.Map<...
[ERROR]   Run 3: TestMap.test_enum_key:76 » Json failed to generate encoder for: java.util.Map<...
[INFO] 
[ERROR] com.jsoniter.output.TestMap.test_indention_with_empty_map(com.jsoniter.output.TestMap)
[ERROR]   Run 1: TestMap.test_indention_with_empty_map:135 » Json failed to generate encoder fo...
[ERROR]   Run 2: TestMap.test_indention_with_empty_map:135 » Json failed to generate encoder fo...
[ERROR]   Run 3: TestMap.test_indention_with_empty_map:135 » Json failed to generate encoder fo...
[INFO] 
[ERROR] com.jsoniter.output.TestMap.test_int_as_map_key(com.jsoniter.output.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test_int_as_map_key:141 » Json failed to generate encoder for: java.ut...
[ERROR]   Run 3: TestMap.test_int_as_map_key:141 » Json failed to generate encoder for: java.ut...
[INFO] 
[ERROR] com.jsoniter.output.TestMap.test_integer_key(com.jsoniter.output.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test_integer_key:63 » Json failed to generate encoder for: java.util.M...
[ERROR]   Run 3: TestMap.test_integer_key:63 » Json failed to generate encoder for: java.util.M...
[INFO] 
[ERROR] com.jsoniter.output.TestMap.test_multiple_keys(com.jsoniter.output.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test_multiple_keys:156 » Json failed to generate encoder for: class ja...
[ERROR]   Run 3: TestMap.test_multiple_keys:156 » Json failed to generate encoder for: class ja...
[INFO] 
[ERROR] com.jsoniter.output.TestMap.test_object_key(com.jsoniter.output.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test_object_key:148 » Json failed to generate encoder for: class java....
[ERROR]   Run 3: TestMap.test_object_key:148 » Json failed to generate encoder for: class java....
[INFO] 
[ERROR] com.jsoniter.output.TestMap.test_value_is_null(com.jsoniter.output.TestMap)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestMap.test_value_is_null:54 » Json failed to generate encoder for: class [I ...
[ERROR]   Run 3: TestMap.test_value_is_null:54 » Json failed to generate encoder for: class [I ...
[INFO] 
[ERROR] com.jsoniter.output.TestNested.test_array_of_objects(com.jsoniter.output.TestNested)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestNested.test_array_of_objects:38 » Json failed to generate encoder for: cla...
[ERROR]   Run 3: TestNested.test_array_of_objects:38 » Json failed to generate encoder for: cla...
[INFO] 
[ERROR] com.jsoniter.output.TestNested.test_collection_of_objects(com.jsoniter.output.TestNested)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestNested.test_collection_of_objects:47 » Json failed to generate encoder for...
[ERROR]   Run 3: TestNested.test_collection_of_objects:47 » Json failed to generate encoder for...
[INFO] 
[ERROR] com.jsoniter.output.TestNested.test_recursive_class(com.jsoniter.output.TestNested)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestNested.test_recursive_class:119 » Json failed to generate encoder for: cla...
[ERROR]   Run 3: TestNested.test_recursive_class:119 » Json failed to generate encoder for: cla...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_array_field(com.jsoniter.output.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_array_field:107 » Json failed to generate encoder for: class [...
[ERROR]   Run 3: TestObject.test_array_field:107 » Json failed to generate encoder for: class [...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_array_field_is_null(com.jsoniter.output.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_array_field_is_null:114 » Json failed to generate encoder for:...
[ERROR]   Run 3: TestObject.test_array_field_is_null:114 » Json failed to generate encoder for:...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_array_field_is_null_via_getter(com.jsoniter.output.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_array_field_is_null_via_getter:130 » Json failed to generate e...
[ERROR]   Run 3: TestObject.test_array_field_is_null_via_getter:130 » Json failed to generate e...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_collection_value_not_nullable(com.jsoniter.output.TestObject)
[ERROR]   Run 1: TestObject.test_collection_value_not_nullable:177 » Json failed to generate en...
[ERROR]   Run 2: TestObject.test_collection_value_not_nullable:169 » Json failed to generate en...
[ERROR]   Run 3: TestObject.test_collection_value_not_nullable:169 » Json failed to generate en...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_empty_object(com.jsoniter.output.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_empty_object:61 » Json failed to generate encoder for: class c...
[ERROR]   Run 3: TestObject.test_empty_object:61 » Json failed to generate encoder for: class c...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_enum(com.jsoniter.output.TestObject)
[ERROR]   Run 1: TestObject.test_enum:97 » Json failed to generate encoder for: class com.jsoni...
[ERROR]   Run 2: TestObject.test_enum:88 » Json failed to generate encoder for: class com.jsoni...
[ERROR]   Run 3: TestObject.test_enum:88 » Json failed to generate encoder for: class com.jsoni...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_field(com.jsoniter.output.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_field:36 » Json failed to generate encoder for: class com.json...
[ERROR]   Run 3: TestObject.test_field:36 » Json failed to generate encoder for: class com.json...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_indention(com.jsoniter.output.TestObject)
[ERROR]   Run 1: TestObject.test_indention:290 » Json failed to generate encoder for: class com...
[ERROR]   Run 2: TestObject.test_indention:290 » Json failed to generate encoder for: class com...
[ERROR]   Run 3: TestObject.test_indention:290 » Json failed to generate encoder for: class com...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_indention_with_empty_object(com.jsoniter.output.TestObject)
[ERROR]   Run 1: TestObject.test_indention_with_empty_object:325 » Json failed to generate enco...
[ERROR]   Run 2: TestObject.test_indention_with_empty_object:325 » Json failed to generate enco...
[ERROR]   Run 3: TestObject.test_indention_with_empty_object:325 » Json failed to generate enco...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_missing_notFirst(com.jsoniter.output.TestObject)
[ERROR]   Run 1: TestObject.test_missing_notFirst:340 » Json failed to generate encoder for: cl...
[ERROR]   Run 2: TestObject.test_missing_notFirst:340 » Json failed to generate encoder for: cl...
[ERROR]   Run 3: TestObject.test_missing_notFirst:340 » Json failed to generate encoder for: cl...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_name_conflict(com.jsoniter.output.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_name_conflict:252 » Json failed to generate encoder for: class...
[ERROR]   Run 3: TestObject.test_name_conflict:252 » Json failed to generate encoder for: class...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_not_nullable(com.jsoniter.output.TestObject)
[ERROR]   Run 1: TestObject.test_not_nullable:147 » Json failed to generate encoder for: class ...
[ERROR]   Run 2: TestObject.test_not_nullable:147 » Json failed to generate encoder for: class ...
[ERROR]   Run 3: TestObject.test_not_nullable:147 » Json failed to generate encoder for: class ...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_not_omit_null(com.jsoniter.output.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_not_omit_null:216 » Json failed to generate encoder for: class...
[ERROR]   Run 3: TestObject.test_not_omit_null:216 » Json failed to generate encoder for: class...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_null_field(com.jsoniter.output.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_null_field:72 » Json failed to generate encoder for: class com...
[ERROR]   Run 3: TestObject.test_null_field:72 » Json failed to generate encoder for: class com...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_omit_default(com.jsoniter.output.TestObject)
[ERROR]   Run 1: TestObject.test_omit_default:363 » Json failed to generate encoder for: class ...
[ERROR]   Run 2: TestObject.test_omit_default:363 » Json failed to generate encoder for: class ...
[ERROR]   Run 3: TestObject.test_omit_default:363 » Json failed to generate encoder for: class ...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_omit_null(com.jsoniter.output.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_omit_null:229 » Json failed to generate encoder for: class com...
[ERROR]   Run 3: TestObject.test_omit_null:229 » Json failed to generate encoder for: class com...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_omit_selft_defined(com.jsoniter.output.TestObject)
[ERROR]   Run 1: TestObject.test_omit_selft_defined:410 » Json failed to generate encoder for: ...
[ERROR]   Run 2: TestObject.test_omit_selft_defined:410 » Json failed to generate encoder for: ...
[ERROR]   Run 3: TestObject.test_omit_selft_defined:410 » Json failed to generate encoder for: ...
[INFO] 
[ERROR] com.jsoniter.output.TestObject.test_transient_field_getter(com.jsoniter.output.TestObject)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestObject.test_transient_field_getter:422 » Json failed to generate encoder f...
[ERROR]   Run 3: TestObject.test_transient_field_getter:422 » Json failed to generate encoder f...
[INFO] 
[ERROR] com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder(com.jsoniter.output.TestSpiPropertyEncoder)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestSpiPropertyEncoder.test_PropertyEncoder:25 » Json failed to generate encod...
[ERROR]   Run 3: TestSpiPropertyEncoder.test_PropertyEncoder:25 » Json failed to generate encod...
[INFO] 
[ERROR] com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal(com.jsoniter.output.TestSpiPropertyEncoder)
[INFO]   Run 1: PASS
[ERROR]   Run 2: TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal:41 » Json failed ...
[ERROR]   Run 3: TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal:41 » Json failed ...
[INFO] 
[INFO] 
[ERROR] Tests run: 687, Failures: 2, Errors: 148, Skipped: 0
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  54.923 s
[INFO] Finished at: 2019-09-29T14:27:18-05:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.21.0:test (default-test) on project jsoniter: There are test failures.
[ERROR] 
[ERROR] Please refer to /private/tmp/json-iterator/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
[ERROR] ExecutionException The forked VM terminated without properly saying goodbye. VM crash or System.exit called?
[ERROR] Command was /bin/sh -c cd /private/tmp/json-iterator && /Library/Java/JavaVirtualMachines/jdk-13.jdk/Contents/Home/bin/java -Xmx1024M -javaagent:/Users/thiensonho/.m2/repository/org/jacoco/org.jacoco.agent/0.8.4/org.jacoco.agent-0.8.4-runtime.jar=destfile=/private/tmp/json-iterator/target/jacoco.exec,append=true,output=file -jar /private/tmp/json-iterator/target/surefire/surefirebooter7209837102730883464.jar /private/tmp/json-iterator/target/surefire 2019-09-29T14-26-32_451-jvmRun1 surefire5896727234684907969tmp surefire_13277888290917263986tmp
[ERROR] Process Exit Code: 0
[ERROR] org.apache.maven.surefire.booter.SurefireBooterForkException: ExecutionException The forked VM terminated without properly saying goodbye. VM crash or System.exit called?
[ERROR] Command was /bin/sh -c cd /private/tmp/json-iterator && /Library/Java/JavaVirtualMachines/jdk-13.jdk/Contents/Home/bin/java -Xmx1024M -javaagent:/Users/thiensonho/.m2/repository/org/jacoco/org.jacoco.agent/0.8.4/org.jacoco.agent-0.8.4-runtime.jar=destfile=/private/tmp/json-iterator/target/jacoco.exec,append=true,output=file -jar /private/tmp/json-iterator/target/surefire/surefirebooter7209837102730883464.jar /private/tmp/json-iterator/target/surefire 2019-09-29T14-26-32_451-jvmRun1 surefire5896727234684907969tmp surefire_13277888290917263986tmp
[ERROR] Process Exit Code: 0
[ERROR] 	at org.apache.maven.plugin.surefire.booterclient.ForkStarter.awaitResultsDone(ForkStarter.java:494)
[ERROR] 	at org.apache.maven.plugin.surefire.booterclient.ForkStarter.runSuitesForkPerTestSet(ForkStarter.java:441)
[ERROR] 	at org.apache.maven.plugin.surefire.booterclient.ForkStarter.run(ForkStarter.java:293)
[ERROR] 	at org.apache.maven.plugin.surefire.booterclient.ForkStarter.run(ForkStarter.java:245)
[ERROR] 	at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1149)
[ERROR] 	at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:978)
[ERROR] 	at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:854)
[ERROR] 	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
[ERROR] 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
[ERROR] 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
[ERROR] 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
[ERROR] 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
[ERROR] 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
[ERROR] 	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
[ERROR] 	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
[ERROR] 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
[ERROR] 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
[ERROR] 	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
[ERROR] 	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:956)
[ERROR] 	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)
[ERROR] 	at org.apache.maven.cli.MavenCli.main(MavenCli.java:192)
[ERROR] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[ERROR] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[ERROR] 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[ERROR] 	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
[ERROR] 	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
[ERROR] 	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
[ERROR] 	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
[ERROR] 	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
[ERROR] Caused by: org.apache.maven.surefire.booter.SurefireBooterForkException: The forked VM terminated without properly saying goodbye. VM crash or System.exit called?
[ERROR] Command was /bin/sh -c cd /private/tmp/json-iterator && /Library/Java/JavaVirtualMachines/jdk-13.jdk/Contents/Home/bin/java -Xmx1024M -javaagent:/Users/thiensonho/.m2/repository/org/jacoco/org.jacoco.agent/0.8.4/org.jacoco.agent-0.8.4-runtime.jar=destfile=/private/tmp/json-iterator/target/jacoco.exec,append=true,output=file -jar /private/tmp/json-iterator/target/surefire/surefirebooter7209837102730883464.jar /private/tmp/json-iterator/target/surefire 2019-09-29T14-26-32_451-jvmRun1 surefire5896727234684907969tmp surefire_13277888290917263986tmp
[ERROR] Process Exit Code: 0
[ERROR] 	at org.apache.maven.plugin.surefire.booterclient.ForkStarter.fork(ForkStarter.java:671)
[ERROR] 	at org.apache.maven.plugin.surefire.booterclient.ForkStarter.fork(ForkStarter.java:533)
[ERROR] 	at org.apache.maven.plugin.surefire.booterclient.ForkStarter.access$600(ForkStarter.java:115)
[ERROR] 	at org.apache.maven.plugin.surefire.booterclient.ForkStarter$2.call(ForkStarter.java:429)
[ERROR] 	at org.apache.maven.plugin.surefire.booterclient.ForkStarter$2.call(ForkStarter.java:406)
[ERROR] 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
[ERROR] 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
[ERROR] 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
[ERROR] 	at java.base/java.lang.Thread.run(Thread.java:830)
[ERROR] 
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
